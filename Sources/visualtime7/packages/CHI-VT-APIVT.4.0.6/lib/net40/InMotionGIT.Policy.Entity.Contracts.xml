<?xml version="1.0"?>
<doc>
<assembly>
<name>
InMotionGIT.Policy.Entity.Contracts
</name>
</assembly>
<members>
<member name="T:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_1007">
<summary>
  Busca una cadena traducida similar a RUT del cliente no está registrado en el sistema.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_2051">
<summary>
  Busca una cadena traducida similar a El cliente esta muerto, no puede asignarlo.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_2063">
<summary>
  Busca una cadena traducida similar a El cliente seleccionado se encuentra bloqueado.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_3634">
<summary>
  Busca una cadena traducida similar a Código del intermediario no esta registrado.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_3656">
<summary>
  Busca una cadena traducida similar a Agente no válido para la fecha de ejecución de transacción.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_3792">
<summary>
  Busca una cadena traducida similar a Faltan figuras requeridas.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_3793">
<summary>
  Busca una cadena traducida similar a La cantidad de registros con la misma figura no puede exceder del límite.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_3794">
<summary>
  Busca una cadena traducida similar a El código debe estar lleno.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_3795">
<summary>
  Busca una cadena traducida similar a El cliente no tiene toda la información requerida según el producto.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_38004">
<summary>
  Busca una cadena traducida similar a El asegurado debe corresponder a una persona natural.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_55931">
<summary>
  Busca una cadena traducida similar a Fecha de ingreso del cliente no puede ser posterior a la fecha efecto de la pól..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_55974">
<summary>
  Busca una cadena traducida similar a El cliente indicado debe ser una persona natural.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_55975">
<summary>
  Busca una cadena traducida similar a El cliente debe corresponder a un sexo opuesto al indicado como asegurado.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_55976">
<summary>
  Busca una cadena traducida similar a La fecha de nacimiento debe ser mayor a la del asegurado.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_55977">
<summary>
  Busca una cadena traducida similar a La fecha de nacimiento debe ser menor a la del asegurado.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_55978">
<summary>
  Busca una cadena traducida similar a La edad del cliente debe estar dentro del rango permitido por el producto.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_60189">
<summary>
  Busca una cadena traducida similar a Si se excluye el asegurado se excluiran las coberturas asociadas al mismo.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_60190">
<summary>
  Busca una cadena traducida similar a Debe asociar al menos un recargo al cliente según el rating asociado al mismo.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_750100">
<summary>
  Busca una cadena traducida similar a El cliente ya está registrado en este o en otro certificado..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_80153">
<summary>
  Busca una cadena traducida similar a La condición de fumador del cliente no está informada, se indicará No Fumador.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_80155">
<summary>
  Busca una cadena traducida similar a La edad del contratante no debe ser menor que la edad permitida por el producto.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_80175">
<summary>
  Busca una cadena traducida similar a El cliente debe ser el igual al del.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_9000015">
<summary>
  Busca una cadena traducida similar a La clasificación del cliente no permite asegurarlo.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.My.Resources.Resources.Msg_Dummy">
<summary>
  Busca una cadena traducida similar a .
</summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumACEPTA_DOCTYPEChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumACEPTA_DOCUMENTChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumActiveLifeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumAutomaticPaymentPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumAutomobileInformationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumAutomobileLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumBasicInsuredAmountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumBeneficiaryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCaseMassiveLoadAdditionalInformationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCaseMassiveLoadCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCaseMassiveLoadDocumentChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCaseMassiveLoadErrorChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCaseMassiveLoadPhoneChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCasesMassiveLoadPoliciesPerPartnerChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCertificateStatusChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumClauseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumClient_tmpChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCoInsuranceChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCommissionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCommissionPerPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCounterguaranteeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCoverageGroupChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCoveragePolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCoverageWithCalculatedPremiumChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCreditLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCurrencyPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDataNormalizationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDetailMerchandiseTransportedChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDetailsOfSpecificRiskGroupPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDetailsOfSpecificRisksByDivisionOfGroupPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDetailSpecificRiskCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDiscountExtraPremiumTaxInGroupLevelChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDiscountExtraPremiumTaxInPolicyLevelChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDiscountExtraPremiumTaxOfPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumDocumentRequestedLifePolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumEntriesSavingAccountAPVChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumEntryPolicyInvestmentFundChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumExcludedIllnessInHealthPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumExtraPremiumDiscountByInsuredChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumFireLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumFireLineOfBusinessDeclarationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumFlatRateOFTaxChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumFranchiseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumFundOfMainPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumGroupChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumGuaranteedValueChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumGuarranteedSavingsPolChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumHealthLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumHistoryStatesOfCertificateChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumHomeLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumIllustrationDetailOfNonTraditionalLifePolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumIllustrationOfNonTraditionalLifePolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumINDEXCERChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumIndexInformationAppliedToThePolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumInsuredPersonsByCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumInvestmentFundRelatedToPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumLastDetailCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumLifeCoverageVariationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumLifeInsuranceCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumLifeLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumLifeLineOfBusinessCurrentValueChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumLoansLifeInsuranceChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumMachineryLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumMassiveLoadAddressCaseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumMassiveLoadCaseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumMassiveLoadCertificateCaseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumMassiveLoadRolCaseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumModuleChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumMultiRiskLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumOutstandingBillingTransactionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumOutstandingBillingTransactionsDetailChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumParticularDataOfaPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPaymentAgreementByPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPaymentPlanForMonthlyContributionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPaymentsPlanChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPER_DEPOSIT_MONTHChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPolicyCheckingAccountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPolicyHistoryChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPolicyInstallationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPolicyProtectionElementChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPolicyWindowChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPROJECTVULChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPROJECTVUL_DETChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumPropertyInsuredChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRateAndDeductibleForTransportMerchandiseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRatingTableTraditionalLifeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumReinsuranceDistributionChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRequestChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRiskInformationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRiskyActivityChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRoleChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumSalesExecutiveChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumSavingAccountPolicyMasterChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumShipLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumSpecificationsForLifeInsuranceChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumSpecificRiskCoverageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumSpecificRiskGroupPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumSpecificRisksByDivisionOfGroupPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumSquaremeterValueChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumStipendPolicyChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTab_in_buChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTemporalDiscountSurchageCalculationChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTemporaryProvinceTaxisChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTheftChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTransportationModeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTransportationRoutesMadeChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTransportedMerchandiseChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTransportLineOfBusinessChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTransportRoutesInsuredChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTRenewPolChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumUl_curr_acc_polChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumUnderwritingCaseStageChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumUnitLinkEntrySavingAccountChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumVehiclesInAutoChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumVehiclesInsuredValuesInAutoChild">
 <summary>
 Define classes hierarchically.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumCommissionType">
 <summary>
 Tipo de comisión de pólizas
 </summary>
 <remarks>DataSource: table47</remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumInsuredStatus">
 <summary>
 Estado del asegurado de una poliza
 </summary>
 <remarks>DataSource: Table5561</remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumReceiptOfGenerationIndicator">
 <summary>
 Indicador de generacion de recibos 
 </summary>
 <remarks>
 Valores fijos.
 Tabla: Policy. Campo: sReceipt_ind.  Nombre: ReceiptOfGenerationIndicator
 </remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfBillForGroups.Policy">
 <summary>
 El recibo se calcula por póliza
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfBillForGroups.Certificate">
 <summary>
 El recibo se calcula por certificado 
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfBillForGroups.RiskSituation">
 <summary>
 El recibo se calcula por situación de riesgo
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfRenewalForGroups.SimultaneousRenewal">
 <summary>
 La renovación de todos los certificados de la póliza se realiza de forma simultánea
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfRenewalForGroups.IndependentRenewal">
 <summary>
 La renovación de cada certificado de la póliza es independiente
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfRenewalForGroups.NoRenewal">
 <summary>
 El certificado no renueva
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfUnit.NoUnit">
 <summary>
 Ninguno
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfUnit.YearUnit">
 <summary>
 Años 
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfUnit.MonthUnit">
 <summary>
 Meses
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfUnit.WeekUnit">
 <summary>
 Semanas
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumTypeOfUnit.DaysUnit">
 <summary>
 Dias
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRecordType.Proposal">
 <summary>
 Propuesta 
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRecordType.Policy">
 <summary>
 Póliza
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRecordType.Quotation">
 <summary>
 Cotización
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRecordType.QuoteOfModification">
 <summary>
 Cotización de modificación
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRecordType.QuoteOfRenewal">
 <summary>
 Cotización de renovación
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRecordType.ProposedAmendment">
 <summary>
 Propuesta de modificación
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRecordType.ProposedRenewal">
 <summary>
 Propuesta de renovación
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Enumerations.EnumRecordType.SpecialMotions">
 <summary>
 Propuestas especiales (solicitudes de anulaciones,rehabilitaciones, prorrogado, saldado, préstamos,rescates)
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE">
 <summary>
 
 </summary>
<remarks>Data-source is 'ACEPTA_DOCTYPE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.CreateNewACEPTA_DOCTYPE">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._AceptaDocumentType">
<summary>
Document type to be saved in Acepta.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._Description">
<summary>
Document type description.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE._ShortDescription">
<summary>
Abbreviated description of a code
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.AceptaDocumentType">
<summary>
Document type to be saved in Acepta. (NDOCTYPE)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCTYPE.NDOCTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCTYPE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCTYPE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.Description">
<summary>
Document type description. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCTYPE.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCTYPE.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.ShortDescription">
<summary>
Abbreviated description of a code (SSHORT_DES)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCTYPE.SSHORT_DES'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.Compare(InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ACEPTA_DOCTYPEItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPE.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPECollection">
 <summary>
 Collection for ACEPTA_DOCTYPE class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPECollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPECollection.AddACEPTA_DOCTYPE">
 <summary>
 Add an instance of class 'ACEPTA_DOCTYPE' in the ACEPTA_DOCTYPECollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPECollection.Compare(InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPECollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPECollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPECollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCTYPECollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT">
 <summary>
 
 </summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.CreateNewACEPTA_DOCUMENT">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._DocumentCode">
<summary>
Code generated by Acepta to identify documents.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._AceptaDocumentType">
<summary>
Document type to be saved in Acepta.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._RecordStatus">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._SAUDITCODASE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT._SAUDITCODCONT">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.DocumentCode">
<summary>
Code generated by Acepta to identify documents. (SDOCCODE)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.SDOCCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.AceptaDocumentType">
<summary>
Document type to be saved in Acepta. (NDOCTYPE)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.NDOCTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.RecordStatus">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.SAUDITCODASE">
<summary>
.
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.SAUDITCODASE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.SAUDITCODCONT">
<summary>
.
</summary>
<remarks>Data-source is 'ACEPTA_DOCUMENT.SAUDITCODCONT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.Compare(InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ACEPTA_DOCUMENTItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENT.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENTCollection">
 <summary>
 Collection for ACEPTA_DOCUMENT class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENTCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENTCollection.AddACEPTA_DOCUMENT">
 <summary>
 Add an instance of class 'ACEPTA_DOCUMENT' in the ACEPTA_DOCUMENTCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENTCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENTCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENTCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENTCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ACEPTA_DOCUMENTCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ActiveLife">
 <summary>
 Specific Information on Special Life Policies.
 </summary>
<remarks>Data-source is 'ACTIVELIFE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.CreateNewActiveLife">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._Certificate">
<summary>
Number identifying the Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._DeathInsuredAmount">
<summary>
Sum insured of death.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._ClientID">
<summary>
Code identifying the holder client of bills of the policy/certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._TypeOfDuration">
<summary>
Type of insurance period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._InsurancePeriod">
<summary>
Insurance Period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._BasicPremiumAmount">
<summary>
Basic Annual Premium Amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._Amount">
<summary>
Discount amount of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._Saldprog">
<summary>
Extended term insurance or paid-up policy indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._ProjectedProfitability">
<summary>
Projected profitability.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._WarMinInt">
<summary>
Guaranteed profitability.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._ExtendedTermInsuranceEffectiveDate">
<summary>
New effective date after applying the extended term insurance (ETI).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._TypeOfIndemnity">
<summary>
Type of Indemnity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._ProfitabilityType">
<summary>
Code of profitability type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._MinimumPremiumAmount">
<summary>
Minimum premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._InsuredAmount">
<summary>
Sum insured amount of the Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._PremiumAmountAgreed">
<summary>
Projected premium amount of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._EffectiveDate">
<summary>
Effective date of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._IssueDate">
<summary>
Date when the policy/certificate is written.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._Transaction">
<summary>
Number of transaction recorded in the history of the policy (policy_his.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._CancellationCode">
<summary>
Policy/Certificate Cancellation Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._Group">
<summary>
Code of the Grouping within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._AnnualAmount">
<summary>
Annual amount of the agreed premium suggested.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._Usercode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._Agreement">
<summary>
Code of the agreement related to the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._PolicyValueSuggested">
<summary>
Policy value as the agreed premium suggested.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._PolicyValue">
<summary>
Policy value as the agreed premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._InsCalPre">
<summary>
Indicator of recalculation of the agreed premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._FrequencyPaymentPremium">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._CodeWayPay">
<summary>
Code of The Collection Way Sole values as per table 5002
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ActiveLife._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Certificate">
<summary>
Number identifying the Certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.DeathInsuredAmount">
<summary>
Sum insured of death. (NCAPITALDEATH)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NCAPITALDEATH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.ClientID">
<summary>
Code identifying the holder client of bills of the policy/certificate (SCLIENT)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.TypeOfDuration">
<summary>
Type of insurance period. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.TypeOfDurationEnum">
<summary>
Type of insurance period.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDuration'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.TypeOfDurationEnumText">
<summary>
Type of insurance period.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.InsurancePeriod">
<summary>
Insurance Period. (NINSURTIME)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NINSURTIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.BasicPremiumAmount">
<summary>
Basic Annual Premium Amount. (NPREMIUMBAS)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NPREMIUMBAS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Amount">
<summary>
Discount amount of the policy. (NSALD_AMOUNT)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NSALD_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Saldprog">
<summary>
Extended term insurance or paid-up policy indicator. (SSALD_PROG)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.SSALD_PROG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.ProjectedProfitability">
<summary>
Projected profitability. (NINTPROJECT)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NINTPROJECT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.WarMinInt">
<summary>
Guaranteed profitability. (NWARMININT)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NWARMININT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.ExtendedTermInsuranceEffectiveDate">
<summary>
New effective date after applying the extended term insurance (ETI). (DPROG_DATE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.DPROG_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.TypeOfIndemnity">
<summary>
Type of Indemnity. (NOPTION)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NOPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.ProfitabilityType">
<summary>
Code of profitability type. (NTYPEINVEST)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NTYPEINVEST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.MinimumPremiumAmount">
<summary>
Minimum premium amount. (NPREMIMIN)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NPREMIMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.InsuredAmount">
<summary>
Sum insured amount of the Policy/Certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.PremiumAmountAgreed">
<summary>
Projected premium amount of the policy. (NPREMDEAL)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NPREMDEAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.EffectiveDate">
<summary>
Effective date of the policy/certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.IssueDate">
<summary>
Date when the policy/certificate is written. (DISSUEDAT)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Transaction">
<summary>
Number of transaction recorded in the history of the policy (policy_his. (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.CancellationCode">
<summary>
Policy/Certificate Cancellation Code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Group">
<summary>
Code of the Grouping within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.AnnualAmount">
<summary>
Annual amount of the agreed premium suggested. (NPRSUGEST)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NPRSUGEST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Usercode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Agreement">
<summary>
Code of the agreement related to the policy. (NAGREEMENT)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NAGREEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.PolicyValueSuggested">
<summary>
Policy value as the agreed premium suggested. (NVPPRSUG)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NVPPRSUG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.PolicyValue">
<summary>
Policy value as the agreed premium. (NVPPRDEAL)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.NVPPRDEAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.InsCalPre">
<summary>
Indicator of recalculation of the agreed premium. (SINSCALPRE)..
</summary>
<remarks>Data-source is 'ACTIVELIFE.SINSCALPRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.FrequencyPaymentPremium">
<summary>
 (NPAYFREQ)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'ACTIVELIFE.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.FrequencyPaymentPremiumEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'FrequencyPaymentPremium'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.FrequencyPaymentPremiumEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.CodeWayPay">
<summary>
Code of The Collection Way Sole values as per table 5002 (NWAY_PAY)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'ACTIVELIFE.NWAY_PAY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.Compare(InMotionGIT.Policy.Entity.Contracts.ActiveLife,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ActiveLifeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLife.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.TypeOfDurationDescription">
 <summary>
 Type of insurance period.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.TypeOfIndemnityDescription">
 <summary>
 Type of Indemnity.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5519'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLife.ProfitabilityTypeDescription">
 <summary>
 Code of profitability type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5520'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ActiveLifeCollection">
 <summary>
 Collection for ActiveLife class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLifeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLifeCollection.AddActiveLife">
 <summary>
 Add an instance of class 'ActiveLife' in the ActiveLifeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLifeCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ActiveLifeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ActiveLifeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLifeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ActiveLifeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy">
 <summary>
 Details for automatic payment by bank or credit card associated with the policy.
 </summary>
<remarks>Data-source is 'DIR_DEBIT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CreateNewAutomaticPaymentPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._BankAccount">
<summary>
Number of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._BankCode">
<summary>
Code of the bank.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._ClientID">
<summary>
Code of the owner of the bank account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._CreditCardNumber">
<summary>
Credit Card Number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._CreditCardType">
<summary>
Code of Credit Card Type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._DirectDebitType">
<summary>
Type of direct debit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._ExpirationDate">
<summary>
Expiration date of the credit card.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._AuthorizationNumber">
<summary>
Authorization number for the direct debit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._ReusedAuthorizationNumber">
<summary>
Indicator of authorization number reused.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._TypeOfBankAccount">
<summary>
Type of bank account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._CurrencyCode">
<summary>
Code of The Currency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._CBU">
<summary>
CBU Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._CommerceNumber">
<summary>
Commerce Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._AccountsOrder">
<summary>
Order of the bank accounts
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._BankAgency">
<summary>
Code of the bank agency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._SWIFT">
<summary>
Code of Society for Worldwide Interbank Financial Telecommunication
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.BankAccount">
<summary>
Number of the bank account. (SACCOUNT)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.SACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.BankCode">
<summary>
Code of the bank. (NBANKEXT)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.NBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.ClientID">
<summary>
Code of the owner of the bank account. (SCLIENT)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CreditCardNumber">
<summary>
Credit Card Number. (SCREDI_CARD)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.SCREDI_CARD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CreditCardType">
<summary>
Code of Credit Card Type. (NTYP_CRECARD)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.NTYP_CRECARD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.DirectDebitType">
<summary>
Type of direct debit. (STYP_DIRDEB)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.STYP_DIRDEB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.ExpirationDate">
<summary>
Expiration date of the credit card. (DCARDEXPIR)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.DCARDEXPIR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.AuthorizationNumber">
<summary>
Authorization number for the direct debit. (SBANKAUTH)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.SBANKAUTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.ReusedAuthorizationNumber">
<summary>
Indicator of authorization number reused. (SREUSE)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.SREUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.TypeOfBankAccount">
<summary>
Type of bank account. (NTYP_ACC)..
</summary>
<remarks>Data-source is 'DIR_DEBIT.NTYP_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CurrencyCode">
<summary>
Code of The Currency (NCURRENCY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CBU">
<summary>
CBU Code (SCBU)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT.SCBU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CommerceNumber">
<summary>
Commerce Number (NCOMMERNUM)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT.NCOMMERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.AccountsOrder">
<summary>
Order of the bank accounts (NORDER)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT.NORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.BankAgency">
<summary>
Code of the bank agency (NBK_AGENCY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT.NBK_AGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.SWIFT">
<summary>
Code of Society for Worldwide Interbank Financial Telecommunication (SSWIFT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DIR_DEBIT.SSWIFT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AutomaticPaymentPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.BankCodeDescription">
 <summary>
 Code of the bank.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.CreditCardTypeDescription">
 <summary>
 Code of Credit Card Type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE183'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.Month">
<summary>
Expiration month of the credit card.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicy.Year">
<summary>
Expiration Year of the credit card.
</summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicyCollection">
 <summary>
 Collection for AutomaticPaymentPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicyCollection.AddAutomaticPaymentPolicy">
 <summary>
 Add an instance of class 'AutomaticPaymentPolicy' in the AutomaticPaymentPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomaticPaymentPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation">
 <summary>
 Contains all information from the automobile.
 </summary>
<remarks>Data-source is 'AUTO_DB'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.CreateNewAutomobileInformation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._LicensePlateType">
<summary>
Type of License Plate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._LicensePlate">
<summary>
Number of the License Plate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._Chassis">
<summary>
Number of the vehicle chassis.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._EngineSerialNumber">
<summary>
Number identifying the engine of the insured vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._VehicleOwner">
<summary>
Code of the Client owner of the Vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._ClientID">
<summary>
Code of the policy holder or claimant related to the claim case.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._Color">
<summary>
Color of the vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._VehicleCode">
<summary>
Code of The Insured Vehicle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._nVestatus">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._YearOfManufactured">
<summary>
Year when the vehicle was manufactured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._VehicleType">
<summary>
Vehicle type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._AnnualMileage">
<summary>
Annual mileage travelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._Mileage">
<summary>
Current mileage travelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._UsualParkingPlace">
<summary>
Usual parking place for the vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._RoadType">
<summary>
Type of roads where the vehicle will be used.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._Ordinance24449">
<summary>
Indicator of 24449 ordinance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._FuelType">
<summary>
Fuel type used.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._AlarmIndicator">
<summary>
Alarm system indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._sDigit">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._TypeOfSpecialLicensePlates">
<summary>
Type of special license plates.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._NVEHBRAND">
<summary>
NVEHBRAND
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._CodeGroupAutomobile">
<summary>
Code of the group of the automobile
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._SVEHMODEL">
<summary>
SVEHMODEL
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.LicensePlateType">
<summary>
Type of License Plate. (SLICENSE_TY)..
</summary>
<remarks>Data-source is 'AUTO_DB.SLICENSE_TY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.LicensePlate">
<summary>
Number of the License Plate. (SREGIST)..
</summary>
<remarks>Data-source is 'AUTO_DB.SREGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.Chassis">
<summary>
Number of the vehicle chassis. (SCHASSIS)..
</summary>
<remarks>Data-source is 'AUTO_DB.SCHASSIS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.EngineSerialNumber">
<summary>
Number identifying the engine of the insured vehicle. (SMOTOR)..
</summary>
<remarks>Data-source is 'AUTO_DB.SMOTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.VehicleOwner">
<summary>
Code of the Client owner of the Vehicle. (SVEH_OWN)..
</summary>
<remarks>Data-source is 'AUTO_DB.SVEH_OWN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.ClientID">
<summary>
Code of the policy holder or claimant related to the claim case. (SCLIENT)..
</summary>
<remarks>Data-source is 'AUTO_DB.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.Color">
<summary>
Color of the vehicle. (SCOLOR)..
</summary>
<remarks>Data-source is 'AUTO_DB.SCOLOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.VehicleCode">
<summary>
Code of The Insured Vehicle (SVEHCODE)..
</summary>
<remarks>Data-source is 'AUTO_DB.SVEHCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.nVestatus">
<summary>
.
</summary>
<remarks>Data-source is 'AUTO_DB.NVESTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'AUTO_DB.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'AUTO_DB.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'AUTO_DB.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.YearOfManufactured">
<summary>
Year when the vehicle was manufactured. (NYEAR)..
</summary>
<remarks>Data-source is 'AUTO_DB.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.VehicleType">
<summary>
Vehicle type. (NVEHTYPE)..
</summary>
<remarks>Data-source is 'AUTO_DB.NVEHTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.AnnualMileage">
<summary>
Annual mileage travelled. (NANUALKM)..
</summary>
<remarks>Data-source is 'AUTO_DB.NANUALKM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.Mileage">
<summary>
Current mileage travelled. (NACTUALKM)..
</summary>
<remarks>Data-source is 'AUTO_DB.NACTUALKM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.UsualParkingPlace">
<summary>
Usual parking place for the vehicle. (NKEEPVEH)..
</summary>
<remarks>Data-source is 'AUTO_DB.NKEEPVEH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.RoadType">
<summary>
Type of roads where the vehicle will be used. (NROADTYPE)..
</summary>
<remarks>Data-source is 'AUTO_DB.NROADTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.Ordinance24449">
<summary>
Indicator of 24449 ordinance. (NINDLAW)..
</summary>
<remarks>Data-source is 'AUTO_DB.NINDLAW'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.FuelType">
<summary>
Fuel type used. (NFUELTYPE)..
</summary>
<remarks>Data-source is 'AUTO_DB.NFUELTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.AlarmIndicator">
<summary>
Alarm system indicator. (NINDALARM)..
</summary>
<remarks>Data-source is 'AUTO_DB.NINDALARM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.sDigit">
<summary>
.
</summary>
<remarks>Data-source is 'AUTO_DB.SDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.TypeOfSpecialLicensePlates">
<summary>
Type of special license plates. (NLIC_SPECIAL)..
</summary>
<remarks>Data-source is 'AUTO_DB.NLIC_SPECIAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.NVEHBRAND">
<summary>
NVEHBRAND.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO_DB.NVEHBRAND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.CodeGroupAutomobile">
<summary>
Code of the group of the automobile (NGROUPVEH)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO_DB.NGROUPVEH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.SVEHMODEL">
<summary>
SVEHMODEL.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO_DB.SVEHMODEL'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.Compare(InMotionGIT.Policy.Entity.Contracts.AutomobileInformation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AutomobileInformationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.LicensePlateTypeDescription">
 <summary>
 Type of License Plate.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE80'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.nVestatusDescription">
 <summary>
 
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE220'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.VehicleTypeDescription">
 <summary>
 Vehicle type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE226'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformation.TypeOfSpecialLicensePlatesDescription">
 <summary>
 Type of special license plates.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5594'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.AutomobileInformationCollection">
 <summary>
 Collection for AutomobileInformation class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformationCollection.AddAutomobileInformation">
 <summary>
 Add an instance of class 'AutomobileInformation' in the AutomobileInformationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformationCollection.Compare(InMotionGIT.Policy.Entity.Contracts.AutomobileInformationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileInformationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileInformationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness">
 <summary>
 Particular information on automobile policies.
 </summary>
<remarks>Data-source is 'AUTO'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CreateNewAutomobileLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._DrivingZone">
<summary>
Circulation zone.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._VehicleType">
<summary>
Vehicle type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Chassis">
<summary>
Number of the vehicle chassis.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Color">
<summary>
Color of the vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._LicensePlate">
<summary>
Number of the License Plate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._LicensePlateType">
<summary>
Type of License Plate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._EngineSerialNumber">
<summary>
Number identifying the engine of the insured vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._VehicleCode">
<summary>
Code of The Insured Vehicle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._EffectiveDate">
<summary>
Effective date of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Premium">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ValueOfTheVehicle">
<summary>
Value of the insured vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ValueOfAccesories">
<summary>
Value of accessories of the insured vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._TransactionNumber">
<summary>
Transaction number recorded in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._CancellationCode">
<summary>
Code of cancellation of the specific information record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Seats">
<summary>
Number of seats in the vehicle insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._GrossWeight">
<summary>
Gross weight in metric tons.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._YearOfManufactured">
<summary>
Year when the vehicle was manufactured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._NewVehicleIndicator">
<summary>
New vehicle indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Reference">
<summary>
Reference number identifying the process as unique.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ValueType">
<summary>
Type of vehicle value.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._CodeOfBonusMalus">
<summary>
Code of bonus-malus (no claims).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._AllowedDeductible">
<summary>
Percentage of deductible allowed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._UseOfVehicle">
<summary>
Use of vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._PercentageToAppliToValuesInTable">
<summary>
Percentage to be applied on the vehicle values in the table to calculate the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._LastClaimDate">
<summary>
Date when the vehicle was last involved in a claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._sDigit">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._VehicleIsAlsoInAnotherPolicy">
<summary>
It Indicates that the vehicle is also in another policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._NoTickectsInTwelveMonths">
<summary>
Indicates that the policy hasn&#39;t had a traffic ticket in the last twelve months.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Promotion">
<summary>
Car special offer indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._TypeOfSpecialLicensePlates">
<summary>
Type of special license plates.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ReturnedAuto">
<summary>
It indicates if the auto was returned.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._SoapPremiumCollected">
<summary>
Premium collected on sale SOAP
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._HibridVehicleIndicator">
<summary>
Hibrid vehicle indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._EngineVehicle">
<summary>
Engine of the vehicle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Dealer">
<summary>
Dealer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ClientIDSeller">
<summary>
Seller
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._Seller">
<summary>
Seller
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._CorrespondsDescriptionVehiclePrinted">
<summary>
Corresponds to the description of the vehicle to be printed
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._TypeVehicleValue">
<summary>
Type of vehicle value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ZipCodes">
<summary>
Zip codes
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._CreditNumber">
<summary>
Credit Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ChargeType">
<summary>
Charge type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._NumbersTrailers">
<summary>
Numbers of Trailers
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._AutoForeignSOAT">
<summary>
Foreign car indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._VehicleClassSOAT">
<summary>
SOAT vehicle class
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._CylRangeSOAT">
<summary>
Cyl range Or capacity SOAT
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._TypeLicenseSOAT">
<summary>
License type vehicle SOAT ( Table229 )
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._EngineVehicleSoat">
<summary>
Engine of the vehicle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._IndAutoMoto">
<summary>
Registration indicator Automoto
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._TariffCodeSOAT">
<summary>
Tarif code according FASECOLDA
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ServicesTypeSOAT">
<summary>
Service type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._CountryOriginCar">
<summary>
Country of the foreign registration
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._ItIndicatesIfTheVehicleIsClassicOrOld">
<summary>
It Indicates If The Vehicle Is Classic Or Old
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'AUTO.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'AUTO.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'AUTO.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'AUTO.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'AUTO.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'AUTO.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.DrivingZone">
<summary>
Circulation zone. (NAUTOZONE)..
</summary>
<remarks>Data-source is 'AUTO.NAUTOZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate. (SCLIENT)..
</summary>
<remarks>Data-source is 'AUTO.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.VehicleType">
<summary>
Vehicle type. (NVEHTYPE)..
</summary>
<remarks>Data-source is 'AUTO.NVEHTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Chassis">
<summary>
Number of the vehicle chassis. (SCHASSIS)..
</summary>
<remarks>Data-source is 'AUTO.SCHASSIS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Color">
<summary>
Color of the vehicle. (SCOLOR)..
</summary>
<remarks>Data-source is 'AUTO.SCOLOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.LicensePlate">
<summary>
Number of the License Plate. (SREGIST)..
</summary>
<remarks>Data-source is 'AUTO.SREGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.LicensePlateType">
<summary>
Type of License Plate. (SLICENSE_TY)..
</summary>
<remarks>Data-source is 'AUTO.SLICENSE_TY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.EngineSerialNumber">
<summary>
Number identifying the engine of the insured vehicle. (SMOTOR)..
</summary>
<remarks>Data-source is 'AUTO.SMOTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.VehicleCode">
<summary>
Code of The Insured Vehicle (SVEHCODE)..
</summary>
<remarks>Data-source is 'AUTO.SVEHCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'AUTO.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'AUTO.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued. (DISSUEDAT)..
</summary>
<remarks>Data-source is 'AUTO.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'AUTO.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.EffectiveDate">
<summary>
Effective date of the policy/certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'AUTO.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'AUTO.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Premium">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'AUTO.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ValueOfTheVehicle">
<summary>
Value of the insured vehicle. (NVEH_VALOR)..
</summary>
<remarks>Data-source is 'AUTO.NVEH_VALOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ValueOfAccesories">
<summary>
Value of accessories of the insured vehicle. (NVAL_EXTRA)..
</summary>
<remarks>Data-source is 'AUTO.NVAL_EXTRA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.TransactionNumber">
<summary>
Transaction number recorded in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'AUTO.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CancellationCode">
<summary>
Code of cancellation of the specific information record. (NNULLCODE)..
</summary>
<remarks>Data-source is 'AUTO.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'AUTO.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Seats">
<summary>
Number of seats in the vehicle insured. (NVEHPLACE)..
</summary>
<remarks>Data-source is 'AUTO.NVEHPLACE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.GrossWeight">
<summary>
Gross weight in metric tons. (NVEHPMA)..
</summary>
<remarks>Data-source is 'AUTO.NVEHPMA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.YearOfManufactured">
<summary>
Year when the vehicle was manufactured. (NYEAR)..
</summary>
<remarks>Data-source is 'AUTO.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.NewVehicleIndicator">
<summary>
New vehicle indicator. (NIND0KM)..
</summary>
<remarks>Data-source is 'AUTO.NIND0KM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Reference">
<summary>
Reference number identifying the process as unique. (SREFERENCE)..
</summary>
<remarks>Data-source is 'AUTO.SREFERENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ValueType">
<summary>
Type of vehicle value. (NVALUETYPE)..
</summary>
<remarks>Data-source is 'AUTO.NVALUETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CodeOfBonusMalus">
<summary>
Code of bonus-malus (no claims). (NDISCCLAIM)..
</summary>
<remarks>Data-source is 'AUTO.NDISCCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.AllowedDeductible">
<summary>
Percentage of deductible allowed. (NDEDUC)..
</summary>
<remarks>Data-source is 'AUTO.NDEDUC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.UseOfVehicle">
<summary>
Use of vehicle. (NUSE)..
</summary>
<remarks>Data-source is 'AUTO.NUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.PercentageToAppliToValuesInTable">
<summary>
Percentage to be applied on the vehicle values in the table to calculate the sum insured. (NPERCTABVAL)..
</summary>
<remarks>Data-source is 'AUTO.NPERCTABVAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'AUTO.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.LastClaimDate">
<summary>
Date when the vehicle was last involved in a claim. (DLASTCLAIM)..
</summary>
<remarks>Data-source is 'AUTO.DLASTCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'AUTO.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.sDigit">
<summary>
.
</summary>
<remarks>Data-source is 'AUTO.SDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.VehicleIsAlsoInAnotherPolicy">
<summary>
It Indicates that the vehicle is also in another policy. (SRELAPSING)..
</summary>
<remarks>Data-source is 'AUTO.SRELAPSING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.NoTickectsInTwelveMonths">
<summary>
Indicates that the policy hasn&#39;t had a traffic ticket in the last twelve months. (SN_INFRAC)..
</summary>
<remarks>Data-source is 'AUTO.SN_INFRAC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Promotion">
<summary>
Car special offer indicator (SPROMOTION)..
</summary>
<remarks>Data-source is 'AUTO.SPROMOTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.TypeOfSpecialLicensePlates">
<summary>
Type of special license plates. (NLIC_SPECIAL)..
</summary>
<remarks>Data-source is 'AUTO.NLIC_SPECIAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ReturnedAuto">
<summary>
It indicates if the auto was returned. (SRETURN)..
</summary>
<remarks>Data-source is 'AUTO.SRETURN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.SoapPremiumCollected">
<summary>
Premium collected on sale SOAP (NCOLLECTED_PREM)..
</summary>
<remarks>Data-source is 'AUTO.NCOLLECTED_PREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.HibridVehicleIndicator">
<summary>
Hibrid vehicle indicator (SHYBRIDVEHICLE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SHYBRIDVEHICLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.EngineVehicle">
<summary>
Engine of the vehicle (SENGINE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SENGINE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Dealer">
<summary>
Dealer (SCLIENT_DEALER)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SCLIENT_DEALER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ClientIDSeller">
<summary>
Seller (SCLIENT_SELLER)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SCLIENT_SELLER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Seller">
<summary>
Seller (NAGENDEALER)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NAGENDEALER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CorrespondsDescriptionVehiclePrinted">
<summary>
Corresponds to the description of the vehicle to be printed (SDESCRIPT)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.TypeVehicleValue">
<summary>
Type of vehicle value (NTYPE_VEHICLEVALUE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NTYPE_VEHICLEVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ZipCodes">
<summary>
Zip codes (NZIPCODE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NZIPCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CreditNumber">
<summary>
Credit Number (SCREDITNUMBER)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SCREDITNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ChargeType">
<summary>
Charge type (NCHARGETYPE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NCHARGETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.NumbersTrailers">
<summary>
Numbers of Trailers (NTRAILERNUM)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NTRAILERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.AutoForeignSOAT">
<summary>
Foreign car indicator (SFOREINGVEH)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SFOREINGVEH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.VehicleClassSOAT">
<summary>
SOAT vehicle class (NVEHCLASS)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NVEHCLASS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CylRangeSOAT">
<summary>
Cyl range Or capacity SOAT (NRANGECC)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NRANGECC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.TypeLicenseSOAT">
<summary>
License type vehicle SOAT ( Table229 ) (NLICVEHTYPE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NLICVEHTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.EngineVehicleSoat">
<summary>
Engine of the vehicle (NENGINE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NENGINE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.IndAutoMoto">
<summary>
Registration indicator Automoto (SAUTORICK_IND)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SAUTORICK_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.TariffCodeSOAT">
<summary>
Tarif code according FASECOLDA (NTARIFCODE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NTARIFCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ServicesTypeSOAT">
<summary>
Service type. (NSERVTYPE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NSERVTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CountryOriginCar">
<summary>
Country of the foreign registration (NREGISTPLACE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.NREGISTPLACE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.ItIndicatesIfTheVehicleIsClassicOrOld">
<summary>
It Indicates If The Vehicle Is Classic Or Old (SOLDCAR_IND)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AUTO.SOLDCAR_IND'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AutomobileLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CustomString">
 <summary>
 Extensibility custom string property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CustomStringEx">
 <summary>
 Extensibility custom string ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CustomNumeric">
 <summary>
 Extensibility custom decimal property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CustomNumericEx">
 <summary>
 Extensibility custom decimal ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CustomDate">
 <summary>
 Extensibility custom date property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CustomDateEx">
 <summary>
 Extensibility custom date ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CustomBoolean">
 <summary>
 Extensibility custom boolean property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CustomBooleanEx">
 <summary>
 Extensibility custom boolean ex property.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.DrivingZoneDescription">
 <summary>
 Circulation zone.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE224'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.VehicleTypeDescription">
 <summary>
 Vehicle type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE226'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.CancellationCodeDescription">
 <summary>
 Code of cancellation of the specific information record.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE13'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.TypeOfSpecialLicensePlatesDescription">
 <summary>
 Type of special license plates.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5594'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusinessCollection">
 <summary>
 Collection for AutomobileLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusinessCollection.AddAutomobileLineOfBusiness">
 <summary>
 Add an instance of class 'AutomobileLineOfBusiness' in the AutomobileLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AutomobileLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount">
 <summary>
 Basic sums insured of the policy/certificate.
 </summary>
<remarks>Data-source is 'SUM_INSUR'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.CreateNewBasicInsuredAmount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._CodeOfTheInsuredAmount">
<summary>
Code identifying the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._RealValueOfInsuredProperty">
<summary>
Real value of the insured property.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._InsuredValue">
<summary>
Insured value in the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._Coinsurance">
<summary>
Percentage of coinsurance agreed (coinsurance by the client).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._TransactionNumber">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'SUM_INSUR.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.CodeOfTheInsuredAmount">
<summary>
Code identifying the sum insured (NSUMINS_COD)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NSUMINS_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SUM_INSUR.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.RealValueOfInsuredProperty">
<summary>
Real value of the insured property. (NSUMINS_REAL)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NSUMINS_REAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.InsuredValue">
<summary>
Insured value in the policy/certificate. (NSUM_INSUR)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NSUM_INSUR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.Coinsurance">
<summary>
Percentage of coinsurance agreed (coinsurance by the client). (NCOINSURAN)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NCOINSURAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SUM_INSUR.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SUM_INSUR.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.TransactionNumber">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'SUM_INSUR.NTRANSACTIO'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.Compare(InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BasicInsuredAmountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection">
 <summary>
 Collection for BasicInsuredAmount class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection.AddBasicInsuredAmount">
 <summary>
 Add an instance of class 'BasicInsuredAmount' in the BasicInsuredAmountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection.Compare(InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BasicInsuredAmountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Beneficiary">
 <summary>
 Beneficiaries of a policy or certificate of a group.
 </summary>
<remarks>Data-source is 'BENEFICIAR'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.CreateNewBeneficiary">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._CoverageCode">
<summary>
Code of the coverage related to the beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._PercentageShare">
<summary>
Percentage of share of the beneficiary.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._Relationship">
<summary>
Relationship of the beneficiary with the insured of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._DateOfBeneficiaryDesignation">
<summary>
Date when the beneficiary was named as such.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._IrrevocableBeneficiary">
<summary>
Irrevocable beneficiary indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._ContigentBeneficiaryIndicator">
<summary>
Contingent Beneficiary Indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._ParticipationOrder">
<summary>
Order of participation in case of contingency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._IndSendCorrespMail">
<summary>
Indicator sending correspondence by mail
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Beneficiary._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'BENEFICIAR.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'BENEFICIAR.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'BENEFICIAR.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.CoverageCode">
<summary>
Code of the coverage related to the beneficiary. (NCOVER)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'BENEFICIAR.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'BENEFICIAR.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.PercentageShare">
<summary>
Percentage of share of the beneficiary. (NPARTICIP)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.Relationship">
<summary>
Relationship of the beneficiary with the insured of the policy. (NRELATION)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NRELATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'BENEFICIAR.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.DateOfBeneficiaryDesignation">
<summary>
Date when the beneficiary was named as such. (DDATEDECLA)..
</summary>
<remarks>Data-source is 'BENEFICIAR.DDATEDECLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.IrrevocableBeneficiary">
<summary>
Irrevocable beneficiary indicator. (SIRREVOC)..
</summary>
<remarks>Data-source is 'BENEFICIAR.SIRREVOC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.ContigentBeneficiaryIndicator">
<summary>
Contingent Beneficiary Indicator (SCONTING)..
</summary>
<remarks>Data-source is 'BENEFICIAR.SCONTING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.ParticipationOrder">
<summary>
Order of participation in case of contingency (NORDPARTICIP)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BENEFICIAR.NORDPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.IndSendCorrespMail">
<summary>
Indicator sending correspondence by mail (SDESIGN)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'BENEFICIAR.SDESIGN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.Compare(InMotionGIT.Policy.Entity.Contracts.Beneficiary,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="BeneficiaryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Beneficiary.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Beneficiary.RelationshipDescription">
 <summary>
 Relationship of the beneficiary with the insured of the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE55'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection">
 <summary>
 Collection for Beneficiary class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection.AddBeneficiary">
 <summary>
 Add an instance of class 'Beneficiary' in the BeneficiaryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection.Compare(InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.BeneficiaryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation">
 <summary>
 Case massive load - Additional information for commercial structures
 </summary>
<remarks>Data-source is 'CASEMASSLOADADDINF'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.CreateNewCaseMassiveLoadAdditionalInformation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._SubscriptionCaseType">
<summary>
Type of subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._ComponentCode">
<summary>
Component code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._CriteriaOfTheAddtionalInfoField">
<summary>
Criteria of the field additional information
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._DescriptionAdditionalInformation">
<summary>
Description of the additional information
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.SubscriptionCaseType">
<summary>
Type of subscription case (UNDEWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.UNDEWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification (NSEQUENCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.ComponentCode">
<summary>
Component code (NCOMPONENT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.NCOMPONENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.CriteriaOfTheAddtionalInfoField">
<summary>
Criteria of the field additional information (NIDCRITERIA)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.NIDCRITERIA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.DescriptionAdditionalInformation">
<summary>
Description of the additional information (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDINF.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CaseMassiveLoadAdditionalInformationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformationCollection">
 <summary>
 Collection for CaseMassiveLoadAdditionalInformation class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformationCollection.AddCaseMassiveLoadAdditionalInformation">
 <summary>
 Add an instance of class 'CaseMassiveLoadAdditionalInformation' in the CaseMassiveLoadAdditionalInformationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformationCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadAdditionalInformationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage">
 <summary>
 Case massive load - Coverages
 </summary>
<remarks>Data-source is 'CASEMASSLOADCOVER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.CreateNewCaseMassiveLoadCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._SubscriptionCaseType">
<summary>
Type of subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._ConsecutiveOfCoverageIdentification">
<summary>
Consecutive of coverage identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._GroupCode">
<summary>
Group code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._ModuleCode">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._ClientIdOfTheRegister">
<summary>
Client Id of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._CoverageCode">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._CurrencyCode">
<summary>
Code of The Currency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._InsuredAmount">
<summary>
Insured amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.SubscriptionCaseType">
<summary>
Type of subscription case (UNDEWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.UNDEWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification (NSEQUENCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.ConsecutiveOfCoverageIdentification">
<summary>
Consecutive of coverage identification (NSEQCOVER)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NSEQCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.GroupCode">
<summary>
Group code (NGROUP)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.ModuleCode">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.ClientIdOfTheRegister">
<summary>
Client Id of the register (SCLIENTID)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.SCLIENTID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.CoverageCode">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.CurrencyCode">
<summary>
Code of The Currency (NCURRENCY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.InsuredAmount">
<summary>
Insured amount (NCAPITAL)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCOVER.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CaseMassiveLoadCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverageCollection">
 <summary>
 Collection for CaseMassiveLoadCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverageCollection.AddCaseMassiveLoadCoverage">
 <summary>
 Add an instance of class 'CaseMassiveLoadCoverage' in the CaseMassiveLoadCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverageCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument">
 <summary>
 Case massive load - Documents
 </summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.CreateNewCaseMassiveLoadDocument">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._SubscriptionCaseType">
<summary>
Type of subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._ClientRole">
<summary>
Role of the client in the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._ClientIdOfTheRegister">
<summary>
Client Id of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._NCLASSTYPDOC">
<summary>
Type of document
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._NTYPCLIENTDOC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._DocumentNumber">
<summary>
Number or code of client Id
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.SubscriptionCaseType">
<summary>
Type of subscription case (UNDEWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.UNDEWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification (NSEQUENCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.ClientRole">
<summary>
Role of the client in the policy (NROLE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.ClientRoleEnum">
<summary>
Role of the client in the policy
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.ClientRoleEnumText">
<summary>
Role of the client in the policy
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.ClientIdOfTheRegister">
<summary>
Client Id of the register (SCLIENTID)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.SCLIENTID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.NCLASSTYPDOC">
<summary>
Type of document.
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NCLASSTYPDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.NTYPCLIENTDOC">
<summary>
.
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NTYPCLIENTDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.DocumentNumber">
<summary>
Number or code of client Id (SCLINUMDOCU)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.SCLINUMDOCU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADDOCUMENTS.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CaseMassiveLoadDocumentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocument.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocumentCollection">
 <summary>
 Collection for CaseMassiveLoadDocument class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocumentCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocumentCollection.AddCaseMassiveLoadDocument">
 <summary>
 Add an instance of class 'CaseMassiveLoadDocument' in the CaseMassiveLoadDocumentCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocumentCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocumentCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocumentCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocumentCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadDocumentCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError">
 <summary>
 Case massive load - Errors
 </summary>
<remarks>Data-source is 'CASEMASSLOADERROR'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.CreateNewCaseMassiveLoadError">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._SubscriptionCaseType">
<summary>
Type of subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._ErrorNumber">
<summary>
Error number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._ErrorDescription">
<summary>
Description of the error
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._ErrorType">
<summary>
Error Type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.SubscriptionCaseType">
<summary>
Type of subscription case (UNDEWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.UNDEWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification (NSEQUENCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.ErrorNumber">
<summary>
Error number (NERRORNUM)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.NERRORNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.ErrorDescription">
<summary>
Description of the error (SDESCRIPT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.ErrorType">
<summary>
Error Type (SERRORTYP)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.SERRORTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADERROR.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CaseMassiveLoadErrorItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadError.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadErrorCollection">
 <summary>
 Collection for CaseMassiveLoadError class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadErrorCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadErrorCollection.AddCaseMassiveLoadError">
 <summary>
 Add an instance of class 'CaseMassiveLoadError' in the CaseMassiveLoadErrorCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadErrorCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadErrorCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadErrorCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadErrorCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadErrorCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone">
 <summary>
 Case Massive Load Phones
 </summary>
<remarks>Data-source is 'CASEMASSLOADPHONES'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.CreateNewCaseMassiveLoadPhone">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._SubscriptionCaseType">
<summary>
Type of subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._ClientRole">
<summary>
Role of the client in the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._ClientIdOfTheRegister">
<summary>
Client Id of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._ConsecutiveOfPhoneIdentification">
<summary>
Consecutive of phone identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._TelephoneType">
<summary>
Telephone type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._CountryCode">
<summary>
Country Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._AreaCode">
<summary>
Area Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._Telephonenumber">
<summary>
Telephone number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._Extension">
<summary>
Extension number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._AdditionalExtension">
<summary>
Additional extension
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._RelatedAddress">
<summary>
Related address
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.SubscriptionCaseType">
<summary>
Type of subscription case (UNDEWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.UNDEWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification (NSEQUENCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.ClientRole">
<summary>
Role of the client in the policy (NROLE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.ClientRoleEnum">
<summary>
Role of the client in the policy
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.ClientRoleEnumText">
<summary>
Role of the client in the policy
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.ClientIdOfTheRegister">
<summary>
Client Id of the register (SCLIENTID)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.SCLIENTID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.ConsecutiveOfPhoneIdentification">
<summary>
Consecutive of phone identification (NSEQPHONE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NSEQPHONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.TelephoneType">
<summary>
Telephone type (NPHONE_TYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NPHONE_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.TelephoneTypeEnum">
<summary>
Telephone type
</summary>
<remarks>This property use a enumeration based on property 'TelephoneType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.TelephoneTypeEnumText">
<summary>
Telephone type
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.CountryCode">
<summary>
Country Code (NCOUNTRY_CODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NCOUNTRY_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.AreaCode">
<summary>
Area Code (NAREA_CODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NAREA_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.Telephonenumber">
<summary>
Telephone number (SPHONE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.SPHONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.Extension">
<summary>
Extension number (NEXTENS1)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NEXTENS1'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.AdditionalExtension">
<summary>
Additional extension (NEXTENS2)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NEXTENS2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.RelatedAddress">
<summary>
Related address (SASSOCADDR)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.SASSOCADDR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPHONES.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CaseMassiveLoadPhoneItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhone.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhoneCollection">
 <summary>
 Collection for CaseMassiveLoadPhone class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhoneCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhoneCollection.AddCaseMassiveLoadPhone">
 <summary>
 Add an instance of class 'CaseMassiveLoadPhone' in the CaseMassiveLoadPhoneCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhoneCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhoneCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhoneCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhoneCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CaseMassiveLoadPhoneCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner">
 <summary>
 Cases Massive Load Policies Per Partner
 </summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.CreateNewCasesMassiveLoadPoliciesPerPartner">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._ClientCode">
<summary>
Client Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._NumberOfComercialPartner">
<summary>
Number of comercial partner
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._IdCommercialPartnerPolicy">
<summary>
Id of the Commercial Partner Policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.ClientCode">
<summary>
Client Code (SCLIENT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.NumberOfComercialPartner">
<summary>
Number of comercial partner (NCOMMPARTNER)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.NCOMMPARTNER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.IdCommercialPartnerPolicy">
<summary>
Id of the Commercial Partner Policy (SIDPARTPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.SIDPARTPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADPARTNERPOLICIES.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.Compare(InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CasesMassiveLoadPoliciesPerPartnerItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartner.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartnerCollection">
 <summary>
 Collection for CasesMassiveLoadPoliciesPerPartner class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartnerCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartnerCollection.AddCasesMassiveLoadPoliciesPerPartner">
 <summary>
 Add an instance of class 'CasesMassiveLoadPoliciesPerPartner' in the CasesMassiveLoadPoliciesPerPartnerCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartnerCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartnerCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartnerCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartnerCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CasesMassiveLoadPoliciesPerPartnerCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CertificateStatus">
 <summary>
 Current state of the certificates
 </summary>
<remarks>Data-source is 'CERT_STATUS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.CreateNewCertificateStatus">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._StatusCode">
<summary>
StatusCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CertificateStatus._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CERT_STATUS.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CERT_STATUS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CERT_STATUS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CERT_STATUS.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'CERT_STATUS.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.StatusCode">
<summary>
StatusCode (NFACESTATUS)..
</summary>
<remarks>Data-source is 'CERT_STATUS.NFACESTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CERT_STATUS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CERT_STATUS.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.Compare(InMotionGIT.Policy.Entity.Contracts.CertificateStatus,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CertificateStatusItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatus.StatusCodeDescription">
 <summary>
 StatusCode
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6765' on the table 'TABLE6765'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CertificateStatusCollection">
 <summary>
 Collection for CertificateStatus class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatusCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatusCollection.AddCertificateStatus">
 <summary>
 Add an instance of class 'CertificateStatus' in the CertificateStatusCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatusCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CertificateStatusCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CertificateStatusCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatusCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CertificateStatusCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Clause">
 <summary>
 Clause of a policy/Certificate.
 </summary>
<remarks>Data-source is 'CLAUSE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.CreateNewClause">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._ClauseCode">
<summary>
Number identifying the clause.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._ConsecutiveNumber">
<summary>
Consecutive number identifying the record (it is useful only when there are two clauses effective on the same date).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._NoteID">
<summary>
Number of the note containing the particular text of the clause.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._ClientID">
<summary>
Code of the client (useful only for Health Insurance).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._Cause">
<summary>
Cause of the application of the clause (health, sports, other).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._SurchargeAccepted">
<summary>
It indicates that the surcharge was accepted by the insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._HowClauseIsDecribed">
<summary>
Indicates how the clause is described
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._AttachedDocument">
<summary>
Path and name of the attachment
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CLAUSE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLAUSE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLAUSE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CLAUSE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'CLAUSE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.ClauseCode">
<summary>
Number identifying the clause. (NCLAUSE)..
</summary>
<remarks>Data-source is 'CLAUSE.NCLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CLAUSE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.ConsecutiveNumber">
<summary>
Consecutive number identifying the record (it is useful only when there are two clauses effective on the same date). (NID)..
</summary>
<remarks>Data-source is 'CLAUSE.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLAUSE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.NoteID">
<summary>
Number of the note containing the particular text of the clause. (NNOTENUM)..
</summary>
<remarks>Data-source is 'CLAUSE.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CLAUSE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLAUSE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.ClientID">
<summary>
Code of the client (useful only for Health Insurance). (SCLIENT)..
</summary>
<remarks>Data-source is 'CLAUSE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'CLAUSE.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'CLAUSE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'CLAUSE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.Cause">
<summary>
Cause of the application of the clause (health, sports, other). (NCAUSE)..
</summary>
<remarks>Data-source is 'CLAUSE.NCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.SurchargeAccepted">
<summary>
It indicates that the surcharge was accepted by the insured. (SAGREE)..
</summary>
<remarks>Data-source is 'CLAUSE.SAGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.HowClauseIsDecribed">
<summary>
Indicates how the clause is described (STYPE_CLAUSE)..
</summary>
<remarks>Data-source is 'CLAUSE.STYPE_CLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.AttachedDocument">
<summary>
Path and name of the attachment (SDOC_ATTACH)..
</summary>
<remarks>Data-source is 'CLAUSE.SDOC_ATTACH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax (NDISC_CODE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CLAUSE.NDISC_CODE'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Clause._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.Compare(InMotionGIT.Policy.Entity.Contracts.Clause,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClauseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Clause.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Clause.CauseDescription">
 <summary>
 Cause of the application of the clause (health, sports, other).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5631'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ClauseCollection">
 <summary>
 Collection for Clause class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ClauseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ClauseCollection.AddClause">
 <summary>
 Add an instance of class 'Clause' in the ClauseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ClauseCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ClauseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ClauseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ClauseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Client_tmp">
 <summary>
 Temporary list of Clients (Group quotation).
 </summary>
<remarks>Data-source is 'CLIENT_TMP'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.CreateNewClient_tmp">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._ConsecutiveNumber">
<summary>
Consecutive number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._InformationType">
<summary>
Type of Information
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._BirthDate">
<summary>
Date of birth of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._InitAge">
<summary>
Initial age.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._EndingAge">
<summary>
Ending age.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._Insured">
<summary>
Quantity of insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._nRentAmount">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._Currency">
<summary>
Code of the currency of the income.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._Usercode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Client_tmp._VIPIndicator">
<summary>
It indicates that the Client is &#39;VIP&#39;.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.ConsecutiveNumber">
<summary>
Consecutive number. (NID)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.InformationType">
<summary>
Type of Information (STYPEAGE)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.STYPEAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.BirthDate">
<summary>
Date of birth of the client. (DBIRTHDATE)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.DBIRTHDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.InitAge">
<summary>
Initial age. (NINITAGE)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NINITAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.EndingAge">
<summary>
Ending age. (NENDAGE)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NENDAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.Insured">
<summary>
Quantity of insured. (NINSURED)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NINSURED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.nRentAmount">
<summary>
.
</summary>
<remarks>Data-source is 'CLIENT_TMP.NRENTAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.Currency">
<summary>
Code of the currency of the income. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.Usercode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.VIPIndicator">
<summary>
It indicates that the Client is &#39;VIP&#39;. (SVIP)..
</summary>
<remarks>Data-source is 'CLIENT_TMP.SVIP'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.Compare(InMotionGIT.Policy.Entity.Contracts.Client_tmp,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="Client_tmpItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmp.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmp.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Client_tmpCollection">
 <summary>
 Collection for Client_tmp class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmpCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmpCollection.AddClient_tmp">
 <summary>
 Add an instance of class 'Client_tmp' in the Client_tmpCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmpCollection.Compare(InMotionGIT.Policy.Entity.Contracts.Client_tmpCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Client_tmpCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmpCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Client_tmpCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoInsurance">
 <summary>
 Distribution co-insurance in a policy.
 </summary>
<remarks>Data-source is 'COINSURAN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.CreateNewCoInsurance">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._Company">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._Expenses">
<summary>
Percentage of administrative expenses.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._Share">
<summary>
Percentage of share of the coinsurance company on the total risk insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoInsurance._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'COINSURAN.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COINSURAN.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COINSURAN.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COINSURAN.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.Company">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'COINSURAN.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COINSURAN.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.Expenses">
<summary>
Percentage of administrative expenses. (NEXPENSES)..
</summary>
<remarks>Data-source is 'COINSURAN.NEXPENSES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COINSURAN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COINSURAN.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.Share">
<summary>
Percentage of share of the coinsurance company on the total risk insured. (NSHARE)..
</summary>
<remarks>Data-source is 'COINSURAN.NSHARE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsurance.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COINSURAN.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.Compare(InMotionGIT.Policy.Entity.Contracts.CoInsurance,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoInsuranceItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsurance.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoInsuranceCollection">
 <summary>
 Collection for CoInsurance class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsuranceCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsuranceCollection.AddCoInsurance">
 <summary>
 Add an instance of class 'CoInsurance' in the CoInsuranceCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsuranceCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CoInsuranceCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoInsuranceCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsuranceCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoInsuranceCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Commission">
 <summary>
 Commissions of a policy.
 </summary>
<remarks>Data-source is 'COMMISSION'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.CreateNewCommission">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._ProducerType">
<summary>
Type of producer.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._Amount">
<summary>
Commission amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._CommissionType">
<summary>
Types of commissions to be assigned to the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._FixedCommissionPercentage">
<summary>
Fixed commission percentage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._Share">
<summary>
Share Percentage of the producer on the policy commission.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._Discount">
<summary>
Discount percentage of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._PlusPremiumCollection">
<summary>
Additional commission for premium collection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._PlusOfficeAllowance">
<summary>
Additional commission for office allowance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._PlusQuality">
<summary>
Additional commission for quality.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._Agreement">
<summary>
Agreement code for the agent in charge of collection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._PercentageOfCededCommission">
<summary>
Percentage to cede of the producer commission.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._nInstallCom">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._CommissionPlan">
<summary>
Policy/Certificate commission plan code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._ComissionTab">
<summary>
Comission table code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._NCOMTABGE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Commission._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'COMMISSION.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COMMISSION.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COMMISSION.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COMMISSION.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'COMMISSION.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.ProducerType">
<summary>
Type of producer. (NINTERTYP)..
</summary>
<remarks>Data-source is 'COMMISSION.NINTERTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
</summary>
<remarks>Data-source is 'COMMISSION.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COMMISSION.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.Amount">
<summary>
Commission amount. (NAMOUNT)..
</summary>
<remarks>Data-source is 'COMMISSION.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.CommissionType">
<summary>
Types of commissions to be assigned to the policy. (SCOMMITYP)..
</summary>
<remarks>Data-source is 'COMMISSION.SCOMMITYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.CommissionTypeEnum">
<summary>
Types of commissions to be assigned to the policy.
</summary>
<remarks>This property use a enumeration based on property 'CommissionType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.CommissionTypeEnumText">
<summary>
Types of commissions to be assigned to the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COMMISSION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COMMISSION.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.FixedCommissionPercentage">
<summary>
Fixed commission percentage. (NPERCENT)..
</summary>
<remarks>Data-source is 'COMMISSION.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.Share">
<summary>
Share Percentage of the producer on the policy commission. (NSHARE)..
</summary>
<remarks>Data-source is 'COMMISSION.NSHARE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COMMISSION.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.Discount">
<summary>
Discount percentage of the producer. (NPERDISCOUNT)..
</summary>
<remarks>Data-source is 'COMMISSION.NPERDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.PlusPremiumCollection">
<summary>
Additional commission for premium collection. (SPLUSCOLLEC)..
</summary>
<remarks>Data-source is 'COMMISSION.SPLUSCOLLEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.PlusOfficeAllowance">
<summary>
Additional commission for office allowance. (SPLUSOFFICE)..
</summary>
<remarks>Data-source is 'COMMISSION.SPLUSOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.PlusQuality">
<summary>
Additional commission for quality. (SPLUSQUALITY)..
</summary>
<remarks>Data-source is 'COMMISSION.SPLUSQUALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.Agreement">
<summary>
Agreement code for the agent in charge of collection. (NAGREEMENT)..
</summary>
<remarks>Data-source is 'COMMISSION.NAGREEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.PercentageOfCededCommission">
<summary>
Percentage to cede of the producer commission. (NPERCENT_CE)..
</summary>
<remarks>Data-source is 'COMMISSION.NPERCENT_CE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.nInstallCom">
<summary>
.
</summary>
<remarks>Data-source is 'COMMISSION.NINSTALLCOM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.CommissionPlan">
<summary>
Policy/Certificate commission plan code (NCOMMPLAN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COMMISSION.NCOMMPLAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.ComissionTab">
<summary>
Comission table code (NCOMTAB)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COMMISSION.NCOMTAB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.NCOMTABGE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COMMISSION.NCOMTABGE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.Compare(InMotionGIT.Policy.Entity.Contracts.Commission,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CommissionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Commission.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Commission.CommissionTypeDescription">
 <summary>
 Types of commissions to be assigned to the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE47'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CommissionCollection">
 <summary>
 Collection for Commission class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionCollection.AddCommission">
 <summary>
 Add an instance of class 'Commission' in the CommissionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CommissionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy">
 <summary>
 Commissions per policy.
 </summary>
<remarks>Data-source is 'COMM_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.CreateNewCommissionPerPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._ConsecutiveNumber">
<summary>
Consecutive number within the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._CommissionsEntryType">
<summary>
Code of the type of entry of commissions.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._CommissionType">
<summary>
Type of commission of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._TotalCommissionPending">
<summary>
Total of pending commission to pay.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._Installments">
<summary>
Number of installments in which the commission is paid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._OutstandingInstallmentsOfCommission">
<summary>
Number of outstanding installments of commissions
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._AmountOfEachInstallment">
<summary>
Amount of each installment of commission.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._CommissionPaymentID">
<summary>
Number of payment of commissions related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._CurrentAccountProcessID">
<summary>
Number of the process of preparation of producers current accounts .
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._CommissionAvailable">
<summary>
Amount of commission available.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._TaxedAvailableAmount">
<summary>
Taxable amount .
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._ExemptAvailableAmount">
<summary>
Exempt available amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._Status">
<summary>
Status of the record of commissions of policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._TypeDocu">
<summary>
Type of document that generates the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._DocumentIDNumber">
<summary>
Document number that generates the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._InstallmentNumber">
<summary>
Number identifying the installment in the financial agreement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._Transaction">
<summary>
Transaction originating the bill.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._TypeOfEntry">
<summary>
Type of entry of the bill.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy._EntryNumber">
<summary>
Entry number.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
</summary>
<remarks>Data-source is 'COMM_POL.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'COMM_POL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'COMM_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COMM_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COMM_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COMM_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'COMM_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.ConsecutiveNumber">
<summary>
Consecutive number within the policy/certificate. (NID)..
</summary>
<remarks>Data-source is 'COMM_POL.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.CommissionsEntryType">
<summary>
Code of the type of entry of commissions. (NTYPMOV_COMM)..
</summary>
<remarks>Data-source is 'COMM_POL.NTYPMOV_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.CommissionType">
<summary>
Type of commission of the policy. (STYP_COMM)..
</summary>
<remarks>Data-source is 'COMM_POL.STYP_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.TotalCommissionPending">
<summary>
Total of pending commission to pay. (NTOTAL_COM)..
</summary>
<remarks>Data-source is 'COMM_POL.NTOTAL_COM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.Installments">
<summary>
Number of installments in which the commission is paid. (NINSTALLMENTS)..
</summary>
<remarks>Data-source is 'COMM_POL.NINSTALLMENTS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.OutstandingInstallmentsOfCommission">
<summary>
Number of outstanding installments of commissions (NPEN_INSTALL)..
</summary>
<remarks>Data-source is 'COMM_POL.NPEN_INSTALL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.AmountOfEachInstallment">
<summary>
Amount of each installment of commission. (NINSTALL_AMO)..
</summary>
<remarks>Data-source is 'COMM_POL.NINSTALL_AMO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.CommissionPaymentID">
<summary>
Number of payment of commissions related to the entry. (NPAY_COMM)..
</summary>
<remarks>Data-source is 'COMM_POL.NPAY_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.CurrentAccountProcessID">
<summary>
Number of the process of preparation of producers current accounts . (NCURR_ACC)..
</summary>
<remarks>Data-source is 'COMM_POL.NCURR_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.CommissionAvailable">
<summary>
Amount of commission available. (NAVAILABLE)..
</summary>
<remarks>Data-source is 'COMM_POL.NAVAILABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.TaxedAvailableAmount">
<summary>
Taxable amount . (NAVAIL_AFEC)..
</summary>
<remarks>Data-source is 'COMM_POL.NAVAIL_AFEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.ExemptAvailableAmount">
<summary>
Exempt available amount. (NAVAIL_EXEN)..
</summary>
<remarks>Data-source is 'COMM_POL.NAVAIL_EXEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COMM_POL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.Status">
<summary>
Status of the record of commissions of policies. (NSTATUS_COMM)..
</summary>
<remarks>Data-source is 'COMM_POL.NSTATUS_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.TypeDocu">
<summary>
Type of document that generates the entry. (STYPEDOCU)..
</summary>
<remarks>Data-source is 'COMM_POL.STYPEDOCU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.DocumentIDNumber">
<summary>
Document number that generates the entry. (NDOCUMENT)..
</summary>
<remarks>Data-source is 'COMM_POL.NDOCUMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.InstallmentNumber">
<summary>
Number identifying the installment in the financial agreement. (NDRAFT)..
</summary>
<remarks>Data-source is 'COMM_POL.NDRAFT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COMM_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COMM_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.Transaction">
<summary>
Transaction originating the bill. (NTRATYPEI)..
</summary>
<remarks>Data-source is 'COMM_POL.NTRATYPEI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.TypeOfEntry">
<summary>
Type of entry of the bill. (NTYPE)..
</summary>
<remarks>Data-source is 'COMM_POL.NTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.EntryNumber">
<summary>
Entry number. (NTRANSAC)..
</summary>
<remarks>Data-source is 'COMM_POL.NTRANSAC'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CommissionPerPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.CommissionsEntryTypeDescription">
 <summary>
 Code of the type of entry of commissions.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5567'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.StatusDescription">
 <summary>
 Status of the record of commissions of policies.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5568'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.TransactionDescription">
 <summary>
 Transaction originating the bill.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE24'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicy.TypeOfEntryDescription">
 <summary>
 Type of entry of the bill.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicyCollection">
 <summary>
 Collection for CommissionPerPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicyCollection.AddCommissionPerPolicy">
 <summary>
 Add an instance of class 'CommissionPerPolicy' in the CommissionPerPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CommissionPerPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Counterguarantee">
 <summary>
 Counterguarantees of a policy/certificate.
 </summary>
<remarks>Data-source is 'WARRANTY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.CreateNewCounterguarantee">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._ConsecutiveNumber">
<summary>
Consecutive counter-guarantee number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._AmountCounterguarantee">
<summary>
Amount of the counter-guarantee.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._CurrencyCode">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._DocumentNumber">
<summary>
Document number related to the counter-guarantee.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._TypeOfCounterguaranty">
<summary>
Code of type of counter-guaranty.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NTRANSACTIO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._DISSUEDAT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._DSTARTDATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._SCLIENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._DEXPIRDAT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NPREMIUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NCAPITAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NMATERIA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NLIMITCREDIT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NMAXCAPITAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._SADDRESS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NNULLCODE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._SPROJECTNAME">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._SIDENTIFY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._DMATURITY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._NBONDSTATUS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'WARRANTY.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'WARRANTY.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'WARRANTY.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'WARRANTY.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'WARRANTY.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'WARRANTY.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.ConsecutiveNumber">
<summary>
Consecutive counter-guarantee number. (NWARRNUMBER)..
</summary>
<remarks>Data-source is 'WARRANTY.NWARRNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'WARRANTY.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.AmountCounterguarantee">
<summary>
Amount of the counter-guarantee. (NCAPACITY)..
</summary>
<remarks>Data-source is 'WARRANTY.NCAPACITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.CurrencyCode">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'WARRANTY.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.DocumentNumber">
<summary>
Document number related to the counter-guarantee. (SDOCWARRANTY)..
</summary>
<remarks>Data-source is 'WARRANTY.SDOCWARRANTY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.TypeOfCounterguaranty">
<summary>
Code of type of counter-guaranty. (NTYPEWARRANTY)..
</summary>
<remarks>Data-source is 'WARRANTY.NTYPEWARRANTY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'WARRANTY.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'WARRANTY.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'WARRANTY.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NTRANSACTIO">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.DISSUEDAT">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.DSTARTDATE">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SCLIENT">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.DEXPIRDAT">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NPREMIUM">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NCAPITAL">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NMATERIA">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.NMATERIA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NLIMITCREDIT">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.NLIMITCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NMAXCAPITAL">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.NMAXCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SADDRESS">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.SADDRESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NNULLCODE">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SPROJECTNAME">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.SPROJECTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SIDENTIFY">
<summary>
.
</summary>
<remarks>Data-source is 'WARRANTY.SIDENTIFY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.DMATURITY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'WARRANTY.DMATURITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NBONDSTATUS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'WARRANTY.NBONDSTATUS'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Counterguarantee._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.Compare(InMotionGIT.Policy.Entity.Contracts.Counterguarantee,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CounterguaranteeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.TypeOfCounterguarantyDescription">
 <summary>
 Code of type of counter-guaranty.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE201'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Counterguarantee.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CounterguaranteeCollection">
 <summary>
 Collection for Counterguarantee class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CounterguaranteeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CounterguaranteeCollection.AddCounterguarantee">
 <summary>
 Add an instance of class 'Counterguarantee' in the CounterguaranteeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CounterguaranteeCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CounterguaranteeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CounterguaranteeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CounterguaranteeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CounterguaranteeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Coverage">
 <summary>
 Coverages of a policy.
 </summary>
<remarks>Data-source is 'COVER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.CreateNewCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._InsuredAmount">
<summary>
Insured amount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._LowestLimitAmountRange">
<summary>
Lowest limit of the range of insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CoverageChangeIndicator">
<summary>
Coverage change indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Percentage of discount because of franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._PremiumWaivedCoverage">
<summary>
Coverage with premium waived.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._AnnualPremium">
<summary>
Annual premium amount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._WaitingPeriodNumber">
<summary>
Number of days/hours/months of the waiting period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._RatePerThousand">
<summary>
Rate to be applied (o/oo).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._UnitsOfWaitingPeriod">
<summary>
Units for Waiting Period (days, months).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._FranchiseOrDeductible">
<summary>
It indicates if a franchise/deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._DiscountAmountBecauseFranchiseOrDeductible">
<summary>
Amount of discount because of the franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._DurationOfInsurance">
<summary>
Duration of the insurance (used for Life).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._nAgeMinIns">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._nAgeMaxIns">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MaximumAgeInsurance">
<summary>
Maximum age of insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._TypeOfDurationOfPayments">
<summary>
Type of duration for the payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._DurationOfPayments">
<summary>
Duration of the payments (used for Life).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._nCauseUpd">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._RequestedInsuredAmount">
<summary>
Sum Insured amount requested related to the insured person
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MaximumInsurableAge">
<summary>
Maximum age to which the insured person is protected
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MaximumAge">
<summary>
Maximum age for the insured person in this coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CoverageAniversaryDate">
<summary>
Date of anniversary of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._dSeekTar">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._RetroactiveEndorsementDate">
<summary>
Date of The Retroactive Endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._OriginalInsuredAmount">
<summary>
Initial sum insured of the coverage (when the policy was issued)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._OriginalAnnualPremium">
<summary>
Annual premium amount of the coverage, as originally calculated.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._OriginalRatePerThousand">
<summary>
Rate to be applied (o/oo), as originally calculated.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._TaxAmount">
<summary>
Tax amount (related to the premium amount).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._AnnualExtraPremium">
<summary>
Annual amount of the surcharge.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._AnnualDiscount">
<summary>
Annual amount of the discount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._nCommi_an">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._GrossNetRate">
<summary>
Gross net rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._SumInsuredRequiredByPolicyHolder">
<summary>
Amount of the sum insured required by the policy holder
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._FranchiseOrDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._FixedAmountOfFranchiseOrDeductibleClaim">
<summary>
Fixed amount franchise or deductible amount to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MinimumAmountOfFranchiseOrDeductibleClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MaximumAmountOfFranchiseOrDeductibleClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._DiscountPercentageClaim">
<summary>
Percentage of discount because of franchise or deductible Siniestro.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._DiscountAmountClaim">
<summary>
Amount of discount because of the franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MaxAmountEvent">
<summary>
Maximum number of events allowed at the time of occurrence of a claim for compensation purposes
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MaxFrecuencyEvent">
<summary>
Frequency that will apply to the maximum number of events allowed (&#34;amount&#34;) or &#34;Limit amount per Event&#34;, as the case may be. It is an optional field. Possible values according to table340
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MaxRoutineEvent">
<summary>
Routine name a routine to be applied to count the event limit, related to the &#34;Maximum Event&#34; functionality
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._FreqMaxEven">
<summary>
Frequency code for the maximum event control
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._RevalType">
<summary>
Indices of revaluation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CodeFrecuencyCapital">
<summary>
Code of frequency of capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._PercentageOFCoinsuranceToApply">
<summary>
Percentage of coinsurance to apply.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CoinsuranceFixAmount">
<summary>
Coinsurance Fix amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CoinsuranceMaximumAmount">
<summary>
Coinsurance maximum amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CoinsuranceMminimumAmount">
<summary>
Coinsurance minimum amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._FlagApplicationOfCoinsurance">
<summary>
Flag application of coinsurance
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._PercentageAdministrationCost">
<summary>
Percentage of AdministrationCost
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._PercentageAcquisitionCost">
<summary>
Percentage of AcquisitionCost
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._PercentagOfUtility">
<summary>
Percentage of Utility
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._OthersCosts">
<summary>
Percentage of Others Costs
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._MillageOfSumInsuredCost">
<summary>
Millage of Sum Insured Cost
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._NREINSQUOT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._NFIXEXPENSAMO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CurrencyCapitalDeductible">
<summary>
Currency of the Capital deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._CurrencySiniestroDeductible">
<summary>
Currency of the siniestro deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._TypeOfLackPeriod">
<summary>
Type of Lack Period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._DurationOfLackPeriod">
<summary>
Number of days, months, hours of the elimination period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._LifeInsuranceCoverage">
<summary>
Additional information on life insurances coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._LifeCoverageVariations">
<summary>
Variations in coverage of life (life).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Coverage._SpecificRiskCoverageCollection">
<summary>
Specific risk coverage
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'COVER.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COVER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COVER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COVER.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'COVER.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'COVER.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'COVER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'COVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'COVER.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COVER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'COVER.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.InsuredAmount">
<summary>
Insured amount of the coverage. (NCAPITAL)..
</summary>
<remarks>Data-source is 'COVER.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.LowestLimitAmountRange">
<summary>
Lowest limit of the range of insured amount. (NCAPITALI)..
</summary>
<remarks>Data-source is 'COVER.NCAPITALI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CoverageChangeIndicator">
<summary>
Coverage change indicator. (SCHANGE)..
</summary>
<remarks>Data-source is 'COVER.SCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COVER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied (SFRANDEDI)..
</summary>
<remarks>Data-source is 'COVER.SFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'COVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Percentage of discount because of franchise or deductible. (NDISCOUNT)..
</summary>
<remarks>Data-source is 'COVER.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFIXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER.NFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount. (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.PremiumWaivedCoverage">
<summary>
Coverage with premium waived. (SFREE_PREMI)..
</summary>
<remarks>Data-source is 'COVER.SFREE_PREMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'COVER.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COVER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.AnnualPremium">
<summary>
Annual premium amount of the coverage. (NPREMIUM)..
</summary>
<remarks>Data-source is 'COVER.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied. (NRATE)..
</summary>
<remarks>Data-source is 'COVER.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.WaitingPeriodNumber">
<summary>
Number of days/hours/months of the waiting period. (NWAIT_QUAN)..
</summary>
<remarks>Data-source is 'COVER.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RatePerThousand">
<summary>
Rate to be applied (o/oo). (NRATECOVE)..
</summary>
<remarks>Data-source is 'COVER.NRATECOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COVER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.UnitsOfWaitingPeriod">
<summary>
Units for Waiting Period (days, months). (SWAIT_TYPE)..
</summary>
<remarks>Data-source is 'COVER.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FranchiseOrDeductible">
<summary>
It indicates if a franchise/deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'COVER.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.DiscountAmountBecauseFranchiseOrDeductible">
<summary>
Amount of discount because of the franchise or deductible. (NDISC_AMOUN)..
</summary>
<remarks>Data-source is 'COVER.NDISC_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'COVER.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfInsuranceDurationEnum">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsuranceDuration'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfInsuranceDurationEnumText">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.DurationOfInsurance">
<summary>
Duration of the insurance (used for Life). (NDURINSUR)..
</summary>
<remarks>Data-source is 'COVER.NDURINSUR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.nAgeMinIns">
<summary>
.
</summary>
<remarks>Data-source is 'COVER.NAGEMININS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.nAgeMaxIns">
<summary>
.
</summary>
<remarks>Data-source is 'COVER.NAGEMAXINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MaximumAgeInsurance">
<summary>
Maximum age of insurance. (NAGEMAXPER)..
</summary>
<remarks>Data-source is 'COVER.NAGEMAXPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfDurationOfPayments">
<summary>
Type of duration for the payments. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'COVER.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfDurationOfPaymentsEnum">
<summary>
Type of duration for the payments.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDurationOfPayments'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfDurationOfPaymentsEnumText">
<summary>
Type of duration for the payments.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.DurationOfPayments">
<summary>
Duration of the payments (used for Life). (NDURPAY)..
</summary>
<remarks>Data-source is 'COVER.NDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.nCauseUpd">
<summary>
.
</summary>
<remarks>Data-source is 'COVER.NCAUSEUPD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RequestedInsuredAmount">
<summary>
Sum Insured amount requested related to the insured person (NCAPITAL_WAIT)..
</summary>
<remarks>Data-source is 'COVER.NCAPITAL_WAIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MaximumInsurableAge">
<summary>
Maximum age to which the insured person is protected (NAGELIMIT)..
</summary>
<remarks>Data-source is 'COVER.NAGELIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MaximumAge">
<summary>
Maximum age for the insured person in this coverage. (NAGE_PER)..
</summary>
<remarks>Data-source is 'COVER.NAGE_PER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CoverageAniversaryDate">
<summary>
Date of anniversary of the coverage. (DANIVERSARY)..
</summary>
<remarks>Data-source is 'COVER.DANIVERSARY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.dSeekTar">
<summary>
.
</summary>
<remarks>Data-source is 'COVER.DSEEKTAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RetroactiveEndorsementDate">
<summary>
Date of The Retroactive Endorsement. (DFER)..
</summary>
<remarks>Data-source is 'COVER.DFER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'COVER.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage. (NRETARIF)..
</summary>
<remarks>Data-source is 'COVER.NRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfPremiumRecalculationEnum">
<summary>
Type of recalculation of premium of a coverage.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfPremiumRecalculation'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfPremiumRecalculationEnumText">
<summary>
Type of recalculation of premium of a coverage.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.OriginalInsuredAmount">
<summary>
Initial sum insured of the coverage (when the policy was issued) (NCAPITAL_O)..
</summary>
<remarks>Data-source is 'COVER.NCAPITAL_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.OriginalAnnualPremium">
<summary>
Annual premium amount of the coverage, as originally calculated. (NPREMIUM_O)..
</summary>
<remarks>Data-source is 'COVER.NPREMIUM_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.OriginalRatePerThousand">
<summary>
Rate to be applied (o/oo), as originally calculated. (NRATECOVE_O)..
</summary>
<remarks>Data-source is 'COVER.NRATECOVE_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TaxAmount">
<summary>
Tax amount (related to the premium amount). (NTAXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER.NTAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.AnnualExtraPremium">
<summary>
Annual amount of the surcharge. (NRECAMOUNT)..
</summary>
<remarks>Data-source is 'COVER.NRECAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.AnnualDiscount">
<summary>
Annual amount of the discount. (NDESCAMOUNT)..
</summary>
<remarks>Data-source is 'COVER.NDESCAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.nCommi_an">
<summary>
.
</summary>
<remarks>Data-source is 'COVER.NCOMMI_AN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.GrossNetRate">
<summary>
Gross net rate. (NRATECOVE_B)..
</summary>
<remarks>Data-source is 'COVER.NRATECOVE_B'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.SumInsuredRequiredByPolicyHolder">
<summary>
Amount of the sum insured required by the policy holder (NCAPITAL_REQ)..
</summary>
<remarks>Data-source is 'COVER.NCAPITAL_REQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FranchiseOrDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim. (NRATECLA)..
</summary>
<remarks>Data-source is 'COVER.NRATECLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FixedAmountOfFranchiseOrDeductibleClaim">
<summary>
Fixed amount franchise or deductible amount to be applied to the claim. (NFIXAMOCLA)..
</summary>
<remarks>Data-source is 'COVER.NFIXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MinimumAmountOfFranchiseOrDeductibleClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim. (NMINAMOCLA)..
</summary>
<remarks>Data-source is 'COVER.NMINAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MaximumAmountOfFranchiseOrDeductibleClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim (NMAXAMOCLA)..
</summary>
<remarks>Data-source is 'COVER.NMAXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.DiscountPercentageClaim">
<summary>
Percentage of discount because of franchise or deductible Siniestro. (NDISCCLA)..
</summary>
<remarks>Data-source is 'COVER.NDISCCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.DiscountAmountClaim">
<summary>
Amount of discount because of the franchise or deductible. (NDISC_AMOCLA)..
</summary>
<remarks>Data-source is 'COVER.NDISC_AMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied. (NFRANCDAYS)..
</summary>
<remarks>Data-source is 'COVER.NFRANCDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MaxAmountEvent">
<summary>
Maximum number of events allowed at the time of occurrence of a claim for compensation purposes (NMAXEVEN_QUAN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NMAXEVEN_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MaxFrecuencyEvent">
<summary>
Frequency that will apply to the maximum number of events allowed (&#34;amount&#34;) or &#34;Limit amount per Event&#34;, as the case may be. It is an optional field. Possible values according to table340 (NFREQUEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NFREQUEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MaxRoutineEvent">
<summary>
Routine name a routine to be applied to count the event limit, related to the &#34;Maximum Event&#34; functionality (SROUTMAX_EVEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.SROUTMAX_EVEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FreqMaxEven">
<summary>
Frequency code for the maximum event control (NFREQMAXEVEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NFREQMAXEVEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RevalType">
<summary>
Indices of revaluation (NREVALTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NREVALTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CodeFrecuencyCapital">
<summary>
Code of frequency of capital (NPAYFREQ)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CodeFrecuencyCapitalEnum">
<summary>
Code of frequency of capital
</summary>
<remarks>This property use a enumeration based on property 'CodeFrecuencyCapital'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CodeFrecuencyCapitalEnumText">
<summary>
Code of frequency of capital
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital (NCAPFREQQUAN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NCAPFREQQUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency (NCAPFREQAMOUNT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NCAPFREQAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.PercentageOFCoinsuranceToApply">
<summary>
Percentage of coinsurance to apply. (NCOAPPLYPERC)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NCOAPPLYPERC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CoinsuranceFixAmount">
<summary>
Coinsurance Fix amount (NCOFIXAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NCOFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CoinsuranceMaximumAmount">
<summary>
Coinsurance maximum amount (NCOMAXAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NCOMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CoinsuranceMminimumAmount">
<summary>
Coinsurance minimum amount (NCOMINAMOUNT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NCOMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FlagApplicationOfCoinsurance">
<summary>
Flag application of coinsurance (SCOCAPL)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.SCOCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.PercentageAdministrationCost">
<summary>
Percentage of AdministrationCost (NADMCOST)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NADMCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.PercentageAcquisitionCost">
<summary>
Percentage of AcquisitionCost (NACQCOST)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NACQCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.PercentagOfUtility">
<summary>
Percentage of Utility (NUTILITY)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NUTILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.OthersCosts">
<summary>
Percentage of Others Costs (NOTHERCOST)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NOTHERCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.MillageOfSumInsuredCost">
<summary>
Millage of Sum Insured Cost (NSUMINSUREDCOST)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NSUMINSUREDCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.NREINSQUOT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NREINSQUOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.NFIXEXPENSAMO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NFIXEXPENSAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CurrencyCapitalDeductible">
<summary>
Currency of the Capital deductible (NFDCURR_CAP)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NFDCURR_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CurrencySiniestroDeductible">
<summary>
Currency of the siniestro deductible (NFDCURR_CLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NFDCURR_CLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfLackPeriod">
<summary>
Type of Lack Period (SCAREN_TYPE)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.SCAREN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.DurationOfLackPeriod">
<summary>
Number of days, months, hours of the elimination period (NCAREN_QUAN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER.NCAREN_QUAN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.NewLifeInsuranceCoverageInstance">
<summary>
Initializes the 'LifeInsuranceCoverage' instance.
</summary>
 <returns>The 'LifeInsuranceCoverage' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.LifeInsuranceCoverage">
<summary>
Additional information on life insurances coverage. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.NewLifeCoverageVariationsInstance">
<summary>
Initializes the 'LifeCoverageVariations' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.NewLifeCoverageVariationItem(System.Boolean)">
<summary>
Add a new item to the collection of 'LifeCoverageVariations', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'LifeCoverageVariation' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.LifeCoverageVariations">
<summary>
Variations in coverage of life (life). collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.NewSpecificRiskCoverageCollectionInstance">
<summary>
Initializes the 'SpecificRiskCoverageCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.NewSpecificRiskCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SpecificRiskCoverageCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SpecificRiskCoverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.SpecificRiskCoverageCollection">
<summary>
Specific risk coverage collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.Compare(InMotionGIT.Policy.Entity.Contracts.Coverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Coverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FranchiseOrDeductibleIndicatorDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.UnitsOfWaitingPeriodDescription">
 <summary>
 Units for Waiting Period (days, months).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FranchiseOrDeductibleDescription">
 <summary>
 It indicates if a franchise/deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfInsuranceDurationDescription">
 <summary>
 Type of duration for the insurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfDurationOfPaymentsDescription">
 <summary>
 Type of duration for the payments.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.nCauseUpdDescription">
 <summary>
 
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5547'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfPremiumRecalculationDescription">
 <summary>
 Type of recalculation of premium of a coverage.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5559'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.FreqMaxEvenDescription">
 <summary>
 Frequency code for the maximum event control
 </summary>
 <remarks>
 This property is associated with the field 'TABLE340' on the table 'TABLE340'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.RevalTypeDescription">
 <summary>
 Indices of revaluation
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6714' on the table 'TABLE6714'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.CodeFrecuencyCapitalDescription">
 <summary>
 Code of frequency of capital
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Coverage.TypeOfLackPeriodDescription">
 <summary>
 Type of Lack Period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoverageCollection">
 <summary>
 Collection for Coverage class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageCollection.AddCoverage">
 <summary>
 Add an instance of class 'Coverage' in the CoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoverageGroup">
 <summary>
 Coverages related with a group.
 </summary>
<remarks>Data-source is 'COVER_CO_G'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.CreateNewCoverageGroup">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._Limit">
<summary>
Limit amount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._CoverageChangeIndicator">
<summary>
Coverage change indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Percentage of discount because of franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._WaitingPeriodNumber">
<summary>
Number of days/hours/months of the waiting period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TypeOfEliminationPeriod">
<summary>
Type of Elimination Period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FranchiseOrDeductible">
<summary>
It indicates if a franchise/deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._DiscountAmountBecauseFranchiseOrDeductible">
<summary>
Amount of discount because of the franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._DurationOfInsurance">
<summary>
Duration of the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MinimumEntryAgeMales">
<summary>
Minimum entry age for this role (males).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MaximumEntryAgeMales">
<summary>
Maximum entry age for this role (males).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MaximumAgeInsuranceMales">
<summary>
Maximum age of insurance (Masculine).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (females).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (females).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MaximumAgeInsuranceFemale">
<summary>
Maximum age of insurance (Female).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TypeOfDurationOfPayments">
<summary>
Type of duration for the payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._DurationOfPayments">
<summary>
Duration of the payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._RatePerThousand">
<summary>
Rate to be applied (o/oo).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._Premium">
<summary>
Annual premium amount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._sRequired">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._OriginalInsuredAmount">
<summary>
Initial sum insured of the coverage (when the policy was issued)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._AnnualPremium">
<summary>
Annual premium amount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._InitialRatePerThousand">
<summary>
Rate to be applied (o/oo).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TotalInsuredAmount">
<summary>
Total annual amount of the sum insured under the coverage (sum of all certificates).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TotalRequestedInsuredAmount">
<summary>
Total requested annual amount of the sum insured under the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NetAnnualPremium">
<summary>
Annual total amount of net premium of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._AnnualNetRate">
<summary>
Annual net rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TaxAmount">
<summary>
Annual total amount of tax related to the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._CoverageExtraPremium">
<summary>
Annual total amount of surcharge for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._AnnualDiscount">
<summary>
Annual total amount of discount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TotalAnnualCommission">
<summary>
Annual total amount of commission of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._GrossNetRate">
<summary>
Gross net rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MaximumAllowableSumInsured">
<summary>
Maximum allowable amount of sum insured for coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MinimumAllowableSumInsured">
<summary>
Minimum allowable amount of sum insured for coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MaximumAllowablePremium">
<summary>
Maximum allowable amount of premium for coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MinimumAllowablePremium">
<summary>
Minumum allowable amount of premium for coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FormMinimumAgeIsExpressedMale">
<summary>
Form in which the minimum age (male) is expressed
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FormMinimumAgeIsExpressedFemale">
<summary>
Form in which the minimum age(female) is expressed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NumMaxEvent">
<summary>
Maximum number of events allowed at the time of occurrence of a claim for compensation purposes
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FrecuencMaxEvent">
<summary>
Frequency that will apply to the maximum number of events allowed (&#34;amount&#34;) or &#34;Limit amount per Event&#34;, as the case may be. It is an optional field. Possible values according to table340
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._RoutineMaxEvent">
<summary>
Routine name a routine to be applied to count the event
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FreqMaxEven">
<summary>
Frequency code for the maximum event control
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NREINSQUOT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NADMCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NACQCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NUTILITY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NOTHERCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NSUMINSUREDCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._NFIXEXPENSAMO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FranchiseDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._FixedAmountFranchiseDeductibleAmountClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MinimumAmountFranchiseDeductibleAmountClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._MaximumFranchiseDeductibleAmountClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._PercentageDiscountFranchiseDeductible">
<summary>
Percentage of discount because of franchise or deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._AmountDiscountFranchiseDeductible">
<summary>
Amount of discount because of the franchise or deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._CurrencyCapitalDeductible">
<summary>
Currency of the Capital deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._CurrencySiniestroDeductible">
<summary>
Currency of the siniestro deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._TypeOfLackPeriod">
<summary>
Type of Lack Period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._DurationOfLackPeriod">
<summary>
Number of days, months, hours of the elimination period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageGroup._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.Limit">
<summary>
Limit amount of the coverage. (NCAPITAL)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.CoverageChangeIndicator">
<summary>
Coverage change indicator. (SCHANGE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.SCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied (SFRANDEDI)..
</summary>
<remarks>Data-source is 'COVER_CO_G.SFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Percentage of discount because of franchise or deductible. (NDISCOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFIXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount. (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.WaitingPeriodNumber">
<summary>
Number of days/hours/months of the waiting period. (NWAIT_QUAN)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfEliminationPeriod">
<summary>
Type of Elimination Period. (SWAIT_TYPE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied. (NRATE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FranchiseOrDeductible">
<summary>
It indicates if a franchise/deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'COVER_CO_G.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.DiscountAmountBecauseFranchiseOrDeductible">
<summary>
Amount of discount because of the franchise or deductible. (NDISC_AMOUN)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NDISC_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfInsuranceDurationEnum">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsuranceDuration'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfInsuranceDurationEnumText">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.DurationOfInsurance">
<summary>
Duration of the insurance. (NDURINSUR)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NDURINSUR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MinimumEntryAgeMales">
<summary>
Minimum entry age for this role (males). (NAGEMININSM)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NAGEMININSM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MaximumEntryAgeMales">
<summary>
Maximum entry age for this role (males). (NAGEMAXINSM)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NAGEMAXINSM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MaximumAgeInsuranceMales">
<summary>
Maximum age of insurance (Masculine). (NAGEMAXPERM)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NAGEMAXPERM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (females). (NAGEMININSF)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NAGEMININSF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (females). (NAGEMAXINSF)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NAGEMAXINSF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MaximumAgeInsuranceFemale">
<summary>
Maximum age of insurance (Female). (NAGEMAXPERF)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NAGEMAXPERF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfDurationOfPayments">
<summary>
Type of duration for the payments. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfDurationOfPaymentsEnum">
<summary>
Type of duration for the payments.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDurationOfPayments'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfDurationOfPaymentsEnumText">
<summary>
Type of duration for the payments.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.DurationOfPayments">
<summary>
Duration of the payments. (NDURPAY)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.RatePerThousand">
<summary>
Rate to be applied (o/oo). (NRATECOVE)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NRATECOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.Premium">
<summary>
Annual premium amount of the coverage. (NPREMIUM)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'COVER_CO_G.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.sRequired">
<summary>
.
</summary>
<remarks>Data-source is 'COVER_CO_G.SREQUIRED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage. (NRETARIF)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfPremiumRecalculationEnum">
<summary>
Type of recalculation of premium of a coverage.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfPremiumRecalculation'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfPremiumRecalculationEnumText">
<summary>
Type of recalculation of premium of a coverage.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.OriginalInsuredAmount">
<summary>
Initial sum insured of the coverage (when the policy was issued) (NCAPITAL_O)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAPITAL_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.AnnualPremium">
<summary>
Annual premium amount of the coverage. (NPREMIUM_O)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NPREMIUM_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.InitialRatePerThousand">
<summary>
Rate to be applied (o/oo). (NRATECOVE_O)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NRATECOVE_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TotalInsuredAmount">
<summary>
Total annual amount of the sum insured under the coverage (sum of all certificates). (NCAPITALTOT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAPITALTOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TotalRequestedInsuredAmount">
<summary>
Total requested annual amount of the sum insured under the coverage. (NCAPITALWAITTOT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAPITALWAITTOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NetAnnualPremium">
<summary>
Annual total amount of net premium of the coverage. (NPREMIUMTOT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NPREMIUMTOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.AnnualNetRate">
<summary>
Annual net rate. (NRATEAVG_N)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NRATEAVG_N'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TaxAmount">
<summary>
Annual total amount of tax related to the coverage. (NTAXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NTAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.CoverageExtraPremium">
<summary>
Annual total amount of surcharge for the coverage. (NRECAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NRECAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.AnnualDiscount">
<summary>
Annual total amount of discount of the coverage. (NDESCAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NDESCAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TotalAnnualCommission">
<summary>
Annual total amount of commission of the coverage. (NCOMMI_AN)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCOMMI_AN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.GrossNetRate">
<summary>
Gross net rate. (NRATECOVE_B)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NRATECOVE_B'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MaximumAllowableSumInsured">
<summary>
Maximum allowable amount of sum insured for coverage (NCAPMAX)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAPMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MinimumAllowableSumInsured">
<summary>
Minimum allowable amount of sum insured for coverage (NCAPMIN)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAPMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MaximumAllowablePremium">
<summary>
Maximum allowable amount of premium for coverage (NPREMAX)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NPREMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MinimumAllowablePremium">
<summary>
Minumum allowable amount of premium for coverage (NPREMIN)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NPREMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FormMinimumAgeIsExpressedMale">
<summary>
Form in which the minimum age (male) is expressed (NTYP_AGEMINM)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NTYP_AGEMINM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FormMinimumAgeIsExpressedMaleEnum">
<summary>
Form in which the minimum age (male) is expressed
</summary>
<remarks>This property use a enumeration based on property 'FormMinimumAgeIsExpressedMale'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FormMinimumAgeIsExpressedMaleEnumText">
<summary>
Form in which the minimum age (male) is expressed
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FormMinimumAgeIsExpressedFemale">
<summary>
Form in which the minimum age(female) is expressed. (NTYP_AGEMINF)..
</summary>
<remarks>Data-source is 'COVER_CO_G.NTYP_AGEMINF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FormMinimumAgeIsExpressedFemaleEnum">
<summary>
Form in which the minimum age(female) is expressed.
</summary>
<remarks>This property use a enumeration based on property 'FormMinimumAgeIsExpressedFemale'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FormMinimumAgeIsExpressedFemaleEnumText">
<summary>
Form in which the minimum age(female) is expressed.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NumMaxEvent">
<summary>
Maximum number of events allowed at the time of occurrence of a claim for compensation purposes (NMAXEVEN_QUAN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NMAXEVEN_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FrecuencMaxEvent">
<summary>
Frequency that will apply to the maximum number of events allowed (&#34;amount&#34;) or &#34;Limit amount per Event&#34;, as the case may be. It is an optional field. Possible values according to table340 (NFREQUEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NFREQUEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.RoutineMaxEvent">
<summary>
Routine name a routine to be applied to count the event (SROUTMAX_EVEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.SROUTMAX_EVEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FreqMaxEven">
<summary>
Frequency code for the maximum event control (NFREQMAXEVEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NFREQMAXEVEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital (NCAPFREQQUAN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAPFREQQUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency (NCAPFREQAMOUNT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAPFREQAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NREINSQUOT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NREINSQUOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NADMCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NADMCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NACQCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NACQCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NUTILITY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NUTILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NOTHERCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NOTHERCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NSUMINSUREDCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NSUMINSUREDCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.NFIXEXPENSAMO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NFIXEXPENSAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FranchiseDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim (NRATECLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NRATECLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FixedAmountFranchiseDeductibleAmountClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim (NFIXAMOCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NFIXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MinimumAmountFranchiseDeductibleAmountClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim (NMINAMOCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NMINAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.MaximumFranchiseDeductibleAmountClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim (NMAXAMOCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NMAXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.PercentageDiscountFranchiseDeductible">
<summary>
Percentage of discount because of franchise or deductible (NDISCCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NDISCCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.AmountDiscountFranchiseDeductible">
<summary>
Amount of discount because of the franchise or deductible (NDISC_AMOCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NDISC_AMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied (NFRANCDAYS)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NFRANCDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.CurrencyCapitalDeductible">
<summary>
Currency of the Capital deductible (NFDCURR_CAP)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NFDCURR_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.CurrencySiniestroDeductible">
<summary>
Currency of the siniestro deductible (NFDCURR_CLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NFDCURR_CLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfLackPeriod">
<summary>
Type of Lack Period (SCAREN_TYPE)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.SCAREN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.DurationOfLackPeriod">
<summary>
Number of days, months, hours of the elimination period (NCAREN_QUAN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_G.NCAREN_QUAN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.Compare(InMotionGIT.Policy.Entity.Contracts.CoverageGroup,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoverageGroupItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FranchiseOrDeductibleIndicatorDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfEliminationPeriodDescription">
 <summary>
 Type of Elimination Period.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FranchiseOrDeductibleDescription">
 <summary>
 It indicates if a franchise/deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfInsuranceDurationDescription">
 <summary>
 Type of duration for the insurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfDurationOfPaymentsDescription">
 <summary>
 Type of duration for the payments.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfPremiumRecalculationDescription">
 <summary>
 Type of recalculation of premium of a coverage.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5559'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.FreqMaxEvenDescription">
 <summary>
 Frequency code for the maximum event control
 </summary>
 <remarks>
 This property is associated with the field 'TABLE340' on the table 'TABLE340'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroup.TypeOfLackPeriodDescription">
 <summary>
 Type of Lack Period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoverageGroupCollection">
 <summary>
 Collection for CoverageGroup class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroupCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroupCollection.AddCoverageGroup">
 <summary>
 Add an instance of class 'CoverageGroup' in the CoverageGroupCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroupCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CoverageGroupCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageGroupCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroupCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageGroupCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy">
 <summary>
 Coverages related with a policy.
 </summary>
<remarks>Data-source is 'COVER_CO_P'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.CreateNewCoveragePolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._Role">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._Limit">
<summary>
Limit amount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._CoverageChangeIndicator">
<summary>
Coverage change indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Percentage of discount because of franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaximumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._WaitingPeriodNumber">
<summary>
Number of days/hours/months of the waiting period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TypeOfEliminationPeriod">
<summary>
Type of Elimination Period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FranchiseOrDeductible">
<summary>
It indicates if a franchise/deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._DiscountAmountBecauseFranchiseOrDeductible">
<summary>
Amount of discount because of the franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._DurationOfInsurance">
<summary>
Duration of the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MinimumEntryAgeMales">
<summary>
Minimum entry age for this role (males).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaximumEntryAgeMales">
<summary>
Maximum entry age for this role (males).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._nAgeMaxPerM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (females).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (females).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaximumAgeInsuranceFemale">
<summary>
Maximum age of insurance (Female).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._DurationOfPayments">
<summary>
Duration of the payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TypeOfDurationOfPayments">
<summary>
Type of duration for the payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._RatePerThousand">
<summary>
Rate to be applied (o/oo).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._nPremium">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._Required">
<summary>
Indicator of required coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._OriginalInsuredAmount">
<summary>
Initial sum insured of the coverage (when the policy was issued)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._AnnualPremium">
<summary>
Annual premium amount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._InitialRatePerThousand">
<summary>
Rate to be applied (o/oo).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TotalInsuredAmount">
<summary>
Total annual amount of the sum insured under the coverage (sum of all certificates).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TotalRequestedInsuredAmount">
<summary>
Total requested annual amount of the sum insured under the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NetAnnualPremium">
<summary>
Annual total amount of net premium of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._AnnualNetRate">
<summary>
Annual net rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TaxAmount">
<summary>
Annual total amount of tax related to the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._CoverageExtraPremium">
<summary>
Annual total amount of surcharge for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._AnnualDiscount">
<summary>
Annual total amount of discount of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TotalAnnualCommission">
<summary>
Annual total amount of commission of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._GrossNetRate">
<summary>
Gross net rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaximumAllowableSumInsured">
<summary>
Maximum allowable amount of sum insured for coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MinimumAllowableSumInsured">
<summary>
Minimum allowable amount of sum insured for coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaximumAllowablePremium">
<summary>
Maximum allowable amount of premium for coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MinimumAllowablePremium">
<summary>
Minimum allowable amount of premium for coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FormMinimumAgeIsExpressedMale">
<summary>
Form in which the minimum age (male) is expressed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FormMinimumAgeIsExpressedFemale">
<summary>
Form in which the minimum age (female) is expressed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NumMaxEvent">
<summary>
Maximum number of events allowed at the time of occurrence of a claim for compensation purposes
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaxFrecuenceEvent">
<summary>
Frequency that will apply to the maximum number of events allowed (&#34;amount&#34;) or &#34;Limit amount per Event&#34;, as the case may be. It is an optional field. Possible values according to table340
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaxEventRoutine">
<summary>
Routine name a routine to be applied to count the event limi
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FreqMaxEven">
<summary>
Frequency code for the maximum event control
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NREINSQUOT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NADMCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NACQCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NUTILITY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NOTHERCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NSUMINSUREDCOST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._NFIXEXPENSAMO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FranchiseDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._FixedAmountFranchiseDeductibleAmountClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MinimumAmountFranchiseDeductibleAmountClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._MaximumFranchiseDeductibleAmountClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._PercentageDiscountFranchiseDeductible">
<summary>
Percentage of discount because of franchise or deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._AmountDiscountFranchiseDeductible">
<summary>
Amount of discount because of the franchise or deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._CurrencyCapitalDeductible">
<summary>
Currency of the Capital deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._CurrencySiniestroDeductible">
<summary>
Currency of the siniestro deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._TypeOfLackPeriod">
<summary>
Type of Lack Period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._DurationOfLackPeriod">
<summary>
Number of days, months, hours of the elimination period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.Role">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'Role'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.Limit">
<summary>
Limit amount of the coverage. (NCAPITAL)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.CoverageChangeIndicator">
<summary>
Coverage change indicator. (SCHANGE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.SCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied (SFRANDEDI)..
</summary>
<remarks>Data-source is 'COVER_CO_P.SFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Percentage of discount because of franchise or deductible. (NDISCOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFIXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaximumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount. (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.WaitingPeriodNumber">
<summary>
Number of days/hours/months of the waiting period. (NWAIT_QUAN)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfEliminationPeriod">
<summary>
Type of Elimination Period. (SWAIT_TYPE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied. (NRATE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FranchiseOrDeductible">
<summary>
It indicates if a franchise/deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'COVER_CO_P.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.DiscountAmountBecauseFranchiseOrDeductible">
<summary>
Amount of discount because of the franchise or deductible. (NDISC_AMOUN)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NDISC_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.DurationOfInsurance">
<summary>
Duration of the insurance. (NDURINSUR)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NDURINSUR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfInsuranceDurationEnum">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsuranceDuration'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfInsuranceDurationEnumText">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MinimumEntryAgeMales">
<summary>
Minimum entry age for this role (males). (NAGEMININSM)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NAGEMININSM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaximumEntryAgeMales">
<summary>
Maximum entry age for this role (males). (NAGEMAXINSM)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NAGEMAXINSM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.nAgeMaxPerM">
<summary>
.
</summary>
<remarks>Data-source is 'COVER_CO_P.NAGEMAXPERM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (females). (NAGEMININSF)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NAGEMININSF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (females). (NAGEMAXINSF)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NAGEMAXINSF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaximumAgeInsuranceFemale">
<summary>
Maximum age of insurance (Female). (NAGEMAXPERF)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NAGEMAXPERF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.DurationOfPayments">
<summary>
Duration of the payments. (NDURPAY)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfDurationOfPayments">
<summary>
Type of duration for the payments. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfDurationOfPaymentsEnum">
<summary>
Type of duration for the payments.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDurationOfPayments'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfDurationOfPaymentsEnumText">
<summary>
Type of duration for the payments.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RatePerThousand">
<summary>
Rate to be applied (o/oo). (NRATECOVE)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NRATECOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.nPremium">
<summary>
.
</summary>
<remarks>Data-source is 'COVER_CO_P.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage. (NRETARIF)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfPremiumRecalculationEnum">
<summary>
Type of recalculation of premium of a coverage.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfPremiumRecalculation'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfPremiumRecalculationEnumText">
<summary>
Type of recalculation of premium of a coverage.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'COVER_CO_P.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.Required">
<summary>
Indicator of required coverage. (SREQUIRED)..
</summary>
<remarks>Data-source is 'COVER_CO_P.SREQUIRED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.OriginalInsuredAmount">
<summary>
Initial sum insured of the coverage (when the policy was issued) (NCAPITAL_O)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAPITAL_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.AnnualPremium">
<summary>
Annual premium amount of the coverage. (NPREMIUM_O)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NPREMIUM_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.InitialRatePerThousand">
<summary>
Rate to be applied (o/oo). (NRATECOVE_O)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NRATECOVE_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TotalInsuredAmount">
<summary>
Total annual amount of the sum insured under the coverage (sum of all certificates). (NCAPITALTOT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAPITALTOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TotalRequestedInsuredAmount">
<summary>
Total requested annual amount of the sum insured under the coverage. (NCAPITALWAITTOT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAPITALWAITTOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NetAnnualPremium">
<summary>
Annual total amount of net premium of the coverage. (NPREMIUMTOT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NPREMIUMTOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.AnnualNetRate">
<summary>
Annual net rate. (NRATEAVG_N)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NRATEAVG_N'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TaxAmount">
<summary>
Annual total amount of tax related to the coverage. (NTAXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NTAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.CoverageExtraPremium">
<summary>
Annual total amount of surcharge for the coverage. (NRECAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NRECAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.AnnualDiscount">
<summary>
Annual total amount of discount of the coverage. (NDESCAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NDESCAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TotalAnnualCommission">
<summary>
Annual total amount of commission of the coverage. (NCOMMI_AN)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCOMMI_AN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.GrossNetRate">
<summary>
Gross net rate. (NRATECOVE_B)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NRATECOVE_B'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaximumAllowableSumInsured">
<summary>
Maximum allowable amount of sum insured for coverage (NCAPMAX)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAPMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MinimumAllowableSumInsured">
<summary>
Minimum allowable amount of sum insured for coverage (NCAPMIN)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAPMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaximumAllowablePremium">
<summary>
Maximum allowable amount of premium for coverage (NPREMAX)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NPREMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MinimumAllowablePremium">
<summary>
Minimum allowable amount of premium for coverage (NPREMIN)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NPREMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FormMinimumAgeIsExpressedMale">
<summary>
Form in which the minimum age (male) is expressed. (NTYP_AGEMINM)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NTYP_AGEMINM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FormMinimumAgeIsExpressedMaleEnum">
<summary>
Form in which the minimum age (male) is expressed.
</summary>
<remarks>This property use a enumeration based on property 'FormMinimumAgeIsExpressedMale'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FormMinimumAgeIsExpressedMaleEnumText">
<summary>
Form in which the minimum age (male) is expressed.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FormMinimumAgeIsExpressedFemale">
<summary>
Form in which the minimum age (female) is expressed. (NTYP_AGEMINF)..
</summary>
<remarks>Data-source is 'COVER_CO_P.NTYP_AGEMINF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FormMinimumAgeIsExpressedFemaleEnum">
<summary>
Form in which the minimum age (female) is expressed.
</summary>
<remarks>This property use a enumeration based on property 'FormMinimumAgeIsExpressedFemale'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FormMinimumAgeIsExpressedFemaleEnumText">
<summary>
Form in which the minimum age (female) is expressed.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NumMaxEvent">
<summary>
Maximum number of events allowed at the time of occurrence of a claim for compensation purposes (NMAXEVEN_QUAN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NMAXEVEN_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaxFrecuenceEvent">
<summary>
Frequency that will apply to the maximum number of events allowed (&#34;amount&#34;) or &#34;Limit amount per Event&#34;, as the case may be. It is an optional field. Possible values according to table340 (NFREQUEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NFREQUEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaxEventRoutine">
<summary>
Routine name a routine to be applied to count the event limi (SROUTMAX_EVEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.SROUTMAX_EVEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FreqMaxEven">
<summary>
Frequency code for the maximum event control (NFREQMAXEVEN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NFREQMAXEVEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital (NCAPFREQQUAN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAPFREQQUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency (NCAPFREQAMOUNT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAPFREQAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NREINSQUOT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NREINSQUOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NADMCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NADMCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NACQCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NACQCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NUTILITY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NUTILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NOTHERCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NOTHERCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NSUMINSUREDCOST">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NSUMINSUREDCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.NFIXEXPENSAMO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NFIXEXPENSAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FranchiseDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim (NRATECLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NRATECLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FixedAmountFranchiseDeductibleAmountClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim (NFIXAMOCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NFIXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MinimumAmountFranchiseDeductibleAmountClaim">
<summary>
Minimum amount franchise or deductible amount to be applied to the claim (NMINAMOCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NMINAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.MaximumFranchiseDeductibleAmountClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim (NMAXAMOCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NMAXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.PercentageDiscountFranchiseDeductible">
<summary>
Percentage of discount because of franchise or deductible (NDISCCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NDISCCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.AmountDiscountFranchiseDeductible">
<summary>
Amount of discount because of the franchise or deductible (NDISC_AMOCLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NDISC_AMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied (NFRANCDAYS)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NFRANCDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.CurrencyCapitalDeductible">
<summary>
Currency of the Capital deductible (NFDCURR_CAP)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NFDCURR_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.CurrencySiniestroDeductible">
<summary>
Currency of the siniestro deductible (NFDCURR_CLA)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NFDCURR_CLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfLackPeriod">
<summary>
Type of Lack Period (SCAREN_TYPE)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.SCAREN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.DurationOfLackPeriod">
<summary>
Number of days, months, hours of the elimination period (NCAREN_QUAN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_CO_P.NCAREN_QUAN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.Compare(InMotionGIT.Policy.Entity.Contracts.CoveragePolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoveragePolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.RoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FranchiseOrDeductibleIndicatorDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfEliminationPeriodDescription">
 <summary>
 Type of Elimination Period.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FranchiseOrDeductibleDescription">
 <summary>
 It indicates if a franchise/deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfInsuranceDurationDescription">
 <summary>
 Type of duration for the insurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfDurationOfPaymentsDescription">
 <summary>
 Type of duration for the payments.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the line of business for reinsurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfPremiumRecalculationDescription">
 <summary>
 Type of recalculation of premium of a coverage.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5559'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.FreqMaxEvenDescription">
 <summary>
 Frequency code for the maximum event control
 </summary>
 <remarks>
 This property is associated with the field 'TABLE340' on the table 'TABLE340'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicy.TypeOfLackPeriodDescription">
 <summary>
 Type of Lack Period
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoveragePolicyCollection">
 <summary>
 Collection for CoveragePolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicyCollection.AddCoveragePolicy">
 <summary>
 Add an instance of class 'CoveragePolicy' in the CoveragePolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CoveragePolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoveragePolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoveragePolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium">
 <summary>
 Temporary Table used to Calculate The Following Cover's Components Sum Insured/ Premium Amount/ Franchise/ Deductible.
 </summary>
<remarks>Data-source is 'TCOVER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CreateNewCoverageWithCalculatedPremium">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RecordType">
<summary>
Type or Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Change">
<summary>
Coverage change indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FranchiseOrDeductibleIndicator">
<summary>
Type of franchise or deductible related to the coverage or policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Waittype">
<summary>
Type of Waiting Period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Freepremi">
<summary>
Coverage released of premium payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Description">
<summary>
Description of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Exist">
<summary>
Indicator of existence
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Required">
<summary>
It indicates that the coverage is required when issuing the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._UnlimitedCoverage">
<summary>
Unlimited sum insured indicator (infinite limit).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._TypeOfChangesAllowedOnInsuredAmount">
<summary>
Type of changes allowed on the sum insured (limit).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._TypeOfChangesAllowedOnPremium">
<summary>
Type of changes allowed on the premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FranchiseOrDeductibleRequired">
<summary>
The franchise/deductible is required.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RoutineForCalculationOfPremium">
<summary>
Routine of calculation and/or validation of the premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Effecdate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._InsuredAmount">
<summary>
Current amount of the sum insured of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Type of record to which the extra-premium/discount/tax applies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FranchiseOrDeductiblePercentage">
<summary>
Percentage of discount for franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._AnnualPremium">
<summary>
Annual premium amount of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RatePerThousand">
<summary>
Rate per thousand (o/oo) of calculation of the premium of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Capitali">
<summary>
Lowest limit of the range of insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumPercentageOfIncreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of increase of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumPercentageOfDecreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of decrease of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._PercentageOfIncreasePermittedForPremium">
<summary>
Allowed maximum percentage of increase/decrease
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumPercentageOfDecreaseOfPremium">
<summary>
Allowed maximum percentage of increase/decrease
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Discamoun">
<summary>
Amount related to the premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FixedRate">
<summary>
Rate per thousand (o/oo) of calculation of the premium of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MinimumPremium">
<summary>
Minimum premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumPremium">
<summary>
Maximum premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._PolicyID">
<summary>
Number identifying the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._CertificateID">
<summary>
Number of the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._LineOfBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Group">
<summary>
Code of the &#34;division&#34; within the group
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Waitquan">
<summary>
Number of days/hours/months of the waiting period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Groupinsu">
<summary>
Code of insured group
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._BaseCoverageThatContainThePremiumOfThis">
<summary>
Code of the coverage that contains the premium of this coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._CoverageToApplyRateOn">
<summary>
Code of the coverage on which the rate is applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Key">
<summary>
Key of the &#34;Tcover&#34; temporary file
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FixedPremium">
<summary>
Fixed premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FreeInsuredAmount">
<summary>
The sum insured will be entered by the user at the moment of issuing the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._SecurityLevelForUpdatingInsuredAmount">
<summary>
Security level needed for the user to update the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._SecurityLevelForUpdatingPremium">
<summary>
Security level needed for the user to update the premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._SecurityLevelForUpdatingFranchiseOrDeductible">
<summary>
Level of the user (update or query) for franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._PossibleChangesToFranchiseOrDeductible">
<summary>
Type of changes allowed on the franchise/deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumPercentageOfIncreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of increase of the franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumPercentageOfDecreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of decrease of the franchise/deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._BaseCoverageForInsuredAmount">
<summary>
Code of coverage on which the percentage is applied to obtain the limit of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._PercentageOverOtherCoverage">
<summary>
Percentage to be applied to the sum insured of another coverage to obtain this sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._PFrandedi">
<summary>
Type of franchise or deductible related to the coverage of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumInsuredAmount">
<summary>
Maximum sum insured
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MinimumInsuredAmount">
<summary>
Minimum sum insured
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._AddsToObtainInsuredAmount">
<summary>
Indicator of the addition to obtain the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._TarifCurr">
<summary>
Code of the currency in which the rate of the coverage is expressed
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RoutineForCalculationOfInsuredAmountAtRenewal">
<summary>
Calculation Routine for Sum Insured (Renewal Process).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FixedInsuredAmount">
<summary>
Fixed amount of the sum insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._CoverageDuration">
<summary>
Duration of the insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MinimumEntryAge">
<summary>
Minimum entry age for this role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumEntryAge">
<summary>
Maximum entry age for this role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumAgeInsurance">
<summary>
Maximum age of insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._TypeOfDurationOfPayments">
<summary>
Type of duration for the payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._DurationOfPayments">
<summary>
Duration of the payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._CauseUpd">
<summary>
Reason why the insured person was excluded from the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RequestedInsuredAmount">
<summary>
Sum Insured amount requested related to the insured person
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._AgeLimit">
<summary>
Maximum age to which the insured person is protected
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Ageper">
<summary>
Maximum age of insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._CoverageAniversaryDate">
<summary>
Date of anniversary of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Seektar">
<summary>
Search date of the rate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Fer">
<summary>
Date of The Retroactive Endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._ReinsuranceLineOfBusiness">
<summary>
Code of the reinsurance line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._ClientRole">
<summary>
Role of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmount">
<summary>
Role of the coverage on which the insured amount calculation percentage is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RoleOfBaseCoverageThatContainThePremiumOfThis">
<summary>
Role of the coverage on which the premium amount is included
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (Female)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (female)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumAgeInsuranceFemale">
<summary>
Maximum age of insurance (female)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Defaultic">
<summary>
Ii indicates that the coverage is selected by default in the certificates of the master policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._Requirec">
<summary>
It indicates that the coverage is required in the certificates of the master policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._DependenceFromMainInsured">
<summary>
Dependence indicator of the main insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._ActionCov">
<summary>
Code of the action to be executed for the coverages involved in a claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._PercentToApply">
<summary>
Percentage to be applied to the premium/rate calculated by the system
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._LimitCalculatedOnBasicInsuredAmounts">
<summary>
It indicates that the sum insured will be determined based on the basic sums insured
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._OriginalInsuredAmount">
<summary>
Initial sum insured of the coverage (when the policy was issued)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._OriginalAnnualPremium">
<summary>
Annual premium amount of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._OriginalRatePerThousand">
<summary>
Calculation rate of the premium when issuing the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._BaseCoverageForMaximumInsuredAmountAllowed">
<summary>
Coverage code to apply the percentage to obtain the maximum insured amount permitted.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._PercentageToApply">
<summary>
Percentage of limit on another coverage to control the maximum permitted.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._BaseRoleForCalculation">
<summary>
Role of the coverage to which the percentage must be applied to obtain the maximum allowed
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MultipleBaseForInsuredAmount">
<summary>
Base to calculate insured amount as a multiple of it.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._GenCurrency">
<summary>
Currency of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._SCONDSVS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._NTYP_AGEMINM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._NTYP_AGEMINF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._NCAPITAL_REQ">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._SINHERIT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FranchiseOrDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._FixedAmountOfFranchiseOrDeductibleClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MinimumAmountOfFranchiseOrDeductibleClaim">
<summary>
Minimum franchise or deductible amount Claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._MaximumAmountOfFranchiseOrDeductibleClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._DiscountPercentageClaim">
<summary>
Percentage of discount because of franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._DiscountAmountClaim">
<summary>
Amount of discount because of the franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._CodeFrecuencyCapital">
<summary>
Code of frequency of capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium._RevalType">
<summary>
Index type
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RecordType">
<summary>
Type or Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TCOVER.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RecordTypeEnum">
<summary>
Type or Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RecordTypeEnumText">
<summary>
Type or Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Change">
<summary>
Coverage change indicator. (SCHANGE)..
</summary>
<remarks>Data-source is 'TCOVER.SCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FranchiseOrDeductibleIndicator">
<summary>
Type of franchise or deductible related to the coverage or policy. (SFRANDEDI)..
</summary>
<remarks>Data-source is 'TCOVER.SFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Waittype">
<summary>
Type of Waiting Period (SWAIT_TYPE)..
</summary>
<remarks>Data-source is 'TCOVER.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'TCOVER.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Freepremi">
<summary>
Coverage released of premium payment. (SFREE_PREMI)..
</summary>
<remarks>Data-source is 'TCOVER.SFREE_PREMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Description">
<summary>
Description of the coverage (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TCOVER.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Exist">
<summary>
Indicator of existence (SEXIST)..
</summary>
<remarks>Data-source is 'TCOVER.SEXIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Required">
<summary>
It indicates that the coverage is required when issuing the policy (SREQUIRE)..
</summary>
<remarks>Data-source is 'TCOVER.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
<remarks>Data-source is 'TCOVER.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.UnlimitedCoverage">
<summary>
Unlimited sum insured indicator (infinite limit). (SCACALILI)..
</summary>
<remarks>Data-source is 'TCOVER.SCACALILI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfChangesAllowedOnInsuredAmount">
<summary>
Type of changes allowed on the sum insured (limit). (SCH_TYP_CAP)..
</summary>
<remarks>Data-source is 'TCOVER.SCH_TYP_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfChangesAllowedOnPremium">
<summary>
Type of changes allowed on the premium (SCHANGE_TYP)..
</summary>
<remarks>Data-source is 'TCOVER.SCHANGE_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FranchiseOrDeductibleRequired">
<summary>
The franchise/deductible is required. (SFDREQUIRE)..
</summary>
<remarks>Data-source is 'TCOVER.SFDREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RoutineForCalculationOfPremium">
<summary>
Routine of calculation and/or validation of the premium (SROUPREMI)..
</summary>
<remarks>Data-source is 'TCOVER.SROUPREMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Effecdate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TCOVER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.InsuredAmount">
<summary>
Current amount of the sum insured of the coverage (NCAPITAL)..
</summary>
<remarks>Data-source is 'TCOVER.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Type of record to which the extra-premium/discount/tax applies. (NDISCOUNT)..
</summary>
<remarks>Data-source is 'TCOVER.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFIXAMOUNT)..
</summary>
<remarks>Data-source is 'TCOVER.NFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount. (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'TCOVER.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FranchiseOrDeductiblePercentage">
<summary>
Percentage of discount for franchise or deductible. (NRATE)..
</summary>
<remarks>Data-source is 'TCOVER.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'TCOVER.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.AnnualPremium">
<summary>
Annual premium amount of the coverage (NPREMIUM)..
</summary>
<remarks>Data-source is 'TCOVER.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RatePerThousand">
<summary>
Rate per thousand (o/oo) of calculation of the premium of the coverage. (NRATECOVE)..
</summary>
<remarks>Data-source is 'TCOVER.NRATECOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Capitali">
<summary>
Lowest limit of the range of insured amount. (NCAPITALI)..
</summary>
<remarks>Data-source is 'TCOVER.NCAPITALI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumPercentageOfIncreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of increase of the sum insured. (NRATECAPADD)..
</summary>
<remarks>Data-source is 'TCOVER.NRATECAPADD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumPercentageOfDecreaseOfInsuredAmount">
<summary>
Allowed maximum percentage of decrease of the sum insured. (NRATECAPSUB)..
</summary>
<remarks>Data-source is 'TCOVER.NRATECAPSUB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.PercentageOfIncreasePermittedForPremium">
<summary>
Allowed maximum percentage of increase/decrease (NRATEPREADD)..
</summary>
<remarks>Data-source is 'TCOVER.NRATEPREADD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumPercentageOfDecreaseOfPremium">
<summary>
Allowed maximum percentage of increase/decrease (NRATEPRESUB)..
</summary>
<remarks>Data-source is 'TCOVER.NRATEPRESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Discamoun">
<summary>
Amount related to the premium (NDISC_AMOUN)..
</summary>
<remarks>Data-source is 'TCOVER.NDISC_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FixedRate">
<summary>
Rate per thousand (o/oo) of calculation of the premium of the coverage. (NPREMIRAT)..
</summary>
<remarks>Data-source is 'TCOVER.NPREMIRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MinimumPremium">
<summary>
Minimum premium amount. (NPREMIMIN)..
</summary>
<remarks>Data-source is 'TCOVER.NPREMIMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumPremium">
<summary>
Maximum premium amount. (NPREMIMAX)..
</summary>
<remarks>Data-source is 'TCOVER.NPREMIMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.PolicyID">
<summary>
Number identifying the policy. (NPOLICY)..
</summary>
<remarks>Data-source is 'TCOVER.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CertificateID">
<summary>
Number of the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'TCOVER.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.LineOfBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'TCOVER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TCOVER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Group">
<summary>
Code of the &#34;division&#34; within the group (NGROUP)..
</summary>
<remarks>Data-source is 'TCOVER.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TCOVER.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TCOVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TCOVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Waitquan">
<summary>
Number of days/hours/months of the waiting period. (NWAIT_QUAN)..
</summary>
<remarks>Data-source is 'TCOVER.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Groupinsu">
<summary>
Code of insured group (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'TCOVER.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.BaseCoverageThatContainThePremiumOfThis">
<summary>
Code of the coverage that contains the premium of this coverage. (NCOVER_IN)..
</summary>
<remarks>Data-source is 'TCOVER.NCOVER_IN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CoverageToApplyRateOn">
<summary>
Code of the coverage on which the rate is applied. (NCOVERAPL)..
</summary>
<remarks>Data-source is 'TCOVER.NCOVERAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Key">
<summary>
Key of the &#34;Tcover&#34; temporary file (SKEY)..
</summary>
<remarks>Data-source is 'TCOVER.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FixedPremium">
<summary>
Fixed premium amount. (NPREMIFIX)..
</summary>
<remarks>Data-source is 'TCOVER.NPREMIFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FreeInsuredAmount">
<summary>
The sum insured will be entered by the user at the moment of issuing the policy. (SCACALFRI)..
</summary>
<remarks>Data-source is 'TCOVER.SCACALFRI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SecurityLevelForUpdatingInsuredAmount">
<summary>
Security level needed for the user to update the sum insured (NCHCAPLEV)..
</summary>
<remarks>Data-source is 'TCOVER.NCHCAPLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SecurityLevelForUpdatingPremium">
<summary>
Security level needed for the user to update the premium. (NCHPRELEV)..
</summary>
<remarks>Data-source is 'TCOVER.NCHPRELEV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SecurityLevelForUpdatingFranchiseOrDeductible">
<summary>
Level of the user (update or query) for franchise/deductible. (NFDUSERLEV)..
</summary>
<remarks>Data-source is 'TCOVER.NFDUSERLEV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.PossibleChangesToFranchiseOrDeductible">
<summary>
Type of changes allowed on the franchise/deductible (SFDCHANTYP)..
</summary>
<remarks>Data-source is 'TCOVER.SFDCHANTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumPercentageOfIncreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of increase of the franchise/deductible. (NFDRATEADD)..
</summary>
<remarks>Data-source is 'TCOVER.NFDRATEADD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumPercentageOfDecreaseForFranchiseOrDeductible">
<summary>
Allowed maximum percentage of decrease of the franchise/deductible. (NFDRATESUB)..
</summary>
<remarks>Data-source is 'TCOVER.NFDRATESUB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.BaseCoverageForInsuredAmount">
<summary>
Code of coverage on which the percentage is applied to obtain the limit of the coverage. (NCACALCOV)..
</summary>
<remarks>Data-source is 'TCOVER.NCACALCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.PercentageOverOtherCoverage">
<summary>
Percentage to be applied to the sum insured of another coverage to obtain this sum insured. (NCACALPER)..
</summary>
<remarks>Data-source is 'TCOVER.NCACALPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.PFrandedi">
<summary>
Type of franchise or deductible related to the coverage of the product (SPFRANDEDI)..
</summary>
<remarks>Data-source is 'TCOVER.SPFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumInsuredAmount">
<summary>
Maximum sum insured (NCACALMAX)..
</summary>
<remarks>Data-source is 'TCOVER.NCACALMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MinimumInsuredAmount">
<summary>
Minimum sum insured (NCACALMIN)..
</summary>
<remarks>Data-source is 'TCOVER.NCACALMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.AddsToObtainInsuredAmount">
<summary>
Indicator of the addition to obtain the sum insured (SADDSUINI)..
</summary>
<remarks>Data-source is 'TCOVER.SADDSUINI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TarifCurr">
<summary>
Code of the currency in which the rate of the coverage is expressed (NTARIFCURR)..
</summary>
<remarks>Data-source is 'TCOVER.NTARIFCURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RoutineForCalculationOfInsuredAmountAtRenewal">
<summary>
Calculation Routine for Sum Insured (Renewal Process). (SROUCHACA)..
</summary>
<remarks>Data-source is 'TCOVER.SROUCHACA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FixedInsuredAmount">
<summary>
Fixed amount of the sum insured. (NCACALFIX)..
</summary>
<remarks>Data-source is 'TCOVER.NCACALFIX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'TCOVER.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfInsuranceDuration">
<summary>
Type of duration for the insurance. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'TCOVER.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfInsuranceDurationEnum">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsuranceDuration'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfInsuranceDurationEnumText">
<summary>
Type of duration for the insurance.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CoverageDuration">
<summary>
Duration of the insurance. (NDURINSUR)..
</summary>
<remarks>Data-source is 'TCOVER.NDURINSUR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MinimumEntryAge">
<summary>
Minimum entry age for this role (NAGEMININS)..
</summary>
<remarks>Data-source is 'TCOVER.NAGEMININS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumEntryAge">
<summary>
Maximum entry age for this role (NAGEMAXINS)..
</summary>
<remarks>Data-source is 'TCOVER.NAGEMAXINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumAgeInsurance">
<summary>
Maximum age of insurance. (NAGEMAXPER)..
</summary>
<remarks>Data-source is 'TCOVER.NAGEMAXPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfDurationOfPayments">
<summary>
Type of duration for the payments. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'TCOVER.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfDurationOfPaymentsEnum">
<summary>
Type of duration for the payments.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfDurationOfPayments'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfDurationOfPaymentsEnumText">
<summary>
Type of duration for the payments.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.DurationOfPayments">
<summary>
Duration of the payments. (NDURPAY)..
</summary>
<remarks>Data-source is 'TCOVER.NDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CauseUpd">
<summary>
Reason why the insured person was excluded from the coverage (NCAUSEUPD)..
</summary>
<remarks>Data-source is 'TCOVER.NCAUSEUPD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RequestedInsuredAmount">
<summary>
Sum Insured amount requested related to the insured person (NCAPITAL_WAIT)..
</summary>
<remarks>Data-source is 'TCOVER.NCAPITAL_WAIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.AgeLimit">
<summary>
Maximum age to which the insured person is protected (NAGELIMIT)..
</summary>
<remarks>Data-source is 'TCOVER.NAGELIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Ageper">
<summary>
Maximum age of insurance. (NAGE_PER)..
</summary>
<remarks>Data-source is 'TCOVER.NAGE_PER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CoverageAniversaryDate">
<summary>
Date of anniversary of the coverage. (DANIVERSARY)..
</summary>
<remarks>Data-source is 'TCOVER.DANIVERSARY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Seektar">
<summary>
Search date of the rate (DSEEKTAR)..
</summary>
<remarks>Data-source is 'TCOVER.DSEEKTAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Fer">
<summary>
Date of The Retroactive Endorsement. (DFER)..
</summary>
<remarks>Data-source is 'TCOVER.DFER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.ReinsuranceLineOfBusiness">
<summary>
Code of the reinsurance line of business (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'TCOVER.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.ClientRole">
<summary>
Role of the coverage (NROLE)..
</summary>
<remarks>Data-source is 'TCOVER.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.ClientRoleEnum">
<summary>
Role of the coverage
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.ClientRoleEnumText">
<summary>
Role of the coverage
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmount">
<summary>
Role of the coverage on which the insured amount calculation percentage is applied (NROLCAP)..
</summary>
<remarks>Data-source is 'TCOVER.NROLCAP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmountEnum">
<summary>
Role of the coverage on which the insured amount calculation percentage is applied
</summary>
<remarks>This property use a enumeration based on property 'RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmount'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RoleOfCoverageOverWhichAppliesThePercentOfInsuredAmountEnumText">
<summary>
Role of the coverage on which the insured amount calculation percentage is applied
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RoleOfBaseCoverageThatContainThePremiumOfThis">
<summary>
Role of the coverage on which the premium amount is included (NROLPREM)..
</summary>
<remarks>Data-source is 'TCOVER.NROLPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.TypeOfPremiumRecalculation">
<summary>
Type of recalculation of premium of a coverage. (NRETARIF)..
</summary>
<remarks>Data-source is 'TCOVER.NRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MinimumEntryAgeFemales">
<summary>
Minimum entry age for this role (Female) (NAGEMININSF)..
</summary>
<remarks>Data-source is 'TCOVER.NAGEMININSF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumEntryAgeFemales">
<summary>
Maximum entry age for this role (female) (NAGEMAXINSF)..
</summary>
<remarks>Data-source is 'TCOVER.NAGEMAXINSF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumAgeInsuranceFemale">
<summary>
Maximum age of insurance (female) (NAGEMAXPERF)..
</summary>
<remarks>Data-source is 'TCOVER.NAGEMAXPERF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Defaultic">
<summary>
Ii indicates that the coverage is selected by default in the certificates of the master policy (SDEFAULTIC)..
</summary>
<remarks>Data-source is 'TCOVER.SDEFAULTIC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Requirec">
<summary>
It indicates that the coverage is required in the certificates of the master policy (SREQUIREC)..
</summary>
<remarks>Data-source is 'TCOVER.SREQUIREC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.DependenceFromMainInsured">
<summary>
Dependence indicator of the main insured. (SDEPEND)..
</summary>
<remarks>Data-source is 'TCOVER.SDEPEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.ActionCov">
<summary>
Code of the action to be executed for the coverages involved in a claim. (NACTIONCOV)..
</summary>
<remarks>Data-source is 'TCOVER.NACTIONCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.PercentToApply">
<summary>
Percentage to be applied to the premium/rate calculated by the system (NAPPLY_PERC)..
</summary>
<remarks>Data-source is 'TCOVER.NAPPLY_PERC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.LimitCalculatedOnBasicInsuredAmounts">
<summary>
It indicates that the sum insured will be determined based on the basic sums insured (SBAS_SUMINS)..
</summary>
<remarks>Data-source is 'TCOVER.SBAS_SUMINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.OriginalInsuredAmount">
<summary>
Initial sum insured of the coverage (when the policy was issued) (NCAPITAL_O)..
</summary>
<remarks>Data-source is 'TCOVER.NCAPITAL_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.OriginalAnnualPremium">
<summary>
Annual premium amount of the coverage (NPREMIUM_O)..
</summary>
<remarks>Data-source is 'TCOVER.NPREMIUM_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.OriginalRatePerThousand">
<summary>
Calculation rate of the premium when issuing the policy (NRATECOVE_O)..
</summary>
<remarks>Data-source is 'TCOVER.NRATECOVE_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RoutineForCalculationOfInsuredAmount">
<summary>
Calculation routine for sum insured or limit. (SROUCAPIT)..
</summary>
<remarks>Data-source is 'TCOVER.SROUCAPIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.BaseCoverageForMaximumInsuredAmountAllowed">
<summary>
Coverage code to apply the percentage to obtain the maximum insured amount permitted. (NCAMAXCOV)..
</summary>
<remarks>Data-source is 'TCOVER.NCAMAXCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.PercentageToApply">
<summary>
Percentage of limit on another coverage to control the maximum permitted. (NCAMAXPER)..
</summary>
<remarks>Data-source is 'TCOVER.NCAMAXPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.BaseRoleForCalculation">
<summary>
Role of the coverage to which the percentage must be applied to obtain the maximum allowed (NCAMAXROL)..
</summary>
<remarks>Data-source is 'TCOVER.NCAMAXROL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MultipleBaseForInsuredAmount">
<summary>
Base to calculate insured amount as a multiple of it. (NCACALMUL)..
</summary>
<remarks>Data-source is 'TCOVER.NCACALMUL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.GenCurrency">
<summary>
Currency of the coverage (NGENCURRENCY)..
</summary>
<remarks>Data-source is 'TCOVER.NGENCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SCONDSVS">
<summary>
.
</summary>
<remarks>Data-source is 'TCOVER.SCONDSVS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.NTYP_AGEMINM">
<summary>
.
</summary>
<remarks>Data-source is 'TCOVER.NTYP_AGEMINM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.NTYP_AGEMINMEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'NTYP_AGEMINM'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.NTYP_AGEMINMEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.NTYP_AGEMINF">
<summary>
.
</summary>
<remarks>Data-source is 'TCOVER.NTYP_AGEMINF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.NTYP_AGEMINFEnum">
<summary>

</summary>
<remarks>This property use a enumeration based on property 'NTYP_AGEMINF'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.NTYP_AGEMINFEnumText">
<summary>

</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.NCAPITAL_REQ">
<summary>
.
</summary>
<remarks>Data-source is 'TCOVER.NCAPITAL_REQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SINHERIT">
<summary>
.
</summary>
<remarks>Data-source is 'TCOVER.SINHERIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FranchiseOrDeductiblePercentageClaim">
<summary>
Franchise or deductible percentage to be applied to the claim. (NRATECLA)..
</summary>
<remarks>Data-source is 'TCOVER.NRATECLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.FixedAmountOfFranchiseOrDeductibleClaim">
<summary>
fixed amount franchise or deductible amount to be applied to the claim. (NFIXAMOCLA)..
</summary>
<remarks>Data-source is 'TCOVER.NFIXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MinimumAmountOfFranchiseOrDeductibleClaim">
<summary>
Minimum franchise or deductible amount Claim. (NMINAMOCLA)..
</summary>
<remarks>Data-source is 'TCOVER.NMINAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.MaximumAmountOfFranchiseOrDeductibleClaim">
<summary>
Maximum franchise or deductible amount to be applied to the claim. (NMAXAMOCLA)..
</summary>
<remarks>Data-source is 'TCOVER.NMAXAMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.DiscountPercentageClaim">
<summary>
Percentage of discount because of franchise or deductible. (NDISCCLA)..
</summary>
<remarks>Data-source is 'TCOVER.NDISCCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.DiscountAmountClaim">
<summary>
Amount of discount because of the franchise or deductible. (NDISC_AMOCLA)..
</summary>
<remarks>Data-source is 'TCOVER.NDISC_AMOCLA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.DaysFranchiseDeductible">
<summary>
Days of franchise or deductible to be applied. (NFRANCDAYS)..
</summary>
<remarks>Data-source is 'TCOVER.NFRANCDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CodeFrecuencyCapital">
<summary>
Code of frequency of capital (NPAYFREQ)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TCOVER.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CodeFrecuencyCapitalEnum">
<summary>
Code of frequency of capital
</summary>
<remarks>This property use a enumeration based on property 'CodeFrecuencyCapital'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CodeFrecuencyCapitalEnumText">
<summary>
Code of frequency of capital
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.QuantityOfFrequenciesOfCapital">
<summary>
Quantity of frequencies of capital (NCAPFREQQUAN)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TCOVER.NCAPFREQQUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.AmountCapitalPerFrequency">
<summary>
Amount of capital per frequency (NCAPFREQAMOUNT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TCOVER.NCAPFREQAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RevalType">
<summary>
Index type (NREVALTYPE)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TCOVER.NREVALTYPE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Compare(InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoverageWithCalculatedPremiumItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.CodeFrecuencyCapitalDescription">
 <summary>
 Code of frequency of capital
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Excluded">
 <summary>
 It indicates that the coverage should be excluded. Used for subscription.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.Changed">
 <summary>
 It indicates that the coverage was changed. Used for subscription.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.UnitsOfWaitingPeriod">
<summary>
Units for Waiting Period (days, months). Used for subscription.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremium.WaitingPeriodNumber">
 <summary>
 Number of days/hours/months of the waiting period. Used for subscription.
 </summary>
 <returns></returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection">
 <summary>
 Collection for CoverageWithCalculatedPremium class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection.AddCoverageWithCalculatedPremium">
 <summary>
 Add an instance of class 'CoverageWithCalculatedPremium' in the CoverageWithCalculatedPremiumCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection.CompleteCompare(InMotionGIT.Policy.Entity.Contracts.CoverageWithCalculatedPremiumCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness">
 <summary>
 Particular information about credit and fidelity.
 </summary>
<remarks>Data-source is 'CREDIT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.CreateNewCreditLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._ContractDate">
<summary>
Date of the contract.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._BondOrContractNumber">
<summary>
Number of the bond or house purchase contract.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._BondType">
<summary>
Code of bond type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._CancellationCode">
<summary>
Code of cancellation of the specific information record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._Premium">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._EffectiveDate">
<summary>
Effective date of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._DateOfDelivery">
<summary>
Date when the construction is completed or when the dwelling is delivered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._RunningTime">
<summary>
Execution time.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._TimeUnits">
<summary>
Unit in which the execution time is expressed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._Transaction">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._Form">
<summary>
Form of insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._CreditAmount">
<summary>
Credit amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._IndemnityPercentage">
<summary>
Percentage of losses to be covered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._DelayedPaymentMonthsAllowed">
<summary>
Number of months permitted for delayed payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._MonthsElapsedPart1">
<summary>
Number of months elapsed for the payment of 1st part of claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._MonthsElapsedPart2">
<summary>
Number of months elapsed for the payment of second part of claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._IndemnityPercentageFirstPeriod">
<summary>
Percentage of indemnity, once the first period has passed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._IndemnityPercentageSecondPeriod">
<summary>
Percentage of indemnity, once the second period has passed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NGUAR_KIND">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NPAY_QUANTI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NPAY_AMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NDWUELL_NUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NEXE_NUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NMINPREM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NMINPREMIUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NPERCENTPREMIUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NLIMITREQUEST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NLIMITCURRENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NMATERIA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NAJUSTTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NCLASSCLIENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NMAXCAPITAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NRATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NAGE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NLIMITNOPAYROLL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._SFOLLOWUP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._SCONTRACTOBJECT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._NBONDSTATUS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._SINSURSECTOR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CREDIT.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CREDIT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CREDIT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CREDIT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'CREDIT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CREDIT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'CREDIT.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'CREDIT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CREDIT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.ContractDate">
<summary>
Date of the contract. (DCONTRACDAT)..
</summary>
<remarks>Data-source is 'CREDIT.DCONTRACDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.BondOrContractNumber">
<summary>
Number of the bond or house purchase contract. (SCONTRACNUM)..
</summary>
<remarks>Data-source is 'CREDIT.SCONTRACNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'CREDIT.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.BondType">
<summary>
Code of bond type. (NGUAR_TYPE)..
</summary>
<remarks>Data-source is 'CREDIT.NGUAR_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued. (DISSUEDAT)..
</summary>
<remarks>Data-source is 'CREDIT.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.CancellationCode">
<summary>
Code of cancellation of the specific information record. (NNULLCODE)..
</summary>
<remarks>Data-source is 'CREDIT.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CREDIT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.Premium">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'CREDIT.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.EffectiveDate">
<summary>
Effective date of the policy/certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'CREDIT.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.DateOfDelivery">
<summary>
Date when the construction is completed or when the dwelling is delivered. (DTERM_DATE)..
</summary>
<remarks>Data-source is 'CREDIT.DTERM_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.RunningTime">
<summary>
Execution time. (NTIME_EJECT)..
</summary>
<remarks>Data-source is 'CREDIT.NTIME_EJECT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.TimeUnits">
<summary>
Unit in which the execution time is expressed. (NTIME_UNIT)..
</summary>
<remarks>Data-source is 'CREDIT.NTIME_UNIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.Transaction">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'CREDIT.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CREDIT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.Form">
<summary>
Form of insurance. (NINSMODALITY)..
</summary>
<remarks>Data-source is 'CREDIT.NINSMODALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.CreditAmount">
<summary>
Credit amount. (NCREDCAU)..
</summary>
<remarks>Data-source is 'CREDIT.NCREDCAU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.IndemnityPercentage">
<summary>
Percentage of losses to be covered. (NINDEMPER)..
</summary>
<remarks>Data-source is 'CREDIT.NINDEMPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.DelayedPaymentMonthsAllowed">
<summary>
Number of months permitted for delayed payment. (NMORAALLOW)..
</summary>
<remarks>Data-source is 'CREDIT.NMORAALLOW'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.MonthsElapsedPart1">
<summary>
Number of months elapsed for the payment of 1st part of claim. (NTRANSMON1)..
</summary>
<remarks>Data-source is 'CREDIT.NTRANSMON1'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.MonthsElapsedPart2">
<summary>
Number of months elapsed for the payment of second part of claim. (NTRANSMON2)..
</summary>
<remarks>Data-source is 'CREDIT.NTRANSMON2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.IndemnityPercentageFirstPeriod">
<summary>
Percentage of indemnity, once the first period has passed. (NINDPER1)..
</summary>
<remarks>Data-source is 'CREDIT.NINDPER1'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.IndemnityPercentageSecondPeriod">
<summary>
Percentage of indemnity, once the second period has passed. (NINDPER2)..
</summary>
<remarks>Data-source is 'CREDIT.NINDPER2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NGUAR_KIND">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NGUAR_KIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NPAY_QUANTI">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NPAY_QUANTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NPAY_AMOUNT">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NPAY_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NDWUELL_NUM">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NDWUELL_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NEXE_NUM">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NEXE_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NMINPREM">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NMINPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NMINPREMIUM">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NMINPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NPERCENTPREMIUM">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NPERCENTPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NLIMITREQUEST">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NLIMITREQUEST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NLIMITCURRENT">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NLIMITCURRENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NMATERIA">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NMATERIA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NAJUSTTYPE">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NAJUSTTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NCLASSCLIENT">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NCLASSCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NMAXCAPITAL">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NMAXCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NRATE">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NAGE">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NLIMITNOPAYROLL">
<summary>
.
</summary>
<remarks>Data-source is 'CREDIT.NLIMITNOPAYROLL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'CREDIT.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'CREDIT.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'CREDIT.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SFOLLOWUP">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CREDIT.SFOLLOWUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SCONTRACTOBJECT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CREDIT.SCONTRACTOBJECT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.NBONDSTATUS">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CREDIT.NBONDSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SINSURSECTOR">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CREDIT.SINSURSECTOR'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CreditLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.BondTypeDescription">
 <summary>
 Code of bond type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE186'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.TimeUnitsDescription">
 <summary>
 Unit in which the execution time is expressed.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE93'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.FormDescription">
 <summary>
 Form of insurance.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6900'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusinessCollection">
 <summary>
 Collection for CreditLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusinessCollection.AddCreditLineOfBusiness">
 <summary>
 Add an instance of class 'CreditLineOfBusiness' in the CreditLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CreditLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy">
 <summary>
 Currencies associated with the policy/certificated.
 </summary>
<remarks>Data-source is 'CURREN_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.CreateNewCurrencyPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CURREN_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CURREN_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CURREN_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CURREN_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'CURREN_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'CURREN_POL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'CURREN_POL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CURREN_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CURREN_POL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CURREN_POL.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CurrencyPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicyCollection">
 <summary>
 Collection for CurrencyPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicyCollection.AddCurrencyPolicy">
 <summary>
 Add an instance of class 'CurrencyPolicy' in the CurrencyPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CurrencyPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CurrencyPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DataNormalization">
 <summary>
 Data normalization
 </summary>
<remarks>Data-source is 'DATANORMALIZATION'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.CreateNewDataNormalization">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._TypeOfNormalization">
<summary>
Type of normalization
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._NormalizeRecordType">
<summary>
Normalize Record Type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._TypeOfInformationToStandardize">
<summary>
Type of information to standardize
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._ConsecutiveNumber">
<summary>
Consecutive number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._NumberOfSuscriptionCase">
<summary>
Number of suscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._RequestIDNumber">
<summary>
Request ID number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._EntryDate">
<summary>
Entry date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._ClientID">
<summary>
Code of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._FirstName">
<summary>
First name and middle name of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._LastName">
<summary>
Last name of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._CompleteClientName">
<summary>
Complete name of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._DocumentClass">
<summary>
Class of document or format
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._TypeOfClientID">
<summary>
Type code of Client IDs. Possible values as per table FormatValues (nClassTypDoc &#61; 2).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._DocumentNumber">
<summary>
Number/Code of the Client IDs
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._TaxID">
<summary>
TaxID
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._BirthDate">
<summary>
Date of birth of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._ClientGender">
<summary>
Client Gender
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._RecordOwner">
<summary>
Owner of the record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._KeyToAddressRecord">
<summary>
Access Key of The Address Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._StreetOrUrl">
<summary>
Address / Street
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._Street">
<summary>
Address / Street
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._BuildingNumber">
<summary>
Building number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._Number">
<summary>
Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._Floor">
<summary>
Floor number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._CountryCode">
<summary>
Code of the country. Possible values as per table
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._MunicipalityCode">
<summary>
Code of the municipality
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._CityCode">
<summary>
City code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._StateOrProvince">
<summary>
Code of the state or province
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._ZipCode">
<summary>
Zip code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._ZipCodeArg">
<summary>
Zip Code (Use in entina)Arg
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._DwellingType">
<summary>
Code of type of dwelling for homeowner policies
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._AreaCode">
<summary>
Area Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._TelephoneNumber">
<summary>
Telephone number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._AreaCode2">
<summary>
Area Code 2
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._TelephoneNumber2">
<summary>
Telephone number 2
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._CodeOfNormalizationStatus">
<summary>
Code of normalization status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._StatusDate">
<summary>
Status date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._NormalizerLotNumber">
<summary>
Normalizer lot number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._NormalizerEntryNumber">
<summary>
Normalizer entry number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._IndicatorOfAppliedNormalization">
<summary>
Indicator of applied normalization
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._RoleOfTheClient">
<summary>
Role of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._CodeOfTheUniqueBanckCode">
<summary>
Code of the unique banck code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._NumberOfTheBankAccount">
<summary>
Number of the bank account
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._BankCode">
<summary>
Bank Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._BankAccountType">
<summary>
Type of bank account
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DataNormalization._DebitCardNumber">
<summary>
Debit Card Number
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.TypeOfNormalization">
<summary>
Type of normalization (NNORMTYPE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NNORMTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.NormalizeRecordType">
<summary>
Normalize Record Type (NNORMINFTYPE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NNORMINFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.TypeOfInformationToStandardize">
<summary>
Type of information to standardize (NINFTYPE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NINFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.ConsecutiveNumber">
<summary>
Consecutive number (NIDCONSEC)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NIDCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.NumberOfSuscriptionCase">
<summary>
Number of suscription case (NUNDERWRITINGCASEID)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NUNDERWRITINGCASEID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RequestIDNumber">
<summary>
Request ID number (NREQUESTID)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NREQUESTID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.EntryDate">
<summary>
Entry date (DINPUTDATE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.DINPUTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.ClientID">
<summary>
Code of the client (SCLIENT)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.FirstName">
<summary>
First name and middle name of the client (SFIRSTNAME)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SFIRSTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.LastName">
<summary>
Last name of the client (SLASTNAME)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SLASTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.CompleteClientName">
<summary>
Complete name of the client (SCLIENAME)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SCLIENAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.DocumentClass">
<summary>
Class of document or format (NCLASSTYPDOC)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NCLASSTYPDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.TypeOfClientID">
<summary>
Type code of Client IDs. Possible values as per table FormatValues (nClassTypDoc &#61; 2). (NTYPCLIENTDOC)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NTYPCLIENTDOC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.DocumentNumber">
<summary>
Number/Code of the Client IDs (SCLINUMDOCU)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SCLINUMDOCU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.TaxID">
<summary>
TaxID (SCLICUITNUMDOCU)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SCLICUITNUMDOCU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.BirthDate">
<summary>
Date of birth of the client (DBIRTHDAT)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.DBIRTHDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.ClientGender">
<summary>
Client Gender (SSEXCLIENT)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SSEXCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RecordOwner">
<summary>
Owner of the record (NRECOWNER)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NRECOWNER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.KeyToAddressRecord">
<summary>
Access Key of The Address Record (SKEYADDRESS)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SKEYADDRESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.StreetOrUrl">
<summary>
Address / Street (SSTREET)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SSTREET'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.Street">
<summary>
Address / Street (SSTREET1)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SSTREET1'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.BuildingNumber">
<summary>
Building number (SBUILD)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SBUILD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.Number">
<summary>
Number (SDEPARTMENT)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SDEPARTMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.Floor">
<summary>
Floor number (NFLOOR)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NFLOOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.CountryCode">
<summary>
Code of the country. Possible values as per table (NCOUNTRY)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NCOUNTRY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.MunicipalityCode">
<summary>
Code of the municipality (NMUNICIPALITY)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NMUNICIPALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.CityCode">
<summary>
City code (NLOCAL)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NLOCAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.StateOrProvince">
<summary>
Code of the state or province (NPROVINCE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.ZipCode">
<summary>
Zip code (NZIPCODE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NZIPCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.ZipCodeArg">
<summary>
Zip Code (Use in entina)Arg (SZIPCODE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SZIPCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.DwellingType">
<summary>
Code of type of dwelling for homeowner policies (NDWELLINGTYPE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NDWELLINGTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.AreaCode">
<summary>
Area Code (NAREA_CODE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NAREA_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.TelephoneNumber">
<summary>
Telephone number (SPHONE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SPHONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.AreaCode2">
<summary>
Area Code 2 (NAREA_CODE2)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NAREA_CODE2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.TelephoneNumber2">
<summary>
Telephone number 2 (SPHONE2)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SPHONE2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.CodeOfNormalizationStatus">
<summary>
Code of normalization status (NNORMSTATUS)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NNORMSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.StatusDate">
<summary>
Status date (DSTATDATE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.DSTATDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.NormalizerLotNumber">
<summary>
Normalizer lot number (SNORMIDLOTE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SNORMIDLOTE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.NormalizerEntryNumber">
<summary>
Normalizer entry number (SNORMIDENTRY)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SNORMIDENTRY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.IndicatorOfAppliedNormalization">
<summary>
Indicator of applied normalization (SAPPLNORMIND)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SAPPLNORMIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RoleOfTheClient">
<summary>
Role of the client (NROLE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RoleOfTheClientEnum">
<summary>
Role of the client
</summary>
<remarks>This property use a enumeration based on property 'RoleOfTheClient'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RoleOfTheClientEnumText">
<summary>
Role of the client
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.CodeOfTheUniqueBanckCode">
<summary>
Code of the unique banck code (SCBU)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SCBU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.AgreementCode">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.NumberOfTheBankAccount">
<summary>
Number of the bank account (SACCOUNT)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.BankCode">
<summary>
Bank Code (NBANKEXT)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.BankAccountType">
<summary>
Type of bank account (NTYP_ACC)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.NTYP_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.DebitCardNumber">
<summary>
Debit Card Number (SDEBIT_CARD)..
</summary>
<remarks>Data-source is 'DATANORMALIZATION.SDEBIT_CARD'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.Compare(InMotionGIT.Policy.Entity.Contracts.DataNormalization,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DataNormalizationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.TypeOfNormalizationDescription">
 <summary>
 Type of normalization
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6787' on the table 'TABLE6787'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.NormalizeRecordTypeDescription">
 <summary>
 Normalize Record Type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6788' on the table 'TABLE6788'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.TypeOfInformationToStandardizeDescription">
 <summary>
 Type of information to standardize
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6802' on the table 'TABLE6802'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.CodeOfNormalizationStatusDescription">
 <summary>
 Code of normalization status
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6789' on the table 'TABLE6789'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.RoleOfTheClientDescription">
 <summary>
 Role of the client
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalization.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DataNormalizationCollection">
 <summary>
 Collection for DataNormalization class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalizationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalizationCollection.AddDataNormalization">
 <summary>
 Add an instance of class 'DataNormalization' in the DataNormalizationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalizationCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DataNormalizationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DataNormalizationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalizationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DataNormalizationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported">
 <summary>
 Detail of the merchandise transported in a stage of the itinerary.
 </summary>
<remarks>Data-source is 'TRAN_STAGEDET'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.CreateNewDetailMerchandiseTransported">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._Stage">
<summary>
Number identifying the stage of the transportation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._ClassOfMerchandise">
<summary>
Classification of the Merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._Packaging">
<summary>
Type of Packaging used for the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._Limit">
<summary>
Limit insured amount for the merchandise transported in this stage of the itinerary.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._FranchiseOrDeductible">
<summary>
Amount of franchise/deductible of the merchandise transported in the stage of the itinerary.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._NumberOfItems">
<summary>
Number of items that are transported of the specified unit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._Unit">
<summary>
Code of unit for capacity or weight of the items that are transported Example values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._ImageID">
<summary>
Number of the related image
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._Rating">
<summary>
Rate to be applied to the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._UnitValue">
<summary>
Unit value of the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._RecordEffectiveDateOfStage">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Stage">
<summary>
Number identifying the stage of the transportation. (NSTAGE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NSTAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.ClassOfMerchandise">
<summary>
Classification of the Merchandise. (NCLASSMERCH)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NCLASSMERCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Packaging">
<summary>
Type of Packaging used for the merchandise. (NPACKING)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NPACKING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Limit">
<summary>
Limit insured amount for the merchandise transported in this stage of the itinerary. (NAMOUNT)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.FranchiseOrDeductible">
<summary>
Amount of franchise/deductible of the merchandise transported in the stage of the itinerary. (NFRANDEDI)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.NumberOfItems">
<summary>
Number of items that are transported of the specified unit. (NQUANTRANS)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NQUANTRANS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Unit">
<summary>
Code of unit for capacity or weight of the items that are transported Example values (NUNIT)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NUNIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.ImageID">
<summary>
Number of the related image (NIMAGENUM)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NIMAGENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Rating">
<summary>
Rate to be applied to the merchandise. (NMERCHRATE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NMERCHRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.UnitValue">
<summary>
Unit value of the merchandise. (NUNITVALUE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.NUNITVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.RecordEffectiveDateOfStage">
<summary>
Date from which the record is valid. (DEFD_TRAN_STAGE)..
</summary>
<remarks>Data-source is 'TRAN_STAGEDET.DEFD_TRAN_STAGE'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported._Images">
<summary>
Images.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Images">
<summary>
Images.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.NewImagesInstance">
<summary>
Initializes the 'Images' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.NewImagesItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Images', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Images' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.Compare(InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DetailMerchandiseTransportedItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransported.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransportedCollection">
 <summary>
 Collection for DetailMerchandiseTransported class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransportedCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransportedCollection.AddDetailMerchandiseTransported">
 <summary>
 Add an instance of class 'DetailMerchandiseTransported' in the DetailMerchandiseTransportedCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransportedCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransportedCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransportedCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransportedCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailMerchandiseTransportedCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy">
 <summary>
 Specific risks of a group policy
 </summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.CreateNewDetailsOfSpecificRiskGroupPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._RiskTypeCode">
<summary>
Code of the risk type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._CodeOfSpecificRisk">
<summary>
Code of specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._CodeOfDefinitionType">
<summary>
Code of the definition type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._ModuleCode">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._CoverageCode">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._ClientRole">
<summary>
Client role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._ValueCode">
<summary>
Value code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._TextValue">
<summary>
Text value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._NumericValue">
<summary>
Numeric value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._DateValue">
<summary>
Date value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.RiskTypeCode">
<summary>
Code of the risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.CodeOfSpecificRisk">
<summary>
Code of specific risk (NITEMRISK)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NITEMRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.CodeOfDefinitionType">
<summary>
Code of the definition type (NDEFTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.ModuleCode">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.CoverageCode">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.ClientRole">
<summary>
Client role (NROLE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.ClientRoleEnum">
<summary>
Client role
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.ClientRoleEnumText">
<summary>
Client role
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.ValueCode">
<summary>
Value code (NVALUELIST)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NVALUELIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.TextValue">
<summary>
Text value (SVALUETEXT)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.SVALUETEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.NumericValue">
<summary>
Numeric value (NVALUENUM)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NVALUENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.DateValue">
<summary>
Date value (DVALUEDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P_DET.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DetailsOfSpecificRiskGroupPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicyCollection">
 <summary>
 Collection for DetailsOfSpecificRiskGroupPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicyCollection.AddDetailsOfSpecificRiskGroupPolicy">
 <summary>
 Add an instance of class 'DetailsOfSpecificRiskGroupPolicy' in the DetailsOfSpecificRiskGroupPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRiskGroupPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy">
 <summary>
 Details of specific risks by division of a group policy
 </summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.CreateNewDetailsOfSpecificRisksByDivisionOfGroupPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._RiskTypeCode">
<summary>
Code of the risk type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._CodeOfSpecificRisk">
<summary>
Code of specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._CodeOfDefinitionType">
<summary>
Code of the definition type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._GroupCode">
<summary>
Code of the division within the Group
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._ModuleCode">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._CoverageCode">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._ClientRole">
<summary>
Client role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._ValueCode">
<summary>
Value code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._TextValue">
<summary>
Text Value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._NumericValue">
<summary>
Numeric value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._DateValue">
<summary>
Date value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.RiskTypeCode">
<summary>
Code of the risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.CodeOfSpecificRisk">
<summary>
Code of specific risk (NITEMRISK)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NITEMRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.CodeOfDefinitionType">
<summary>
Code of the definition type (NDEFTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.GroupCode">
<summary>
Code of the division within the Group (NGROUP)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.ModuleCode">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.CoverageCode">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.ClientRole">
<summary>
Client role (NROLE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.ClientRoleEnum">
<summary>
Client role
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.ClientRoleEnumText">
<summary>
Client role
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.ValueCode">
<summary>
Value code (NVALUELIST)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NVALUELIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.TextValue">
<summary>
Text Value (SVALUETEXT)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.SVALUETEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.NumericValue">
<summary>
Numeric value (NVALUENUM)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NVALUENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.DateValue">
<summary>
Date value (DVALUEDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G_DET.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DetailsOfSpecificRisksByDivisionOfGroupPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection">
 <summary>
 Collection for DetailsOfSpecificRisksByDivisionOfGroupPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection.AddDetailsOfSpecificRisksByDivisionOfGroupPolicy">
 <summary>
 Add an instance of class 'DetailsOfSpecificRisksByDivisionOfGroupPolicy' in the DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailsOfSpecificRisksByDivisionOfGroupPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage">
 <summary>
 Detail specific risk coverage
 </summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CreateNewDetailSpecificRiskCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._CoverageModule">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._CoverageCode">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._CodeRiskType">
<summary>
Code of the risk type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._CodeSpecificRisk">
<summary>
Code specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._CodeDefinitionType">
<summary>
Code definition type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._ValueCode">
<summary>
Value Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._TextValue">
<summary>
Text value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._NumericValue">
<summary>
Numeric value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._DateValue">
<summary>
Date value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._FreqMaxEvents">
<summary>
Frequency for maximun of events
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CoverageModule">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CoverageCode">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CodeRiskType">
<summary>
Code of the risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CodeSpecificRisk">
<summary>
Code specific risk (NITEMRISK)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NITEMRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CodeDefinitionType">
<summary>
Code definition type (NDEFTYPE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.ValueCode">
<summary>
Value Code (NVALUELIST)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NVALUELIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.TextValue">
<summary>
Text value (SVALUETEXT)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.SVALUETEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.NumericValue">
<summary>
Numeric value (NVALUENUM)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NVALUENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.DateValue">
<summary>
Date value (DVALUEDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.FreqMaxEvents">
<summary>
Frequency for maximun of events (NFREQUEN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV_DET.NFREQUEN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.Compare(InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DetailSpecificRiskCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverage.CodeDefinitionTypeDescription">
 <summary>
 Code definition type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6786' on the table 'TABLE6786'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverageCollection">
 <summary>
 Collection for DetailSpecificRiskCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverageCollection.AddDetailSpecificRiskCoverage">
 <summary>
 Add an instance of class 'DetailSpecificRiskCoverage' in the DetailSpecificRiskCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverageCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DetailSpecificRiskCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel">
 <summary>
 Discounts / surcharges / taxes-defined in a group.
 </summary>
<remarks>Data-source is 'DISC_XPRE_G'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.CreateNewDiscountExtraPremiumTaxInGroupLevel">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._FixedAmount">
<summary>
Fixed amount for extra-premiums/discounts.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._NoteID">
<summary>
Number of the note related to the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._Percentage">
<summary>
Extra-premium/discount/tax percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._SPRORATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._SCLIENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax. (NDISC_CODE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NDISC_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.FixedAmount">
<summary>
Fixed amount for extra-premiums/discounts. (NAMOUNT)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.NoteID">
<summary>
Number of the note related to the extra-premium/discount/tax. (NNOTENUM)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.Percentage">
<summary>
Extra-premium/discount/tax percentage to be applied. (NPERCENT)..
</summary>
<remarks>Data-source is 'DISC_XPRE_G.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.SPRORATE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISC_XPRE_G.SPRORATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.SCLIENT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISC_XPRE_G.SCLIENT'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.Compare(InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DiscountExtraPremiumTaxInGroupLevelItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevel.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevelCollection">
 <summary>
 Collection for DiscountExtraPremiumTaxInGroupLevel class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevelCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevelCollection.AddDiscountExtraPremiumTaxInGroupLevel">
 <summary>
 Add an instance of class 'DiscountExtraPremiumTaxInGroupLevel' in the DiscountExtraPremiumTaxInGroupLevelCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevelCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevelCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevelCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevelCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInGroupLevelCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel">
 <summary>
 Discounts / surcharges / taxes-defined in a policy.
 </summary>
<remarks>Data-source is 'DISC_XPRE_P'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.CreateNewDiscountExtraPremiumTaxInPolicyLevel">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._FixedAmount">
<summary>
Fixed amount for extra-premiums/discounts.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._NoteID">
<summary>
Number of the note related to the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._Percentage">
<summary>
Extra-premium/discount/tax percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._SPRORATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._SCLIENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax. (NDISC_CODE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NDISC_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.FixedAmount">
<summary>
Fixed amount for extra-premiums/discounts. (NAMOUNT)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.NoteID">
<summary>
Number of the note related to the extra-premium/discount/tax. (NNOTENUM)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.Percentage">
<summary>
Extra-premium/discount/tax percentage to be applied. (NPERCENT)..
</summary>
<remarks>Data-source is 'DISC_XPRE_P.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.SPRORATE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISC_XPRE_P.SPRORATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.SCLIENT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISC_XPRE_P.SCLIENT'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.Compare(InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DiscountExtraPremiumTaxInPolicyLevelItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevel.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevelCollection">
 <summary>
 Collection for DiscountExtraPremiumTaxInPolicyLevel class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevelCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevelCollection.AddDiscountExtraPremiumTaxInPolicyLevel">
 <summary>
 Add an instance of class 'DiscountExtraPremiumTaxInPolicyLevel' in the DiscountExtraPremiumTaxInPolicyLevelCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevelCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevelCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevelCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevelCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxInPolicyLevelCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy">
 <summary>
 Extra-premiums/technical discounts/taxes of a policy/certificate.
 </summary>
<remarks>Data-source is 'DISC_XPREM'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.CreateNewDiscountExtraPremiumTaxOfPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._FixedAmount">
<summary>
Fixed amount for extra-premiums/discounts.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._NoteID">
<summary>
Number of the note related to the extra-premium/discount/tax.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._Reason">
<summary>
Reason why the surcharge/discount/clause was applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._AcceptedSurcharge">
<summary>
It indicates that the surcharge was accepted by the insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._Percentage">
<summary>
Extra-premium/discount/tax percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._ExpirationDateSurchargeDiscount">
<summary>
Expiration date of surcharge or discount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._AmountDistributedAccordingPaymentMode">
<summary>
The amount will be distributed according to the payment mode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._ClientHolderPayment">
<summary>
Client holder of the payment
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'DISC_XPREM.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax. (NDISC_CODE)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NDISC_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'DISC_XPREM.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.FixedAmount">
<summary>
Fixed amount for extra-premiums/discounts. (NAMOUNT)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'DISC_XPREM.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.NoteID">
<summary>
Number of the note related to the extra-premium/discount/tax. (NNOTENUM)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'DISC_XPREM.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.Reason">
<summary>
Reason why the surcharge/discount/clause was applied. (NCAUSE)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.AcceptedSurcharge">
<summary>
It indicates that the surcharge was accepted by the insured. (SAGREE)..
</summary>
<remarks>Data-source is 'DISC_XPREM.SAGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.Percentage">
<summary>
Extra-premium/discount/tax percentage to be applied. (NPERCENT)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.ExpirationDateSurchargeDiscount">
<summary>
Expiration date of surcharge or discount (DEXPIRDAT)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISC_XPREM.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.AmountDistributedAccordingPaymentMode">
<summary>
The amount will be distributed according to the payment mode (SPRORATE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISC_XPREM.SPRORATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.ClientHolderPayment">
<summary>
Client holder of the payment (SCLIENT)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'DISC_XPREM.SCLIENT'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DiscountExtraPremiumTaxOfPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicy.ReasonDescription">
 <summary>
 Reason why the surcharge/discount/clause was applied.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5631'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicyCollection">
 <summary>
 Collection for DiscountExtraPremiumTaxOfPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicyCollection.AddDiscountExtraPremiumTaxOfPolicy">
 <summary>
 Add an instance of class 'DiscountExtraPremiumTaxOfPolicy' in the DiscountExtraPremiumTaxOfPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountExtraPremiumTaxOfPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy">
 <summary>
 Documents requested in life policies.
 </summary>
<remarks>Data-source is 'LIFE_DOCU'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.CreateNewDocumentRequestedLifePolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._ClientID">
<summary>
Insured person related to the requested document.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._Document">
<summary>
Document related to the technical criteria required by the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._DateReceived">
<summary>
Date when the document was received.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._DocumentStatus">
<summary>
Status of the document.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._ExtendedDateForMedicalTest">
<summary>
Extended date for the medical test.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._LatestExemptionDate">
<summary>
Maximum date for the insured to be exempt of the medical test.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._EvaluationID">
<summary>
Evaluation ID number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._EnfingValidityDate">
<summary>
Ending validity date of the medical test.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._DocumentIndicator">
<summary>
It indicates if the requirement was done automatically from a table (
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.ClientID">
<summary>
Insured person related to the requested document. (SCLIENT)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.Document">
<summary>
Document related to the technical criteria required by the policy. (NCRTHECNI)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NCRTHECNI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.DateReceived">
<summary>
Date when the document was received. (DRECEP_DATE)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.DRECEP_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.DocumentStatus">
<summary>
Status of the document. (NSTAT_DOCREQ)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NSTAT_DOCREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.ExtendedDateForMedicalTest">
<summary>
Extended date for the medical test. (DDATE_TO)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.DDATE_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.LatestExemptionDate">
<summary>
Maximum date for the insured to be exempt of the medical test. (DDATEFREE)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.DDATEFREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.EvaluationID">
<summary>
Evaluation ID number. (NEVAL)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NEVAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.EnfingValidityDate">
<summary>
Ending validity date of the medical test. (DDATEVIG)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.DDATEVIG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.DocumentIndicator">
<summary>
It indicates if the requirement was done automatically from a table ( (SREQUEST)..
</summary>
<remarks>Data-source is 'LIFE_DOCU.SREQUEST'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.Compare(InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DocumentRequestedLifePolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicy.DocumentStatusDescription">
 <summary>
 Status of the document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE275'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicyCollection">
 <summary>
 Collection for DocumentRequestedLifePolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicyCollection.AddDocumentRequestedLifePolicy">
 <summary>
 Add an instance of class 'DocumentRequestedLifePolicy' in the DocumentRequestedLifePolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DocumentRequestedLifePolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV">
 <summary>
 Details of savings account (APV).
 </summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.CreateNewEntriesSavingAccountAPV">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._SourceAccount">
<summary>
Code of the source account (values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._EntryDate">
<summary>
Date of the entry
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._ConsecutiveNumber">
<summary>
Number of The Consecutive entry by Policy/Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._CreditAmount">
<summary>
Amount of the entry in case of credit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._DebitAmount">
<summary>
Amount of the debit entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._EntryBalance">
<summary>
Individual balance of this entry in the current account (debit or credit)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._EntryType">
<summary>
Type of entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._OriginalDate">
<summary>
Original date of the deposit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._FinancialInstitution">
<summary>
Financial institution from which the deposits are coming from.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._OriginalRecord">
<summary>
Identifier as original record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._NINTERMEI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._NTYP_PROFITWORKER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV._TypeOfProfitability">
<summary>
Type of profitability.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.SourceAccount">
<summary>
Code of the source account (values (NORIGIN)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.EntryDate">
<summary>
Date of the entry (DOPERDATE)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.DOPERDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.ConsecutiveNumber">
<summary>
Number of The Consecutive entry by Policy/Certificate (NCONSEC)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.CreditAmount">
<summary>
Amount of the entry in case of credit. (NCREDIT)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.DebitAmount">
<summary>
Amount of the debit entry. (NDEBIT)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NDEBIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.EntryBalance">
<summary>
Individual balance of this entry in the current account (debit or credit) (NDEP_BALANCE)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NDEP_BALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.EntryType">
<summary>
Type of entry. (NTYPE_MOVE)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NTYPE_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.OriginalDate">
<summary>
Original date of the deposit. (DDATE_ORIGIN)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.DDATE_ORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.FinancialInstitution">
<summary>
Financial institution from which the deposits are coming from. (NINSTITUTION)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NINSTITUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.OriginalRecord">
<summary>
Identifier as original record. (NREM_NUMBER)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NREM_NUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.NINTERMEI">
<summary>
.
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NINTERMEI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.NTYP_PROFITWORKER">
<summary>
.
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NTYP_PROFITWORKER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.TypeOfProfitability">
<summary>
Type of profitability. (NINDEX_TABLE)..
</summary>
<remarks>Data-source is 'UL_SAVING_MOVE_POL.NINDEX_TABLE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.Compare(InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="EntriesSavingAccountAPVItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPV.TypeOfProfitabilityDescription">
 <summary>
 Type of profitability.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5520'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPVCollection">
 <summary>
 Collection for EntriesSavingAccountAPV class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPVCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPVCollection.AddEntriesSavingAccountAPV">
 <summary>
 Add an instance of class 'EntriesSavingAccountAPV' in the EntriesSavingAccountAPVCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPVCollection.Compare(InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPVCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPVCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPVCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntriesSavingAccountAPVCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund">
 <summary>
 Entries of policies investment funds.
 </summary>
<remarks>Data-source is 'MOVE_FUND'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.CreateNewEntryPolicyInvestmentFund">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._InvestmentFund">
<summary>
Code of the investment fund.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._SourceAccount">
<summary>
Code of the source account (values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._EntryDate">
<summary>
Date of the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._EntryNumber">
<summary>
Entry number in the current account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._EntryNumberConsecutive">
<summary>
Number that identifies the daily movement of buying and selling for the same fund / account
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._TypeOfEntry">
<summary>
Type of current account entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._Units">
<summary>
Total of units invested.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._UnitBalance">
<summary>
Individual balance of the entry of unit purchase.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._FinancialInstitution">
<summary>
Financial institution from which the deposits are coming from.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._DepositOriginalDate">
<summary>
Original date of the deposit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._MovementIndicatorReversed">
<summary>
Movement Indicator reversed
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._ValueUnit">
<summary>
Value unit. It takes courage when it comes to movements 741 and 742 (wrong value fee)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._ProcessIdentificationNumber">
<summary>
Process identification number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._TypeOfTributaryBenefit">
<summary>
Type of Tributary Benefit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund._EntryNumberOfCurrentAccounGivingRiseToPurchaseSaleUnits">
<summary>
Number that identifies the movement of the current account (UL_MOVE_ACC_POL), giving rise to the purchase or sale of units
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'MOVE_FUND.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.InvestmentFund">
<summary>
Code of the investment fund. (NFUNDS)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NFUNDS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.SourceAccount">
<summary>
Code of the source account (values (NORIGIN)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.EntryDate">
<summary>
Date of the entry. (DOPERDATE)..
</summary>
<remarks>Data-source is 'MOVE_FUND.DOPERDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.EntryNumber">
<summary>
Entry number in the current account. (NREM_NUMBER)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NREM_NUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.EntryNumberConsecutive">
<summary>
Number that identifies the daily movement of buying and selling for the same fund / account (NID)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'MOVE_FUND.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.TypeOfEntry">
<summary>
Type of current account entry. (NTYPE_MOVE)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NTYPE_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.Units">
<summary>
Total of units invested. (NUNITS)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NUNITS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.UnitBalance">
<summary>
Individual balance of the entry of unit purchase. (NUNIT_BALANCE)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NUNIT_BALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.FinancialInstitution">
<summary>
Financial institution from which the deposits are coming from. (NINSTITUTION)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NINSTITUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.DepositOriginalDate">
<summary>
Original date of the deposit. (DDATE_ORIGIN)..
</summary>
<remarks>Data-source is 'MOVE_FUND.DDATE_ORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.MovementIndicatorReversed">
<summary>
Movement Indicator reversed (SREVERSE)..
</summary>
<remarks>Data-source is 'MOVE_FUND.SREVERSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.ValueUnit">
<summary>
Value unit. It takes courage when it comes to movements 741 and 742 (wrong value fee) (NVAL_UNIT)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NVAL_UNIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.ProcessIdentificationNumber">
<summary>
Process identification number (NIDPROCES)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NIDPROCES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.TypeOfTributaryBenefit">
<summary>
Type of Tributary Benefit. (NTYP_PROFITWORKER)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NTYP_PROFITWORKER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.EntryNumberOfCurrentAccounGivingRiseToPurchaseSaleUnits">
<summary>
Number that identifies the movement of the current account (UL_MOVE_ACC_POL), giving rise to the purchase or sale of units (NREM_NUM_REF)..
</summary>
<remarks>Data-source is 'MOVE_FUND.NREM_NUM_REF'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.Compare(InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="EntryPolicyInvestmentFundItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFund.TypeOfEntryDescription">
 <summary>
 Type of current account entry.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5708'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFundCollection">
 <summary>
 Collection for EntryPolicyInvestmentFund class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFundCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFundCollection.AddEntryPolicyInvestmentFund">
 <summary>
 Add an instance of class 'EntryPolicyInvestmentFund' in the EntryPolicyInvestmentFundCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFundCollection.Compare(InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFundCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFundCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFundCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.EntryPolicyInvestmentFundCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy">
 <summary>
 Excluded illness (Health Policy).
 </summary>
<remarks>Data-source is 'TAB_AM_EXC'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.CreateNewExcludedIllnessInHealthPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._RatingTable">
<summary>
Code of the rating table used for the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._Illness">
<summary>
Code of the illness.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._ConsecutiveNumber">
<summary>
Consecutive number identifying the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._ExclusionCause">
<summary>
Code of the reason why the illness is excluded.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._ExclusionDate">
<summary>
Date when the disease was excluded.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._EndingDate">
<summary>
Date up to which the illness will remain excluded.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._DiseaseEnteredByExclusionPreexistence">
<summary>
Indicates whether a disease is being entered by exclusion or pre-existence
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._CoverModule">
<summary>
Code of the module of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._Cover">
<summary>
Code of the cover.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.RatingTable">
<summary>
Code of the rating table used for the product. (NTARIFF)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.Illness">
<summary>
Code of the illness. (SILLNESS)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.SILLNESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.ConsecutiveNumber">
<summary>
Consecutive number identifying the record. (NID)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.ExclusionCause">
<summary>
Code of the reason why the illness is excluded. (NEXC_CODE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NEXC_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.ExclusionDate">
<summary>
Date when the disease was excluded. (DINIT_DATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.EndingDate">
<summary>
Date up to which the illness will remain excluded. (DEND_DATE)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.DiseaseEnteredByExclusionPreexistence">
<summary>
Indicates whether a disease is being entered by exclusion or pre-existence (STYPE_EXC)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.STYPE_EXC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.CoverModule">
<summary>
Code of the module of the coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.Cover">
<summary>
Code of the cover. (NCOVER)..
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NCOVER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ExcludedIllnessInHealthPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.ExclusionCauseDescription">
 <summary>
 Code of the reason why the illness is excluded.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE271'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicy.Description">
 <summary>
 Illness description
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection">
 <summary>
 Collection for ExcludedIllnessInHealthPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection.AddExcludedIllnessInHealthPolicy">
 <summary>
 Add an instance of class 'ExcludedIllnessInHealthPolicy' in the ExcludedIllnessInHealthPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection.CompleteCompare(InMotionGIT.Policy.Entity.Contracts.ExcludedIllnessInHealthPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured">
 <summary>
 Surcharges / Discounts by insured person and coverage.
 </summary>
<remarks>Data-source is 'INSURED_EXPDIS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.CreateNewExtraPremiumDiscountByInsured">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._nDisexprc">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._TypeOfItem">
<summary>
Extra-premium, discount or tax indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._TypeOfUnit">
<summary>
Type of unit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._Rate">
<summary>
Surcharge/discount rate (the unit indicated in the field is expressed in sUnit).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._Amount">
<summary>
Fixed amount to be added as a surcharge/discount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._ExtraPremiumPermanentOrTemporary">
<summary>
Permanent/temporary extra premium indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._ExtraPremiumOrDiscountEffectiveDate">
<summary>
Effective date of the extra premium/discount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._EndingDateOfExtraPremiumOrDiscount">
<summary>
Ending date of duration of the extra premium/discount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._AgeToAddOrSubtract">
<summary>
Age to be added/subtracted to the insured for the extra-premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._NoteID">
<summary>
NoteID
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._Cause">
<summary>
Extra-Rating/discount cause.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._SurchargeAccepted">
<summary>
It indicates that the surcharge was accepted by the insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.nDisexprc">
<summary>
.
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NDISEXPRC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.TypeOfItem">
<summary>
Extra-premium, discount or tax indicator. (SDISEXPRI)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.SDISEXPRI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.TypeOfUnit">
<summary>
Type of unit. (SUNIT)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.SUNIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Rate">
<summary>
Surcharge/discount rate (the unit indicated in the field is expressed in sUnit). (NRATE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Amount">
<summary>
Fixed amount to be added as a surcharge/discount (NAMOUNT)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.ExtraPremiumPermanentOrTemporary">
<summary>
Permanent/temporary extra premium indicator. (SPERM_TEMP)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.SPERM_TEMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.ExtraPremiumOrDiscountEffectiveDate">
<summary>
Effective date of the extra premium/discount. (DDATE_FR)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.DDATE_FR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.EndingDateOfExtraPremiumOrDiscount">
<summary>
Ending date of duration of the extra premium/discount. (DDATE_TO)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.DDATE_TO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.AgeToAddOrSubtract">
<summary>
Age to be added/subtracted to the insured for the extra-premium. (NAGE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.NoteID">
<summary>
NoteID (NNOTENUM)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Cause">
<summary>
Extra-Rating/discount cause. (NCAUSE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.NCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.SurchargeAccepted">
<summary>
It indicates that the surcharge was accepted by the insured. (SAGREE)..
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.SAGREE'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Compare(InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ExtraPremiumDiscountByInsuredItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsured.Included">
 <summary>
 It indicates that the ExtraPremiumDiscount should be included. Used for subscription.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection">
 <summary>
 Collection for ExtraPremiumDiscountByInsured class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection.AddExtraPremiumDiscountByInsured">
 <summary>
 Add an instance of class 'ExtraPremiumDiscountByInsured' in the ExtraPremiumDiscountByInsuredCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection.CompleteCompare(InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountByInsuredCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness">
 <summary>
 Particular information on fire policies.
 </summary>
<remarks>Data-source is 'FIRE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.CreateNewFireLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._Article">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._SpontaneousCombustionType">
<summary>
Type of spontaneous combustion.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._TypeOfSeismicConstruction">
<summary>
Type of seismic construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._ActivityType">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._Family">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._SeismicZone">
<summary>
Seismic areas.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._SideClosureType">
<summary>
Types of side closures.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._Clrisk">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._RoofType">
<summary>
Type of roof
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._ValueReportingType">
<summary>
Code of the type of value reporting for the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._FrequencyOfValueReporting">
<summary>
Frequency of value reporting.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._PremiumInDeposit">
<summary>
Deposit premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._BillingFrequencyForValueReports">
<summary>
Frequency at which value reports will be billed for.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._DetailArt">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._NumberOfFloors">
<summary>
Number of floors in the building.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._LocationCode">
<summary>
Code of the location of the risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._CancellationCode">
<summary>
Code of cancellation of the specific information record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._TypeOfLocation">
<summary>
Code of the type of city or town where the risk is located.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._Premium">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._AverageRate">
<summary>
Average Rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._EffectiveDate">
<summary>
Effective date of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._IndemnityPeriod">
<summary>
Indemnity period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._ConstructionClass">
<summary>
Class of construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._Transaction">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._ActivityCategory">
<summary>
Category of the activity
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._PremiumPercentage">
<summary>
Percentage of loan premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._HurricanZone">
<summary>
Zone of Hurricane
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._Concatenation">
<summary>
Concatenation of the fields related to the business draft (nBusinessTy + nCommerGrp + nCodKind).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._SpecificDescription">
<summary>
Specific description of business draft.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._nCodKind">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._AnnualLimit">
<summary>
Annual maximum limit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._PercentageForPremiumInDeposit">
<summary>
Percentage to obtain the deposit premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._SSBSEISMICCODE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._NYEARCONSTRUC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._NDISTANCERISK">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._SSCORNER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._NUSEPROP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._SFINISH">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._NTRANSFOR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._SPROCESS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._NRISKHYDRO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._NRISKOTHER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._NRUGOSITY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'FIRE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'FIRE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'FIRE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'FIRE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'FIRE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'FIRE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'FIRE.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Article">
<summary>
FIELD DELETED FROM THE SYSTEM (NARTICLE)..
</summary>
<remarks>Data-source is 'FIRE.NARTICLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SpontaneousCombustionType">
<summary>
Type of spontaneous combustion. (NSPCOMBTYPE)..
</summary>
<remarks>Data-source is 'FIRE.NSPCOMBTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.TypeOfSeismicConstruction">
<summary>
Type of seismic construction. (NBUILDTYPE)..
</summary>
<remarks>Data-source is 'FIRE.NBUILDTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ActivityType">
<summary>
FIELD DELETED FROM THE SYSTEM (NACTIVITYTYPE)..
</summary>
<remarks>Data-source is 'FIRE.NACTIVITYTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Family">
<summary>
FIELD DELETED FROM THE SYSTEM (NFAMILY)..
</summary>
<remarks>Data-source is 'FIRE.NFAMILY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SeismicZone">
<summary>
Seismic areas. (NSEISMICZONE)..
</summary>
<remarks>Data-source is 'FIRE.NSEISMICZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SideClosureType">
<summary>
Types of side closures. (NSIDECLOSETYPE)..
</summary>
<remarks>Data-source is 'FIRE.NSIDECLOSETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Clrisk">
<summary>
FIELD DELETED FROM THE SYSTEM (NCL_RISK)..
</summary>
<remarks>Data-source is 'FIRE.NCL_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RoofType">
<summary>
Type of roof (NROOFTYPE)..
</summary>
<remarks>Data-source is 'FIRE.NROOFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FIRE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate. (SCLIENT)..
</summary>
<remarks>Data-source is 'FIRE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ValueReportingType">
<summary>
Code of the type of value reporting for the policy. (SDECLA_TYPE)..
</summary>
<remarks>Data-source is 'FIRE.SDECLA_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.FrequencyOfValueReporting">
<summary>
Frequency of value reporting. (SDECLA_FREQ)..
</summary>
<remarks>Data-source is 'FIRE.SDECLA_FREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PremiumInDeposit">
<summary>
Deposit premium amount. (NDEP_PREM)..
</summary>
<remarks>Data-source is 'FIRE.NDEP_PREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'FIRE.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.BillingFrequencyForValueReports">
<summary>
Frequency at which value reports will be billed for. (SFACTU_FREQ)..
</summary>
<remarks>Data-source is 'FIRE.SFACTU_FREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.DetailArt">
<summary>
FIELD DELETED FROM THE SYSTEM (NDETAILART)..
</summary>
<remarks>Data-source is 'FIRE.NDETAILART'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.NumberOfFloors">
<summary>
Number of floors in the building. (NFLOOR_QUAN)..
</summary>
<remarks>Data-source is 'FIRE.NFLOOR_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'FIRE.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.LocationCode">
<summary>
Code of the location of the risk. (SLOCAT_RISK)..
</summary>
<remarks>Data-source is 'FIRE.SLOCAT_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.CancellationCode">
<summary>
Code of cancellation of the specific information record. (NNULLCODE)..
</summary>
<remarks>Data-source is 'FIRE.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'FIRE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.TypeOfLocation">
<summary>
Code of the type of city or town where the risk is located. (SPOPULAT_TY)..
</summary>
<remarks>Data-source is 'FIRE.SPOPULAT_TY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Premium">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'FIRE.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.AverageRate">
<summary>
Average Rate. (NPROM_RATE)..
</summary>
<remarks>Data-source is 'FIRE.NPROM_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.EffectiveDate">
<summary>
Effective date of the policy/certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'FIRE.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FIRE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.IndemnityPeriod">
<summary>
Indemnity period. (NINDPERIOD)..
</summary>
<remarks>Data-source is 'FIRE.NINDPERIOD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ConstructionClass">
<summary>
Class of construction. (NCONSTCAT)..
</summary>
<remarks>Data-source is 'FIRE.NCONSTCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Transaction">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'FIRE.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ActivityCategory">
<summary>
Category of the activity (NACTIVITYCAT)..
</summary>
<remarks>Data-source is 'FIRE.NACTIVITYCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PremiumPercentage">
<summary>
Percentage of loan premium. (NANT_PREM)..
</summary>
<remarks>Data-source is 'FIRE.NANT_PREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.HurricanZone">
<summary>
Zone of Hurricane (NHURRICAN_ZONE)..
</summary>
<remarks>Data-source is 'FIRE.NHURRICAN_ZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'FIRE.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'FIRE.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Concatenation">
<summary>
Concatenation of the fields related to the business draft (nBusinessTy + nCommerGrp + nCodKind). (SCOMPLCOD)..
</summary>
<remarks>Data-source is 'FIRE.SCOMPLCOD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SpecificDescription">
<summary>
Specific description of business draft. (SDESCBUSSI)..
</summary>
<remarks>Data-source is 'FIRE.SDESCBUSSI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.nCodKind">
<summary>
.
</summary>
<remarks>Data-source is 'FIRE.NCODKIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'FIRE.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.AnnualLimit">
<summary>
Annual maximum limit. (NESTAMOUNT)..
</summary>
<remarks>Data-source is 'FIRE.NESTAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PercentageForPremiumInDeposit">
<summary>
Percentage to obtain the deposit premium amount. (NDEP_RATE)..
</summary>
<remarks>Data-source is 'FIRE.NDEP_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SSBSEISMICCODE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.SSBSEISMICCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.NYEARCONSTRUC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.NYEARCONSTRUC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.NDISTANCERISK">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.NDISTANCERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SSCORNER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.SSCORNER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.NUSEPROP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.NUSEPROP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SFINISH">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.SFINISH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.NTRANSFOR">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.NTRANSFOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SPROCESS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.SPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.NRISKHYDRO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.NRISKHYDRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.NRISKOTHER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.NRISKOTHER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.NRUGOSITY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FIRE.NRUGOSITY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FireLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SpontaneousCombustionTypeDescription">
 <summary>
 Type of spontaneous combustion.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7040'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.TypeOfSeismicConstructionDescription">
 <summary>
 Type of seismic construction.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7039'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ActivityTypeDescription">
 <summary>
 FIELD DELETED FROM THE SYSTEM
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7045'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.FamilyDescription">
 <summary>
 FIELD DELETED FROM THE SYSTEM
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7046'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SeismicZoneDescription">
 <summary>
 Seismic areas.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7047'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.SideClosureTypeDescription">
 <summary>
 Types of side closures.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7037'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.RoofTypeDescription">
 <summary>
 Type of roof
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7038'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ValueReportingTypeDescription">
 <summary>
 Code of the type of value reporting for the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE235'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.FrequencyOfValueReportingDescription">
 <summary>
 Frequency of value reporting.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE108'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ConstructionClassDescription">
 <summary>
 Class of construction.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE233'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.ActivityCategoryDescription">
 <summary>
 Category of the activity
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7044'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessCollection">
 <summary>
 Collection for FireLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessCollection.AddFireLineOfBusiness">
 <summary>
 Add an instance of class 'FireLineOfBusiness' in the FireLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration">
 <summary>
 Declarations in the fire line of business.
 </summary>
<remarks>Data-source is 'FIRE_DECLA'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.CreateNewFireLineOfBusinessDeclaration">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._YearAndMonth">
<summary>
Year and month.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._ValueReportingDate">
<summary>
Date when the Value Reporting Form was made.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._Billed">
<summary>
Billed value report indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._Premium">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._Rate">
<summary>
Rate applied to the value reported.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.YearAndMonth">
<summary>
Year and month. (NYEAR_MONTH)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NYEAR_MONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.ValueReportingDate">
<summary>
Date when the Value Reporting Form was made. (DDECLA_DATE)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.DDECLA_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.Billed">
<summary>
Billed value report indicator. (SFACDECLAR)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.SFACDECLAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.Premium">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.Rate">
<summary>
Rate applied to the value reported. (NRATE)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'FIRE_DECLA.NCURRENCY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.Compare(InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FireLineOfBusinessDeclarationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclaration.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclarationCollection">
 <summary>
 Collection for FireLineOfBusinessDeclaration class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclarationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclarationCollection.AddFireLineOfBusinessDeclaration">
 <summary>
 Add an instance of class 'FireLineOfBusinessDeclaration' in the FireLineOfBusinessDeclarationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclarationCollection.Compare(InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclarationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclarationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclarationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FireLineOfBusinessDeclarationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax">
 <summary>
 Table of flat rates of tax.
 </summary>
<remarks>Data-source is 'TAX_FIXVAL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.CreateNewFlatRateOFTax">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._TaxCode">
<summary>
Code of the tax.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._TaxType">
<summary>
Tax type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._SupportingDocument">
<summary>
Type of support document.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._Percentage">
<summary>
Percentage to be applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._Currency">
<summary>
Currency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.TaxCode">
<summary>
Code of the tax. (NCODE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.TaxType">
<summary>
Tax type. (STYPETAX)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.STYPETAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.SupportingDocument">
<summary>
Type of support document. (NTYPESUPPORT)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NTYPESUPPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.Percentage">
<summary>
Percentage to be applied (NPERCENT)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAX_FIXVAL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.Currency">
<summary>
Currency (NCURRENCY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAX_FIXVAL.NCURRENCY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.Compare(InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FlatRateOFTaxItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.TaxTypeDescription">
 <summary>
 Tax type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5602'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTax.SupportingDocumentDescription">
 <summary>
 Type of support document.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5570'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTaxCollection">
 <summary>
 Collection for FlatRateOFTax class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTaxCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTaxCollection.AddFlatRateOFTax">
 <summary>
 Add an instance of class 'FlatRateOFTax' in the FlatRateOFTaxCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTaxCollection.Compare(InMotionGIT.Policy.Entity.Contracts.FlatRateOFTaxCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTaxCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTaxCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FlatRateOFTaxCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Franchise">
 <summary>
 Franchise or deductible of a policy or certificate.
 </summary>
<remarks>Data-source is 'FRANCHISE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.CreateNewFranchise">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._CorrelativeNumber">
<summary>
Correlative sequence assigned to each record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._Division">
<summary>
Code of the Grouping within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._DurationOfEliminationPeriod">
<summary>
Number of days, months, hours of the elimination period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._UnitsOfEliminationPeriod">
<summary>
Units of Elimination Period (months, days, etc.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._DiscountAmountBecauseFranchiseOrDeductible">
<summary>
Amount of discount because of the franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._Discount">
<summary>
Franchise discount percentage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed Franchise or Deductible Amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._FranchiseOrDeductible">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise/deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._FranchisePercentage">
<summary>
Franchise Percentage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._DurationOfWaitingPeriod">
<summary>
Number of days/hours/months of the waiting period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._UnitsOfWaitingPeriod">
<summary>
Units of Waiting Period (months, days, etc.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._FranchiseOrDeductibleIsApplied">
<summary>
It indicates if a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._DeductibleApplicationFrequency">
<summary>
Frequency of application of the deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._CoverageCode">
<summary>
Code coverage on applying the deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._CoverageBillingItem">
<summary>
Payment concept of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._ApplicationLevel">
<summary>
Code of the application level of the deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._RoleWhichDeductibleApplies">
<summary>
Role of the client on which deductible applies
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._ApplicationOrder">
<summary>
Order in which to apply the deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._CoverageModule">
<summary>
Coverage module
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Franchise._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'FRANCHISE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'FRANCHISE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'FRANCHISE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'FRANCHISE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'FRANCHISE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.CorrelativeNumber">
<summary>
Correlative sequence assigned to each record. (NSEQ)..
</summary>
<remarks>Data-source is 'FRANCHISE.NSEQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.Division">
<summary>
Code of the Grouping within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'FRANCHISE.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'FRANCHISE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.DurationOfEliminationPeriod">
<summary>
Number of days, months, hours of the elimination period. (NCAREN_QUAN)..
</summary>
<remarks>Data-source is 'FRANCHISE.NCAREN_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.UnitsOfEliminationPeriod">
<summary>
Units of Elimination Period (months, days, etc. (SCAREN_TYPE)..
</summary>
<remarks>Data-source is 'FRANCHISE.SCAREN_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FRANCHISE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.DiscountAmountBecauseFranchiseOrDeductible">
<summary>
Amount of discount because of the franchise or deductible. (NDISC_AMOUN)..
</summary>
<remarks>Data-source is 'FRANCHISE.NDISC_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.Discount">
<summary>
Franchise discount percentage. (NDISCOUNT)..
</summary>
<remarks>Data-source is 'FRANCHISE.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed Franchise or Deductible Amount. (NFIXAMOUNT)..
</summary>
<remarks>Data-source is 'FRANCHISE.NFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.FranchiseOrDeductible">
<summary>
It indicates whether a franchise or deductible is applied (SFRANDEDI)..
</summary>
<remarks>Data-source is 'FRANCHISE.SFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise/deductible amount. (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'FRANCHISE.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'FRANCHISE.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'FRANCHISE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.FranchisePercentage">
<summary>
Franchise Percentage. (NRATE)..
</summary>
<remarks>Data-source is 'FRANCHISE.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FRANCHISE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.DurationOfWaitingPeriod">
<summary>
Number of days/hours/months of the waiting period. (NWAIT_QUAN)..
</summary>
<remarks>Data-source is 'FRANCHISE.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.UnitsOfWaitingPeriod">
<summary>
Units of Waiting Period (months, days, etc. (SWAIT_TYPE)..
</summary>
<remarks>Data-source is 'FRANCHISE.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.FranchiseOrDeductibleIsApplied">
<summary>
It indicates if a franchise or deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'FRANCHISE.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'FRANCHISE.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.DeductibleApplicationFrequency">
<summary>
Frequency of application of the deductible. (NDED_TYPE)..
</summary>
<remarks>Data-source is 'FRANCHISE.NDED_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.CoverageCode">
<summary>
Code coverage on applying the deductible. (NCOVER)..
</summary>
<remarks>Data-source is 'FRANCHISE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.CoverageBillingItem">
<summary>
Payment concept of the coverage (NPAY_CONCEP)..
</summary>
<remarks>Data-source is 'FRANCHISE.NPAY_CONCEP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.ApplicationLevel">
<summary>
Code of the application level of the deductible. (NLEVEL)..
</summary>
<remarks>Data-source is 'FRANCHISE.NLEVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.RoleWhichDeductibleApplies">
<summary>
Role of the client on which deductible applies (NROLE)..
</summary>
<remarks>Data-source is 'FRANCHISE.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.RoleWhichDeductibleAppliesEnum">
<summary>
Role of the client on which deductible applies
</summary>
<remarks>This property use a enumeration based on property 'RoleWhichDeductibleApplies'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.RoleWhichDeductibleAppliesEnumText">
<summary>
Role of the client on which deductible applies
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.ApplicationOrder">
<summary>
Order in which to apply the deductible. (NORDER)..
</summary>
<remarks>Data-source is 'FRANCHISE.NORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.CoverageModule">
<summary>
Coverage module (NMODULEC)..
</summary>
<remarks>Data-source is 'FRANCHISE.NMODULEC'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.Compare(InMotionGIT.Policy.Entity.Contracts.Franchise,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FranchiseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Franchise.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.UnitsOfEliminationPeriodDescription">
 <summary>
 Units of Elimination Period (months, days, etc.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.FranchiseOrDeductibleDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.UnitsOfWaitingPeriodDescription">
 <summary>
 Units of Waiting Period (months, days, etc.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE52'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.FranchiseOrDeductibleIsAppliedDescription">
 <summary>
 It indicates if a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.DeductibleApplicationFrequencyDescription">
 <summary>
 Frequency of application of the deductible.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE269'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.CoverageBillingItemDescription">
 <summary>
 Payment concept of the coverage
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE160'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.ApplicationLevelDescription">
 <summary>
 Code of the application level of the deductible.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE21'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Franchise.RoleWhichDeductibleAppliesDescription">
 <summary>
 Role of the client on which deductible applies
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FranchiseCollection">
 <summary>
 Collection for Franchise class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FranchiseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FranchiseCollection.AddFranchise">
 <summary>
 Add an instance of class 'Franchise' in the FranchiseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FranchiseCollection.Compare(InMotionGIT.Policy.Entity.Contracts.FranchiseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FranchiseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FranchiseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FranchiseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy">
 <summary>
 
 </summary>
<remarks>Data-source is 'FUNDS_CO_P'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.CreateNewFundOfMainPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._LineOfBusiness">
<summary>
Code of The Line of Business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._InvestmentFund">
<summary>
Code of the investment fund
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._Origin">
<summary>
Origin of the deposit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._SharePercentage">
<summary>
Percentage of share in the Fund
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._RedirectionIndicator">
<summary>
Redirection indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._ActivePortfolio">
<summary>
Active Portfolio.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._Profitability">
<summary>
Projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._AdviserProfitability">
<summary>
Projected profitability determined by the adviser
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.LineOfBusiness">
<summary>
Code of The Line of Business. (NBRANCH)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.InvestmentFund">
<summary>
Code of the investment fund (NFUNDS)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NFUNDS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.Origin">
<summary>
Origin of the deposit. (NORIGIN)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.SharePercentage">
<summary>
Percentage of share in the Fund (NPARTICIP)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.RedirectionIndicator">
<summary>
Redirection indicator (SREADDRESS)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.SREADDRESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.ActivePortfolio">
<summary>
Active Portfolio. (SACTIVFOUND)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.SACTIVFOUND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.Profitability">
<summary>
Projected profitability (NINTPROY)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NINTPROY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.AdviserProfitability">
<summary>
Projected profitability determined by the adviser (NINTPROYVAR)..
</summary>
<remarks>Data-source is 'FUNDS_CO_P.NINTPROYVAR'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="FundOfMainPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicyCollection">
 <summary>
 Collection for FundOfMainPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicyCollection.AddFundOfMainPolicy">
 <summary>
 Add an instance of class 'FundOfMainPolicy' in the FundOfMainPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.FundOfMainPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Group">
 <summary>
 Groupings to use in a group policy.
 </summary>
<remarks>Data-source is 'GROUPS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.CreateNewGroup">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._Description">
<summary>
Description of the division.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._EmployeePremiumShare">
<summary>
Percentage of premium contributed by the employee.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._NVEHTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._NUSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Group._CoverageGroups">
<summary>
Coverages related with a group.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'GROUPS.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'GROUPS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'GROUPS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'GROUPS.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'GROUPS.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'GROUPS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'GROUPS.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'GROUPS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'GROUPS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.Description">
<summary>
Description of the division. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'GROUPS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.EmployeePremiumShare">
<summary>
Percentage of premium contributed by the employee. (NPARTICIP)..
</summary>
<remarks>Data-source is 'GROUPS.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'GROUPS.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'GROUPS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.NVEHTYPE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GROUPS.NVEHTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.NUSE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GROUPS.NUSE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.NewCoverageGroupsInstance">
<summary>
Initializes the 'CoverageGroups' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.NewCoverageGroupItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CoverageGroups', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CoverageGroup' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Group.CoverageGroups">
<summary>
Coverages related with a group. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.Compare(InMotionGIT.Policy.Entity.Contracts.Group,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="GroupItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Group.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.GroupCollection">
 <summary>
 Collection for Group class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GroupCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GroupCollection.AddGroup">
 <summary>
 Add an instance of class 'Group' in the GroupCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GroupCollection.Compare(InMotionGIT.Policy.Entity.Contracts.GroupCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GroupCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GroupCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GroupCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue">
 <summary>
 Table of non-forfeiture values of a policy
 </summary>
<remarks>Data-source is 'GUARANT_VAL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.CreateNewGuaranteedValue">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._Age">
<summary>
Actuarial age of the insured person
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._Year">
<summary>
Year of the non-forfeiture values.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._Month">
<summary>
Month of the non-forfeiture values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._ExtendedYears">
<summary>
Extended years related to the year of the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._DeferredValue">
<summary>
Deferred value for this year.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._SurrenderValue">
<summary>
Surrender value for the year.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._ReducedPaidUpAmount">
<summary>
Reduced insured amount of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._ReducedPaidUpAmountForDeath">
<summary>
Reduced insured amount of the death coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._DeferredValueType">
<summary>
Type of deferred value
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._ReducedPaidUpRate">
<summary>
Rate for reduced paid up policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._CoveragePeriodInMonths">
<summary>
Coverage period (in months)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._NMODULEC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._NCOVER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._SSEXCLIEN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._NINSUR_TIME">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._NPRO_MONTH">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._NPRO_DAY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.Age">
<summary>
Actuarial age of the insured person (NAGE)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.Year">
<summary>
Year of the non-forfeiture values. (NYEAR)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.Month">
<summary>
Month of the non-forfeiture values (NMONTH)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.ExtendedYears">
<summary>
Extended years related to the year of the record. (NPRO_YEAR)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NPRO_YEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.DeferredValue">
<summary>
Deferred value for this year. (NDEFAMOUNT)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NDEFAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.SurrenderValue">
<summary>
Surrender value for the year. (NRESC_VAL)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NRESC_VAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.ReducedPaidUpAmount">
<summary>
Reduced insured amount of the policy. (NSALD_VAL)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NSALD_VAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.ReducedPaidUpAmountForDeath">
<summary>
Reduced insured amount of the death coverage. (NSALDVALKM)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NSALDVALKM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.DeferredValueType">
<summary>
Type of deferred value (NDEFERRED)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NDEFERRED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.ReducedPaidUpRate">
<summary>
Rate for reduced paid up policies. (NSAL_TAX)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NSAL_TAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.CoveragePeriodInMonths">
<summary>
Coverage period (in months) (NPERIOD_COV)..
</summary>
<remarks>Data-source is 'GUARANT_VAL.NPERIOD_COV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.NMODULEC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GUARANT_VAL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.NCOVER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GUARANT_VAL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.SSEXCLIEN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GUARANT_VAL.SSEXCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.NINSUR_TIME">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GUARANT_VAL.NINSUR_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.NPRO_MONTH">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GUARANT_VAL.NPRO_MONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.NPRO_DAY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'GUARANT_VAL.NPRO_DAY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.Compare(InMotionGIT.Policy.Entity.Contracts.GuaranteedValue,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="GuaranteedValueItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValue.DeferredValueTypeDescription">
 <summary>
 Type of deferred value
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5586'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.GuaranteedValueCollection">
 <summary>
 Collection for GuaranteedValue class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValueCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValueCollection.AddGuaranteedValue">
 <summary>
 Add an instance of class 'GuaranteedValue' in the GuaranteedValueCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValueCollection.Compare(InMotionGIT.Policy.Entity.Contracts.GuaranteedValueCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuaranteedValueCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValueCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuaranteedValueCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol">
 <summary>
 
 </summary>
<remarks>Data-source is 'GUAR_SAVING_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.CreateNewGuarranteedSavingsPol">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._ConsecutiveNumber">
<summary>
Consecutive number of the guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._YearsForGuaranteedSaving">
<summary>
Period of years for the Guaranteed Saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._InitialDate">
<summary>
Date From of The Guaranteed Saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._EndDate">
<summary>
Date until which the guaranteed saving is in force
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._EndValue">
<summary>
Value of End of The Guaranteed Saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._PremiumAmountOfGuaranteedSaving">
<summary>
Premium amount of the guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._Currency">
<summary>
Guaranteed Saving Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._Amount">
<summary>
Amount of The Cost of Purchase of The Guaranteed Saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._StatusOfTheGuaranteedSaving">
<summary>
Status of the guaranteed saving.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._GuaranteedSavingsIndicator">
<summary>
Indicator of the Guaranteed Savings collected
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._BillNumber">
<summary>
Number of the bill That Generates The Guaranteed Saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._GuaranteedProfitabilityPercentage">
<summary>
Percentage of Guaranteed Profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._ReserveOfGuaranteedSaving">
<summary>
Reserve of guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._ProfitabilityOfGuaranteedSaving">
<summary>
Profitability of guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.ConsecutiveNumber">
<summary>
Consecutive number of the guaranteed saving (NGUARSAVID)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NGUARSAVID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.YearsForGuaranteedSaving">
<summary>
Period of years for the Guaranteed Saving (NGUARSAV_YEAR)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NGUARSAV_YEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.InitialDate">
<summary>
Date From of The Guaranteed Saving (DSTART_GUARSAV)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.DSTART_GUARSAV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.EndDate">
<summary>
Date until which the guaranteed saving is in force (DEND_GUARSAV)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.DEND_GUARSAV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.EndValue">
<summary>
Value of End of The Guaranteed Saving (NGUARSAV_VALUE)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NGUARSAV_VALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.PremiumAmountOfGuaranteedSaving">
<summary>
Premium amount of the guaranteed saving (NGUARSAV_PREM)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NGUARSAV_PREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.Currency">
<summary>
Guaranteed Saving Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.Amount">
<summary>
Amount of The Cost of Purchase of The Guaranteed Saving (NGUARSAV_COST)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NGUARSAV_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.StatusOfTheGuaranteedSaving">
<summary>
Status of the guaranteed saving. (NGUARSAV_STAT)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NGUARSAV_STAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.GuaranteedSavingsIndicator">
<summary>
Indicator of the Guaranteed Savings collected (SDEPPREMIND)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.SDEPPREMIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.BillNumber">
<summary>
Number of the bill That Generates The Guaranteed Saving (NRECEIPT)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.GuaranteedProfitabilityPercentage">
<summary>
Percentage of Guaranteed Profitability (NREN_GUARSAV)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NREN_GUARSAV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.ReserveOfGuaranteedSaving">
<summary>
Reserve of guaranteed saving (NGUARRESERVE)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NGUARRESERVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.ProfitabilityOfGuaranteedSaving">
<summary>
Profitability of guaranteed saving (NGUARRENT)..
</summary>
<remarks>Data-source is 'GUAR_SAVING_POL.NGUARRENT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.Compare(InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="GuarranteedSavingsPolItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPol.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPolCollection">
 <summary>
 Collection for GuarranteedSavingsPol class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPolCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPolCollection.AddGuarranteedSavingsPol">
 <summary>
 Add an instance of class 'GuarranteedSavingsPol' in the GuarranteedSavingsPolCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPolCollection.Compare(InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPolCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPolCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPolCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.GuarranteedSavingsPolCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness">
 <summary>
 Particular information on health policies.
 </summary>
<remarks>Data-source is 'HEALTH'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.CreateNewHealthLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._TypeOfInsuredPerson">
<summary>
Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._CancellationCode">
<summary>
Code of cancellation of the specific information record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._Premium">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._RatingTable">
<summary>
Code of the rating table used for the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._Transaction">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._InternationalCard">
<summary>
Number of international card.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._EligibilityPeriodUnits">
<summary>
Type of units for eligibility period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._EligibilityPeriodNumber">
<summary>
Number of days/hours/months of the eligibility period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._EarlyBillIndicator">
<summary>
The anticipated billing is handled for the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'HEALTH.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'HEALTH.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'HEALTH.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'HEALTH.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'HEALTH.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'HEALTH.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'HEALTH.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'HEALTH.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'HEALTH.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate. (SCLIENT)..
</summary>
<remarks>Data-source is 'HEALTH.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.TypeOfInsuredPerson">
<summary>
Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance (NGROUP_COMP)..
</summary>
<remarks>Data-source is 'HEALTH.NGROUP_COMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'HEALTH.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.CancellationCode">
<summary>
Code of cancellation of the specific information record. (NNULLCODE)..
</summary>
<remarks>Data-source is 'HEALTH.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'HEALTH.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.Premium">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'HEALTH.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'HEALTH.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.RatingTable">
<summary>
Code of the rating table used for the product. (NTARIFF)..
</summary>
<remarks>Data-source is 'HEALTH.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'HEALTH.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.Transaction">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'HEALTH.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'HEALTH.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'HEALTH.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.InternationalCard">
<summary>
Number of international card. (SINTCARNET)..
</summary>
<remarks>Data-source is 'HEALTH.SINTCARNET'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'HEALTH.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.EligibilityPeriodUnits">
<summary>
Type of units for eligibility period. (SWAIT_TYPE)..
</summary>
<remarks>Data-source is 'HEALTH.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.EligibilityPeriodNumber">
<summary>
Number of days/hours/months of the eligibility period (NWAIT_QUAN)..
</summary>
<remarks>Data-source is 'HEALTH.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.EarlyBillIndicator">
<summary>
The anticipated billing is handled for the policy (SPREBILLING)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HEALTH.SPREBILLING'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="HealthLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.TypeOfInsuredPersonDescription">
 <summary>
 Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE268'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusinessCollection">
 <summary>
 Collection for HealthLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusinessCollection.AddHealthLineOfBusiness">
 <summary>
 Add an instance of class 'HealthLineOfBusiness' in the HealthLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HealthLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate">
 <summary>
 History states of certificates
 </summary>
<remarks>Data-source is 'CERT_STATUS_HIS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.CreateNewHistoryStatesOfCertificate">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._ConsecutiveNumber">
<summary>
MovementConsecutiveNumber
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._CreationDate">
<summary>
DateFromWhichTheRecordIsCreated
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._StatusCode">
<summary>
StatusCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.ConsecutiveNumber">
<summary>
MovementConsecutiveNumber (NTRANSAC)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.CreationDate">
<summary>
DateFromWhichTheRecordIsCreated (DCREATIONDATE)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.DCREATIONDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.StatusCode">
<summary>
StatusCode (NFACESTATUS)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.NFACESTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CERT_STATUS_HIS.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.Compare(InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="HistoryStatesOfCertificateItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificate.StatusCodeDescription">
 <summary>
 StatusCode
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6765' on the table 'TABLE6765'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificateCollection">
 <summary>
 Collection for HistoryStatesOfCertificate class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificateCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificateCollection.AddHistoryStatesOfCertificate">
 <summary>
 Add an instance of class 'HistoryStatesOfCertificate' in the HistoryStatesOfCertificateCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificateCollection.Compare(InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificateCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificateCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificateCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HistoryStatesOfCertificateCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness">
 <summary>
 Particular information on homeowner policies.
 </summary>
<remarks>Data-source is 'HOMEOWNER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.CreateNewHomeLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._nNullcode">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Transaction">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._DwellingType">
<summary>
Code of type of dwelling for homeowner policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Ownership">
<summary>
Code of ownership/occupation of a home.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._YearBuilt">
<summary>
Year of construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._HomePurchasedCoverage">
<summary>
It indicates the home purchase is covered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._PurchasePrice">
<summary>
Purchase price of the home.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._CurrencyOfPurchasePrice">
<summary>
Code of the currency of the purchase price.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._DateOfPurchase">
<summary>
Date of purchase of the property.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._AnotherPolicyIndicator">
<summary>
It indicates that the risk is covered by another policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._InsuredAmountOfTheOtherPolicy">
<summary>
Sum insured amount of the other policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._CurrencyOtherPolicy">
<summary>
Code of the currency for the insured amount of the other policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._ExpirationOfTheOtherPolicy">
<summary>
Expiration date of the other policy that is covering this risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._UbicationOfSwimmingPool">
<summary>
Code of the location of swimming pool.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._FencedPool">
<summary>
It indicates that the swimming pool is enclosed by a fence.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._FenceHeight">
<summary>
Height of the fence (in meters).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Trampoline">
<summary>
It indicates that the home has a swimming pool with trampoline.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._PetsOrLivestock">
<summary>
It indicates that the home has pets or livestock.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._AnimalsDescriptions">
<summary>
Description of the animals.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._PreviousAttack">
<summary>
Indicates that any of the animals has attacked someone before.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._ConstructionMaterial">
<summary>
Material for the external part of the building.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._OtherConstructionMaterials">
<summary>
Description of others materials of construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Stories">
<summary>
Stories of the construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Foundation">
<summary>
Code of the foundation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._RoofType">
<summary>
Type of roof.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._RoofYear">
<summary>
Year when the roof was installed or when it was last changed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Area">
<summary>
Area (mtrs2) of the home.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._LandArea">
<summary>
Area (mts2) of the land.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._NumberOfCars">
<summary>
Number of cars in the garage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Chimneys">
<summary>
Number of chimneys.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Bedrooms">
<summary>
Number of bedrooms of the dwelling.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._FullBathrooms">
<summary>
Number of full bathrooms.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._HalfBathrooms">
<summary>
Number of half bathrooms.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Heating">
<summary>
Type of heating.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._AirConditioningType">
<summary>
Type of air conditioning.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._GasolineTank">
<summary>
Indicates whether the home has a gasoline tank.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Sprinklers">
<summary>
It indicates that the dwelling has a sprinkler system.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._CompanyMonitoringTheAlarm">
<summary>
Name of the company that monitors the alarm.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._SmokingAllowed">
<summary>
It indicates that it is allowed to smoke in the dwelling.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._DistanceToFireDepartment">
<summary>
Distance to the nearest fire department.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._NearestFireDepartmentName">
<summary>
Name of the nearest fire department.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._DistanceToFireHydrant">
<summary>
Distance to the nearest fire hydrant.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._FloodZoneType">
<summary>
Flood zone type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._FloodInsuranceIndicator">
<summary>
Indicator of flood insurance
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._SeismicArea">
<summary>
Seismic areas
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._SquareMeterCode">
<summary>
CriteriaSquareMeterCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._PreBillingIndicator">
<summary>
The anticipated billing is handled for the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._SquaremeterValue">
<summary>
SquaremeterValue
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._NROUGHNESS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._NINDPERIOD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._NUSEPROPHIDRO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._SSBSEISMICCODE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._SSB_HIDROCODE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._SPROPBEINGBUILT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._NDISTANCERISK">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._SCORNER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._NUSEPROP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._TypeArea">
<summary>
Type of area
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._Stratification">
<summary>
Socio- economic stratification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._TypeProperty">
<summary>
Type of property according to the insured risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._MtValorMT">
<summary>
Estimated value per square meter
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._YearRange">
<summary>
Year range
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._UseType">
<summary>
Type of use that is given to housing or building
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._TypeMaterial">
<summary>
Material used to build the structure of the house or ecificacion
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._IndBaseIrregular">
<summary>
It indicates whether the base of the home or building has irregularities
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._IndAlturaIrregular">
<summary>
It indicates whether the height of the home or building has irregularities
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._IndPrevIrregulares">
<summary>
It indicates whether the structure has previous irregularities at the time of acquisition
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._TypeReinforcing">
<summary>
Type of reinforcing aggregate to the house
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.nNullcode">
<summary>
.
</summary>
<remarks>Data-source is 'HOMEOWNER.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'HOMEOWNER.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'HOMEOWNER.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Transaction">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.DwellingType">
<summary>
Code of type of dwelling for homeowner policies. (NDWELLINGTYPE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NDWELLINGTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Ownership">
<summary>
Code of ownership/occupation of a home. (NOWNERSHIP)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NOWNERSHIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.YearBuilt">
<summary>
Year of construction. (NYEAR_BUILT)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NYEAR_BUILT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.HomePurchasedCoverage">
<summary>
It indicates the home purchase is covered. (SCOV_PURC)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SCOV_PURC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PurchasePrice">
<summary>
Purchase price of the home. (NPRICE_PURCH)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NPRICE_PURCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.CurrencyOfPurchasePrice">
<summary>
Code of the currency of the purchase price. (NCURRENCY_PURCH)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NCURRENCY_PURCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.DateOfPurchase">
<summary>
Date of purchase of the property. (DDATE_PURCH)..
</summary>
<remarks>Data-source is 'HOMEOWNER.DDATE_PURCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.AnotherPolicyIndicator">
<summary>
It indicates that the risk is covered by another policy. (SPOLICY_OTHER)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SPOLICY_OTHER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.InsuredAmountOfTheOtherPolicy">
<summary>
Sum insured amount of the other policy. (NCAP_OTHER)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NCAP_OTHER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.CurrencyOtherPolicy">
<summary>
Code of the currency for the insured amount of the other policy. (NCURRENCY_OTHER)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NCURRENCY_OTHER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.ExpirationOfTheOtherPolicy">
<summary>
Expiration date of the other policy that is covering this risk. (DEXPIR_OTHER)..
</summary>
<remarks>Data-source is 'HOMEOWNER.DEXPIR_OTHER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.UbicationOfSwimmingPool">
<summary>
Code of the location of swimming pool. (NSWIMPOOL)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NSWIMPOOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.FencedPool">
<summary>
It indicates that the swimming pool is enclosed by a fence. (SFENCEPOOL)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SFENCEPOOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.FenceHeight">
<summary>
Height of the fence (in meters). (NFENCEHEIGHT)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NFENCEHEIGHT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Trampoline">
<summary>
It indicates that the home has a swimming pool with trampoline. (STRAMPOLINE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.STRAMPOLINE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PetsOrLivestock">
<summary>
It indicates that the home has pets or livestock. (SANIMALSIND)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SANIMALSIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.AnimalsDescriptions">
<summary>
Description of the animals. (SANIMALSDES)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SANIMALSDES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PreviousAttack">
<summary>
Indicates that any of the animals has attacked someone before. (SATTACKEDIND)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SATTACKEDIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.ConstructionMaterial">
<summary>
Material for the external part of the building. (NEXTERCONSTR)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NEXTERCONSTR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.OtherConstructionMaterials">
<summary>
Description of others materials of construction. (SOTHER_CONSTR)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SOTHER_CONSTR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Stories">
<summary>
Stories of the construction. (NSTORIES)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NSTORIES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Foundation">
<summary>
Code of the foundation. (NFOUNDTYPE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NFOUNDTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RoofType">
<summary>
Type of roof. (NROOFTYPE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NROOFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RoofYear">
<summary>
Year when the roof was installed or when it was last changed. (NROOFYEAR)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NROOFYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Area">
<summary>
Area (mtrs2) of the home. (NHOMESUPER)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NHOMESUPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.LandArea">
<summary>
Area (mts2) of the land. (NLANDSUPER)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NLANDSUPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.NumberOfCars">
<summary>
Number of cars in the garage. (NGARAGE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NGARAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Chimneys">
<summary>
Number of chimneys. (NFIREPLACE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NFIREPLACE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Bedrooms">
<summary>
Number of bedrooms of the dwelling. (NBEDROOMS)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NBEDROOMS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.FullBathrooms">
<summary>
Number of full bathrooms. (NFULLBATH)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NFULLBATH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.HalfBathrooms">
<summary>
Number of half bathrooms. (NHALFBATH)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NHALFBATH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Heating">
<summary>
Type of heating. (NALT_HEATING)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NALT_HEATING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.AirConditioningType">
<summary>
Type of air conditioning. (NAIRTYPE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NAIRTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.GasolineTank">
<summary>
Indicates whether the home has a gasoline tank. (SGAS)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SGAS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Sprinklers">
<summary>
It indicates that the dwelling has a sprinkler system. (SSPRINKSYS)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SSPRINKSYS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.CompanyMonitoringTheAlarm">
<summary>
Name of the company that monitors the alarm. (SALARM_COMP)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SALARM_COMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SmokingAllowed">
<summary>
It indicates that it is allowed to smoke in the dwelling. (SNON_SMOK)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SNON_SMOK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.DistanceToFireDepartment">
<summary>
Distance to the nearest fire department. (NDIST_FIRE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NDIST_FIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.NearestFireDepartmentName">
<summary>
Name of the nearest fire department. (SFIREDEPART)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SFIREDEPART'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.DistanceToFireHydrant">
<summary>
Distance to the nearest fire hydrant. (NDIST_HYDR)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NDIST_HYDR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.FloodZoneType">
<summary>
Flood zone type. (NFLOODZONE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NFLOODZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.FloodInsuranceIndicator">
<summary>
Indicator of flood insurance (SFLOODIND)..
</summary>
<remarks>Data-source is 'HOMEOWNER.SFLOODIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SeismicArea">
<summary>
Seismic areas (NSEISMICZONE)..
</summary>
<remarks>Data-source is 'HOMEOWNER.NSEISMICZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SquareMeterCode">
<summary>
CriteriaSquareMeterCode (NCRICODE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NCRICODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PreBillingIndicator">
<summary>
The anticipated billing is handled for the policy (SPREBILLING)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.SPREBILLING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SquaremeterValue">
<summary>
SquaremeterValue (NSQUAREVALUE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NSQUAREVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.NROUGHNESS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NROUGHNESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.NINDPERIOD">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NINDPERIOD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.NUSEPROPHIDRO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NUSEPROPHIDRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SSBSEISMICCODE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.SSBSEISMICCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SSB_HIDROCODE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.SSB_HIDROCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SPROPBEINGBUILT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.SPROPBEINGBUILT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.NDISTANCERISK">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NDISTANCERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SCORNER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.SCORNER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.NUSEPROP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NUSEPROP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.TypeArea">
<summary>
Type of area (NAREA_LOC)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NAREA_LOC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Stratification">
<summary>
Socio- economic stratification (NSTRATIFIC)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NSTRATIFIC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.TypeProperty">
<summary>
Type of property according to the insured risk (NPROPERRISK)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NPROPERRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.MtValorMT">
<summary>
Estimated value per square meter (NVALUEMETER)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NVALUEMETER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.YearRange">
<summary>
Year range (NBUILDRANGE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NBUILDRANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.UseType">
<summary>
Type of use that is given to housing or building (NRISKUSE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NRISKUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.TypeMaterial">
<summary>
Material used to build the structure of the house or ecificacion (NSTRUCTYPE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NSTRUCTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.IndBaseIrregular">
<summary>
It indicates whether the base of the home or building has irregularities (NBASEIRREG)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NBASEIRREG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.IndAlturaIrregular">
<summary>
It indicates whether the height of the home or building has irregularities (NHEIGHTIRR)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NHEIGHTIRR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.IndPrevIrregulares">
<summary>
It indicates whether the structure has previous irregularities at the time of acquisition (NPREVIRREG)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NPREVIRREG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.TypeReinforcing">
<summary>
Type of reinforcing aggregate to the house (NREINFORCE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'HOMEOWNER.NREINFORCE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="HomeLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.DwellingTypeDescription">
 <summary>
 Code of type of dwelling for homeowner policies.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6012'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.OwnershipDescription">
 <summary>
 Code of ownership/occupation of a home.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6005'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.ConstructionMaterialDescription">
 <summary>
 Material for the external part of the building.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5536'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.FoundationDescription">
 <summary>
 Code of the foundation.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6003'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.RoofTypeDescription">
 <summary>
 Type of roof.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7038'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.HeatingDescription">
 <summary>
 Type of heating.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6002'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.AirConditioningTypeDescription">
 <summary>
 Type of air conditioning.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6001'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.FloodZoneTypeDescription">
 <summary>
 Flood zone type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6007'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.SquareMeterCodeDescription">
 <summary>
 CriteriaSquareMeterCode
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6760' on the table 'TABLE6760'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusinessCollection">
 <summary>
 Collection for HomeLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusinessCollection.AddHomeLineOfBusiness">
 <summary>
 Add an instance of class 'HomeLineOfBusiness' in the HomeLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.HomeLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy">
 <summary>
 Illustration detail of non-traditional life policies
 </summary>
<remarks>Data-source is 'PROJECTVUL_DET'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.CreateNewIllustrationDetailOfNonTraditionalLifePolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._TypeProyection">
<summary>
Type of proyection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._SourceAccount">
<summary>
Code of the source account (values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._YearOfThePolicy">
<summary>
Current year of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._PolicyCurrentMonth">
<summary>
Current month of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._ConsecutiveNumber">
<summary>
Consecutive Number identifying The Record as sole.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._EntryType">
<summary>
It indicates the type of entry
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._CoverageModule">
<summary>
Code of the module associated to the charge
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._TaxAmount">
<summary>
Tax amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._EntryTypeCurrentAccount">
<summary>
Type of entry of the current account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._PolicyValueOfProjectedProfitablity">
<summary>
Amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._AccumulatdAmount">
<summary>
Accumulated amount according to the payment schedule
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._SurrenderAvailableAmount">
<summary>
Available amount for surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._RealAge">
<summary>
Real age of the insured person when he/she was first registered
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._ActuarialAge">
<summary>
Actuarial age of the insured person when she/he was first registered
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._InsuredAmount">
<summary>
Death coverage for the year of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._PremiumOfThePolicyValueOfProjectedProfitablity">
<summary>
Premium amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._SavingAmountOfThePolicyValueOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._BeforeInvestmentChargeIndicator">
<summary>
It indicates that The Charge or Credit must be applied before the investment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._ChargeCode">
<summary>
Charge Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._ChargeAmount">
<summary>
Charge amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._Premium">
<summary>
Premium amount of the guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._PurchaseCost">
<summary>
Amount of the purchase cost of the guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._Reserve">
<summary>
Reserve of guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._TributaryBenefit">
<summary>
Amount of the tributary benefit
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._Rentability">
<summary>
Amount of guaranteed rentability.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._CapitalRisk">
<summary>
Amount of capital at risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy._PercentajeRateApplied">
<summary>
Percentage rate applied.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.TypeProyection">
<summary>
Type of proyection. (NTYPE_PRO)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NTYPE_PRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SourceAccount">
<summary>
Code of the source account (values (NORIGIN)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.YearOfThePolicy">
<summary>
Current year of the policy (NYEAR)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.PolicyCurrentMonth">
<summary>
Current month of the policy (NMONTH)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.ConsecutiveNumber">
<summary>
Consecutive Number identifying The Record as sole. (NID)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.EntryType">
<summary>
It indicates the type of entry (SCREDIT)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.SCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.CoverageModule">
<summary>
Code of the module associated to the charge (NMODULEC)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.TaxAmount">
<summary>
Tax amount (NTAX)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.EntryTypeCurrentAccount">
<summary>
Type of entry of the current account. (NTYPE_MOVE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NTYPE_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.PolicyValueOfProjectedProfitablity">
<summary>
Amount of the policy value according to the projected profitability (NVP)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NVP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.AccumulatdAmount">
<summary>
Accumulated amount according to the payment schedule (NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SurrenderAvailableAmount">
<summary>
Available amount for surrender. (NSURRAMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NSURRAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.RealAge">
<summary>
Real age of the insured person when he/she was first registered (NAGE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.ActuarialAge">
<summary>
Actuarial age of the insured person when she/he was first registered (NAGE_REINSU)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NAGE_REINSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.InsuredAmount">
<summary>
Death coverage for the year of the policy (NCAPITAL)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.PremiumOfThePolicyValueOfProjectedProfitablity">
<summary>
Premium amount of the policy value according to the projected profitability (NVP_NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NVP_NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SavingAmountOfThePolicyValueOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the projected profitability (NVP_SAVING)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NVP_SAVING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.BeforeInvestmentChargeIndicator">
<summary>
It indicates that The Charge or Credit must be applied before the investment. (SPREINV)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.SPREINV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.ChargeCode">
<summary>
Charge Code (NLOAD_COD)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NLOAD_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.ChargeAmount">
<summary>
Charge amount (NCHARG_AMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCHARG_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.Premium">
<summary>
Premium amount of the guaranteed saving (NGUARSAV_PREM)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NGUARSAV_PREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.PurchaseCost">
<summary>
Amount of the purchase cost of the guaranteed saving (NGUARSAV_COST)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NGUARSAV_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.Reserve">
<summary>
Reserve of guaranteed saving (NGUARRESERVE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NGUARRESERVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.TributaryBenefit">
<summary>
Amount of the tributary benefit (NBENEF_TRIB)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NBENEF_TRIB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.Rentability">
<summary>
Amount of guaranteed rentability. (NRENTABILITY)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NRENTABILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.CapitalRisk">
<summary>
Amount of capital at risk. (NCAPITAL_RISK)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCAPITAL_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.PercentajeRateApplied">
<summary>
Percentage rate applied. (NLOAD_RATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NLOAD_RATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.Compare(InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="IllustrationDetailOfNonTraditionalLifePolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicyCollection">
 <summary>
 Collection for IllustrationDetailOfNonTraditionalLifePolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicyCollection.AddIllustrationDetailOfNonTraditionalLifePolicy">
 <summary>
 Add an instance of class 'IllustrationDetailOfNonTraditionalLifePolicy' in the IllustrationDetailOfNonTraditionalLifePolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationDetailOfNonTraditionalLifePolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy">
 <summary>
 Illustration of non-traditional life policies
 </summary>
<remarks>Data-source is 'PROJECTVUL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.CreateNewIllustrationOfNonTraditionalLifePolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._TypeProyection">
<summary>
Proyection type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._YearOfThePolicy">
<summary>
Current year of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._CurrencyCode">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._PolicyValueOfProjectedProfitablity">
<summary>
Amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._AccumulatdAmount">
<summary>
Accumulated amount according to the payment schedule
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._SurrenderAvailableAmount">
<summary>
Available amount for surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._SurrenderAvailablemountAccordingInterest">
<summary>
Available amount for surrender according to the projected interest
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._InsuredAge">
<summary>
Age of the insured for the year of registration
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._DeathCoverageAmount">
<summary>
Death coverage for the year of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._PolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Amount of the policy value according to the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._SurrenderAvailableAmountAccordingProjection">
<summary>
Available amount for surrender expressed in the policy&#39;s currency using the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._DeathCoverageProjected">
<summary>
Death coverage for the year of the policy using the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._ExcessAmount">
<summary>
Amount related to the excess accounts
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._PremiumOfThePolicyValueOfProjectedProfitablity">
<summary>
Premium amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._SavingAmountOfThePolicyValueOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._PremiumPolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Amount of the premium of the policy value according to the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._SavingAmountOfThePolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._SourceAccount">
<summary>
Code of the source account (values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._RentabilityAmount">
<summary>
Amount of rentability as first rate projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._AmountChargesFirstProjection">
<summary>
Amount of charges and precargos as first rate projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._AmountPremiumFirstProjection">
<summary>
Amount of premium rate period as first projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._AmountRentabilitySecondProjection">
<summary>
Amount of rentability as second rate projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._AmountChargesSecondProyection">
<summary>
Amount of charges and precargos as second rate projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._AmountPremiumSecondProjection">
<summary>
Amount of premium rate period as second projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy._IllustrationsDetailOfNonTraditionalLifePolicies">
<summary>
Illustration detail of non-traditional life policies
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.TypeProyection">
<summary>
Proyection type. (NTYPE_PRO)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NTYPE_PRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.YearOfThePolicy">
<summary>
Current year of the policy (NYEAR)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.CurrencyCode">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.PolicyValueOfProjectedProfitablity">
<summary>
Amount of the policy value according to the projected profitability (NVP)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.AccumulatdAmount">
<summary>
Accumulated amount according to the payment schedule (NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SurrenderAvailableAmount">
<summary>
Available amount for surrender. (NSURRAMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NSURRAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SurrenderAvailablemountAccordingInterest">
<summary>
Available amount for surrender according to the projected interest (NSURRAMOUNTL)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NSURRAMOUNTL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.InsuredAge">
<summary>
Age of the insured for the year of registration (NAGE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.DeathCoverageAmount">
<summary>
Death coverage for the year of the policy (NCAPITAL)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.PolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Amount of the policy value according to the second percentage of projected profitability (NVP2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SurrenderAvailableAmountAccordingProjection">
<summary>
Available amount for surrender expressed in the policy&#39;s currency using the second percentage of projected profitability (NSURRAMOUNT2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NSURRAMOUNT2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.DeathCoverageProjected">
<summary>
Death coverage for the year of the policy using the second percentage of projected profitability (NCAPITAL2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCAPITAL2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.ExcessAmount">
<summary>
Amount related to the excess accounts (NPREMIUM2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPREMIUM2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.PremiumOfThePolicyValueOfProjectedProfitablity">
<summary>
Premium amount of the policy value according to the projected profitability (NVP_NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP_NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SavingAmountOfThePolicyValueOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the projected profitability (NVP_SAVING)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP_SAVING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.PremiumPolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Amount of the premium of the policy value according to the second percentage of projected profitability (NVP2_NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP2_NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SavingAmountOfThePolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the second percentage of projected profitability (NVP2_SAVING)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP2_SAVING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SourceAccount">
<summary>
Code of the source account (values (NORIGIN)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.RentabilityAmount">
<summary>
Amount of rentability as first rate projection. (NRENTABILITY)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NRENTABILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.AmountChargesFirstProjection">
<summary>
Amount of charges and precargos as first rate projection. (NCHARG_AMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCHARG_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.AmountPremiumFirstProjection">
<summary>
Amount of premium rate period as first projection. (NPREM_AMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPREM_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.AmountRentabilitySecondProjection">
<summary>
Amount of rentability as second rate projection. (NRENTABILITY2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NRENTABILITY2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.AmountChargesSecondProyection">
<summary>
Amount of charges and precargos as second rate projection. (NCHARG_AMOUNT2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCHARG_AMOUNT2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.AmountPremiumSecondProjection">
<summary>
Amount of premium rate period as second projection. (NPREM_AMOUNT2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPREM_AMOUNT2'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.NewIllustrationsDetailOfNonTraditionalLifePoliciesInstance">
<summary>
Initializes the 'IllustrationsDetailOfNonTraditionalLifePolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.NewIllustrationDetailOfNonTraditionalLifePolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'IllustrationsDetailOfNonTraditionalLifePolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'IllustrationDetailOfNonTraditionalLifePolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.IllustrationsDetailOfNonTraditionalLifePolicies">
<summary>
Illustration detail of non-traditional life policies collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.Compare(InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="IllustrationOfNonTraditionalLifePolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicyCollection">
 <summary>
 Collection for IllustrationOfNonTraditionalLifePolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicyCollection.AddIllustrationOfNonTraditionalLifePolicy">
 <summary>
 Add an instance of class 'IllustrationOfNonTraditionalLifePolicy' in the IllustrationOfNonTraditionalLifePolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IllustrationOfNonTraditionalLifePolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.INDEXCER">
 <summary>
 
 </summary>
<remarks>Data-source is 'INDEXCER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.CreateNewINDEXCER">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._RevaluationIndexType">
<summary>
Code of type of revaluation index
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._Index1">
<summary>
Index for capital surcharges, periodic contributions
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._Index2">
<summary>
Index for non-traditional life policies
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._Index3">
<summary>
Index for non-traditional life funds of policies and loans from life insurance policies
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._IndexEndDate">
<summary>
Index end date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._ApprovalDateOfTheIndex">
<summary>
Approval Date of the Index
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._UserApprover">
<summary>
User Approver
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._UploadDateIndex">
<summary>
Upload date index
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.INDEXCER._UserCodeWhoLoadsTheIndex">
<summary>
User code who loads the index
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.RevaluationIndexType">
<summary>
Code of type of revaluation index (NRATETABLE)..
</summary>
<remarks>Data-source is 'INDEXCER.NRATETABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'INDEXCER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.Index1">
<summary>
Index for capital surcharges, periodic contributions (NINDEX1)..
</summary>
<remarks>Data-source is 'INDEXCER.NINDEX1'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.Index2">
<summary>
Index for non-traditional life policies (NINDEX2)..
</summary>
<remarks>Data-source is 'INDEXCER.NINDEX2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.Index3">
<summary>
Index for non-traditional life funds of policies and loans from life insurance policies (NINDEX3)..
</summary>
<remarks>Data-source is 'INDEXCER.NINDEX3'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'INDEXCER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'INDEXCER.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.IndexEndDate">
<summary>
Index end date (DENDDATE)..
</summary>
<remarks>Data-source is 'INDEXCER.DENDDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'INDEXCER.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.ApprovalDateOfTheIndex">
<summary>
Approval Date of the Index (DAPPROVALDATE)..
</summary>
<remarks>Data-source is 'INDEXCER.DAPPROVALDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.UserApprover">
<summary>
User Approver (NUSERAPPROVER)..
</summary>
<remarks>Data-source is 'INDEXCER.NUSERAPPROVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.UploadDateIndex">
<summary>
Upload date index (DUPLOADDATE)..
</summary>
<remarks>Data-source is 'INDEXCER.DUPLOADDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.UserCodeWhoLoadsTheIndex">
<summary>
User code who loads the index (NUSERUPLOAD)..
</summary>
<remarks>Data-source is 'INDEXCER.NUSERUPLOAD'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.Compare(InMotionGIT.Policy.Entity.Contracts.INDEXCER,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="INDEXCERItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCER.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCER.RevaluationIndexTypeDescription">
 <summary>
 Code of type of revaluation index
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6714' on the table 'TABLE6714'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.INDEXCERCollection">
 <summary>
 Collection for INDEXCER class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCERCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCERCollection.AddINDEXCER">
 <summary>
 Add an instance of class 'INDEXCER' in the INDEXCERCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCERCollection.Compare(InMotionGIT.Policy.Entity.Contracts.INDEXCERCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.INDEXCERCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCERCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.INDEXCERCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy">
 <summary>
 Index information applied to the policy
 </summary>
<remarks>Data-source is 'INFOPERIODUPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.CreateNewIndexInformationAppliedToThePolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._RevalType">
<summary>
Indices of revaluation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._CodeIndexingFrequency">
<summary>
Code indexing frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._DateNextRevaluation">
<summary>
Date next revaluation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._IndexStartDate">
<summary>
Index start date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._IndexEndDate">
<summary>
Index end date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._InitialValueOfTheIndex">
<summary>
Initial value of the index
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._FinalValueOfTheIndex">
<summary>
Final value of the index
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.RevalType">
<summary>
Indices of revaluation (NREVALTYPE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NREVALTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.CodeIndexingFrequency">
<summary>
Code indexing frequency (NFREQINDEX)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NFREQINDEX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.DateNextRevaluation">
<summary>
Date next revaluation (DNEXTUPDATE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.DNEXTUPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.IndexStartDate">
<summary>
Index start date (DINITDATE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.DINITDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.IndexEndDate">
<summary>
Index end date (DENDDATE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.DENDDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.InitialValueOfTheIndex">
<summary>
Initial value of the index (NINITINDEX)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NINITINDEX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.FinalValueOfTheIndex">
<summary>
Final value of the index (NENDINDEX)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NENDINDEX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'INFOPERIODUPDATE.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.Compare(InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="IndexInformationAppliedToThePolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.RevalTypeDescription">
 <summary>
 Indices of revaluation
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6714' on the table 'TABLE6714'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicy.CodeIndexingFrequencyDescription">
 <summary>
 Code indexing frequency
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6784' on the table 'TABLE6784'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicyCollection">
 <summary>
 Collection for IndexInformationAppliedToThePolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicyCollection.AddIndexInformationAppliedToThePolicy">
 <summary>
 Add an instance of class 'IndexInformationAppliedToThePolicy' in the IndexInformationAppliedToThePolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.IndexInformationAppliedToThePolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage">
 <summary>
 Number of insured persons by coverage.
 </summary>
<remarks>Data-source is 'NOPAYROLL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.CreateNewInsuredPersonsByCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._PolicyEntryNumber">
<summary>
Entry number in the history of a policy-certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._NumberOfInsuredPersons">
<summary>
Number of insured persons under the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'NOPAYROLL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'NOPAYROLL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.PolicyEntryNumber">
<summary>
Entry number in the history of a policy-certificate. (NMOVEMENT)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NMOVEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'NOPAYROLL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.NumberOfInsuredPersons">
<summary>
Number of insured persons under the coverage. (NQLIFES)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NQLIFES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'NOPAYROLL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'NOPAYROLL.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.Compare(InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InsuredPersonsByCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverage.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverageCollection">
 <summary>
 Collection for InsuredPersonsByCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverageCollection.AddInsuredPersonsByCoverage">
 <summary>
 Add an instance of class 'InsuredPersonsByCoverage' in the InsuredPersonsByCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverageCollection.Compare(InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InsuredPersonsByCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy">
 <summary>
 Funds associated with a policy.
 </summary>
<remarks>Data-source is 'FUNDS_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.CreateNewInvestmentFundRelatedToPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._InvestmentFund">
<summary>
Code of the investment fund.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._SourceAccount">
<summary>
Code of the source account (values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._PercentageShare">
<summary>
Share percentage of the policy in the Fund.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._Readdress">
<summary>
Redirection indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._FundAvailableUnits">
<summary>
Number of investment units available.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._PortfolioActiveToInvestIndicator">
<summary>
Active Portfolio indicates if the fund is in place to invest the contributions that the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._ProjectedProfitability">
<summary>
Projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._ProjectedProfitabilityGivenbyAdvisory">
<summary>
Projected profitability given by the advisory
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._SINDAPPLYCOI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._NORDERAPPLY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'FUNDS_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.InvestmentFund">
<summary>
Code of the investment fund. (NFUNDS)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NFUNDS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.SourceAccount">
<summary>
Code of the source account (values (NORIGIN)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'FUNDS_POL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'FUNDS_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'FUNDS_POL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.PercentageShare">
<summary>
Share percentage of the policy in the Fund. (NPARTICIP)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.Readdress">
<summary>
Redirection indicator. (SREADDRESS)..
</summary>
<remarks>Data-source is 'FUNDS_POL.SREADDRESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.FundAvailableUnits">
<summary>
Number of investment units available. (NQUAN_AVAIL)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NQUAN_AVAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.PortfolioActiveToInvestIndicator">
<summary>
Active Portfolio indicates if the fund is in place to invest the contributions that the client (SACTIVFOUND)..
</summary>
<remarks>Data-source is 'FUNDS_POL.SACTIVFOUND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.ProjectedProfitability">
<summary>
Projected profitability (NINTPROY)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NINTPROY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.ProjectedProfitabilityGivenbyAdvisory">
<summary>
Projected profitability given by the advisory (NINTPROYVAR)..
</summary>
<remarks>Data-source is 'FUNDS_POL.NINTPROYVAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.SINDAPPLYCOI">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FUNDS_POL.SINDAPPLYCOI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.NORDERAPPLY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'FUNDS_POL.NORDERAPPLY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="InvestmentFundRelatedToPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicyCollection">
 <summary>
 Collection for InvestmentFundRelatedToPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicyCollection.AddInvestmentFundRelatedToPolicy">
 <summary>
 Add an instance of class 'InvestmentFundRelatedToPolicy' in the InvestmentFundRelatedToPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.InvestmentFundRelatedToPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage">
 <summary>
 Valid record of the coverage
 </summary>
<remarks>Data-source is 'COVER_LAST'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.CreateNewLastDetailCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._PolicyQuotationProposalNumber">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._LineOfBusiness">
<summary>
Code of The Line of Business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._ModuleCoverage">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._InsuredGroupCode">
<summary>
Code of the Insured Grouping
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._ClientID">
<summary>
Code of The Client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._ClientRole">
<summary>
Role of the client in the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._InsuredAmount">
<summary>
Current amount of the sum insured under the COVER_LAST
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._InitialInsuredAmount">
<summary>
Initial amount of the sum insured under the COVER_LAST (when the Policy was written)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._ChangeIndicator">
<summary>
Coverage change indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._FranchiseDeductibleType">
<summary>
Type of franchise or deductible related to the policy/coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._DiscountPercentageDueToFranchiseDeductible">
<summary>
Percentage of discount by franchise or deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._FixedFranchiseDedcutibleAmount">
<summary>
Fixed franchise or deductible amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._CoverageWithPremiumWaived">
<summary>
Coverage with premium waived.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._AnnualPremiumAmount">
<summary>
Annual premium amount of the COVER_LAST.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._FranchiseDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._Number">
<summary>
Number of days/hours/months of the waiting period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._Rate">
<summary>
Rate per thousand (o/oo) of the coverage premium calculation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._WaitingPeriodTime">
<summary>
Type of Waiting Period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._FranchiseOrDeductible">
<summary>
It indicates if a franchise/deductible is applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._DiscountAmountDueToFranchiseDeductible">
<summary>
Amount of premium discount per franchise or deductible
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._InsuranceDurationType">
<summary>
Type of insurance period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._InsuranceDuration">
<summary>
Duration of the insurance
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._MinimumEntryAge">
<summary>
Maximum entry age for this role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._MaximumEntryAge">
<summary>
Maximum entry age for this role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._MaximumAgeOfPermanence">
<summary>
Maximum age of insurance
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._PaymentDurationType">
<summary>
Type of payment period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._PaymentDuration">
<summary>
Duration of the payments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._ReasonOfExclusion">
<summary>
Reason why the insured person was excluded from the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._InsuredAmountRequested">
<summary>
Sum insured requested related to insured person
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._MaximumInsurableAge">
<summary>
Maximum age to which the insured person is protected
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._MaximumAgeOfPermanenceWithCoverage">
<summary>
Maximum age to which the insured person is protected
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._CoverageAniversaryDate">
<summary>
Date of anniversary of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._SearchDate">
<summary>
Search date of the rate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._RetroactiveEndorsementDate">
<summary>
Date of The Retroactive Endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._ReinsuranceLineOfBusiness">
<summary>
Code of the reinsurance line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._RecalculationType">
<summary>
Type of recalculation of premium of a COVER_LASTage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._InitialInsuredAmountCalculated">
<summary>
Initial amount of the sum insured under the COVER_LAST (when the Policy was issued)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._InitialAnnualPremiumAmount">
<summary>
Annual premium amount of the COVER_LAST.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._RateCalculated">
<summary>
Rate per thousand (o/oo) of the premium calculation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._TaxAmount">
<summary>
Tax amount related to the premium amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._SurchargeAnnualAmount">
<summary>
Annual amount of the surcharge
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._AnnualDiscountAmount">
<summary>
Annual amount of the discount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._AnnualCommissionAmount">
<summary>
Annual amount of commission
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._GrossNetRate">
<summary>
Gross Net rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.PolicyQuotationProposalNumber">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COVER_LAST.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.LineOfBusiness">
<summary>
Code of The Line of Business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COVER_LAST.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ModuleCoverage">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'COVER_LAST.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InsuredGroupCode">
<summary>
Code of the Insured Grouping (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'COVER_LAST.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'COVER_LAST.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ClientID">
<summary>
Code of The Client. (SCLIENT)..
</summary>
<remarks>Data-source is 'COVER_LAST.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ClientRole">
<summary>
Role of the client in the policy (NROLE)..
</summary>
<remarks>Data-source is 'COVER_LAST.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ClientRoleEnum">
<summary>
Role of the client in the policy
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ClientRoleEnumText">
<summary>
Role of the client in the policy
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InsuredAmount">
<summary>
Current amount of the sum insured under the COVER_LAST (NCAPITAL)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InitialInsuredAmount">
<summary>
Initial amount of the sum insured under the COVER_LAST (when the Policy was written) (NCAPITALI)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCAPITALI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ChangeIndicator">
<summary>
Coverage change indicator (SCHANGE)..
</summary>
<remarks>Data-source is 'COVER_LAST.SCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COVER_LAST.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.FranchiseDeductibleType">
<summary>
Type of franchise or deductible related to the policy/coverage (SFRANDEDI)..
</summary>
<remarks>Data-source is 'COVER_LAST.SFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.DiscountPercentageDueToFranchiseDeductible">
<summary>
Percentage of discount by franchise or deductible (NDISCOUNT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.FixedFranchiseDedcutibleAmount">
<summary>
Fixed franchise or deductible amount (NFIXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.CoverageWithPremiumWaived">
<summary>
Coverage with premium waived. (SFREE_PREMI)..
</summary>
<remarks>Data-source is 'COVER_LAST.SFREE_PREMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.MinimumAmountOfFranchiseOrDeductible">
<summary>
Minimum franchise or deductible amount. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COVER_LAST.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.AnnualPremiumAmount">
<summary>
Annual premium amount of the COVER_LAST. (NPREMIUM)..
</summary>
<remarks>Data-source is 'COVER_LAST.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.FranchiseDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied (NRATE)..
</summary>
<remarks>Data-source is 'COVER_LAST.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.Number">
<summary>
Number of days/hours/months of the waiting period. (NWAIT_QUAN)..
</summary>
<remarks>Data-source is 'COVER_LAST.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.Rate">
<summary>
Rate per thousand (o/oo) of the coverage premium calculation. (NRATECOVE)..
</summary>
<remarks>Data-source is 'COVER_LAST.NRATECOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COVER_LAST.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.WaitingPeriodTime">
<summary>
Type of Waiting Period (SWAIT_TYPE)..
</summary>
<remarks>Data-source is 'COVER_LAST.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.FranchiseOrDeductible">
<summary>
It indicates if a franchise/deductible is applied. (SFRANCAPL)..
</summary>
<remarks>Data-source is 'COVER_LAST.SFRANCAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.DiscountAmountDueToFranchiseDeductible">
<summary>
Amount of premium discount per franchise or deductible (NDISC_AMOUN)..
</summary>
<remarks>Data-source is 'COVER_LAST.NDISC_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InsuranceDurationType">
<summary>
Type of insurance period. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'COVER_LAST.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InsuranceDurationTypeEnum">
<summary>
Type of insurance period.
</summary>
<remarks>This property use a enumeration based on property 'InsuranceDurationType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InsuranceDurationTypeEnumText">
<summary>
Type of insurance period.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InsuranceDuration">
<summary>
Duration of the insurance (NDURINSUR)..
</summary>
<remarks>Data-source is 'COVER_LAST.NDURINSUR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.MinimumEntryAge">
<summary>
Maximum entry age for this role (NAGEMININS)..
</summary>
<remarks>Data-source is 'COVER_LAST.NAGEMININS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.MaximumEntryAge">
<summary>
Maximum entry age for this role (NAGEMAXINS)..
</summary>
<remarks>Data-source is 'COVER_LAST.NAGEMAXINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.MaximumAgeOfPermanence">
<summary>
Maximum age of insurance (NAGEMAXPER)..
</summary>
<remarks>Data-source is 'COVER_LAST.NAGEMAXPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.PaymentDurationType">
<summary>
Type of payment period. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'COVER_LAST.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.PaymentDurationTypeEnum">
<summary>
Type of payment period.
</summary>
<remarks>This property use a enumeration based on property 'PaymentDurationType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.PaymentDurationTypeEnumText">
<summary>
Type of payment period.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.PaymentDuration">
<summary>
Duration of the payments (NDURPAY)..
</summary>
<remarks>Data-source is 'COVER_LAST.NDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ReasonOfExclusion">
<summary>
Reason why the insured person was excluded from the coverage (NCAUSEUPD)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCAUSEUPD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InsuredAmountRequested">
<summary>
Sum insured requested related to insured person (NCAPITAL_WAIT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCAPITAL_WAIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.MaximumInsurableAge">
<summary>
Maximum age to which the insured person is protected (NAGELIMIT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NAGELIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.MaximumAgeOfPermanenceWithCoverage">
<summary>
Maximum age to which the insured person is protected (NAGE_PER)..
</summary>
<remarks>Data-source is 'COVER_LAST.NAGE_PER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.CoverageAniversaryDate">
<summary>
Date of anniversary of the coverage. (DANIVERSARY)..
</summary>
<remarks>Data-source is 'COVER_LAST.DANIVERSARY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.SearchDate">
<summary>
Search date of the rate (DSEEKTAR)..
</summary>
<remarks>Data-source is 'COVER_LAST.DSEEKTAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RetroactiveEndorsementDate">
<summary>
Date of The Retroactive Endorsement. (DFER)..
</summary>
<remarks>Data-source is 'COVER_LAST.DFER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.ReinsuranceLineOfBusiness">
<summary>
Code of the reinsurance line of business (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'COVER_LAST.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RecalculationType">
<summary>
Type of recalculation of premium of a COVER_LASTage (NRETARIF)..
</summary>
<remarks>Data-source is 'COVER_LAST.NRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InitialInsuredAmountCalculated">
<summary>
Initial amount of the sum insured under the COVER_LAST (when the Policy was issued) (NCAPITAL_O)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCAPITAL_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InitialAnnualPremiumAmount">
<summary>
Annual premium amount of the COVER_LAST. (NPREMIUM_O)..
</summary>
<remarks>Data-source is 'COVER_LAST.NPREMIUM_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RateCalculated">
<summary>
Rate per thousand (o/oo) of the premium calculation (NRATECOVE_O)..
</summary>
<remarks>Data-source is 'COVER_LAST.NRATECOVE_O'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.TaxAmount">
<summary>
Tax amount related to the premium amount (NTAXAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NTAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.SurchargeAnnualAmount">
<summary>
Annual amount of the surcharge (NRECAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NRECAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.AnnualDiscountAmount">
<summary>
Annual amount of the discount (NDESCAMOUNT)..
</summary>
<remarks>Data-source is 'COVER_LAST.NDESCAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.AnnualCommissionAmount">
<summary>
Annual amount of commission (NCOMMI_AN)..
</summary>
<remarks>Data-source is 'COVER_LAST.NCOMMI_AN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.GrossNetRate">
<summary>
Gross Net rate. (NRATECOVE_B)..
</summary>
<remarks>Data-source is 'COVER_LAST.NRATECOVE_B'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COVER_LAST.DEFFECDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.Compare(InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LastDetailCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverageCollection">
 <summary>
 Collection for LastDetailCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverageCollection.AddLastDetailCoverage">
 <summary>
 Add an instance of class 'LastDetailCoverage' in the LastDetailCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverageCollection.Compare(InMotionGIT.Policy.Entity.Contracts.LastDetailCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LastDetailCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation">
 <summary>
 Variations in coverage of life (life).
 </summary>
<remarks>Data-source is 'LIFECOV_VAR'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.CreateNewLifeCoverageVariation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._InsuredGrouping">
<summary>
Code of insured grouping.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._EntryNumber">
<summary>
Entry number of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._InsuredAmount">
<summary>
Insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._Rate">
<summary>
Rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._nPremium">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._BasicAccumulatedPremium">
<summary>
Basic accumulated premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._ExcessAccumulatedPremium">
<summary>
Excess accumulated premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._NumberOfPaymentsOfBasicPremiums">
<summary>
Number of payments of basic premiums.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._BasicPremiumAmount">
<summary>
Amount of basic premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._LayerBasicPremiumPaidAmount">
<summary>
Amount paid over the basic premium of the layer.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._LayerPremiumInExcessPaidAmount">
<summary>
Amount paid over the premium in excess of the layer.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._TypeOfEndorsement">
<summary>
Type of endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._MinimumPremium">
<summary>
Minimum premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._TransactionNumber">
<summary>
Number of the transaction generating the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._FreqMaxEvents">
<summary>
Frequency for maximun of events
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.InsuredGrouping">
<summary>
Code of insured grouping. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.EntryNumber">
<summary>
Entry number of the coverage. (NMOV)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NMOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.InsuredAmount">
<summary>
Insured amount. (NCAPITAL)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.Rate">
<summary>
Rate. (NRATE)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.nPremium">
<summary>
.
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.BasicAccumulatedPremium">
<summary>
Basic accumulated premium (NPREBASACU)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPREBASACU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.ExcessAccumulatedPremium">
<summary>
Excess accumulated premium (NPREEXACU)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPREEXACU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.NumberOfPaymentsOfBasicPremiums">
<summary>
Number of payments of basic premiums. (NQPB)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NQPB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.BasicPremiumAmount">
<summary>
Amount of basic premium (NPAYPREM)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPAYPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.LayerBasicPremiumPaidAmount">
<summary>
Amount paid over the basic premium of the layer. (NPAYPB)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPAYPB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.LayerPremiumInExcessPaidAmount">
<summary>
Amount paid over the premium in excess of the layer. (NPAYPX)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPAYPX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.TypeOfEndorsement">
<summary>
Type of endorsement. (STYPEAMEND)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.STYPEAMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.MinimumPremium">
<summary>
Minimum premium amount. (NPREMIN)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NPREMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.TransactionNumber">
<summary>
Number of the transaction generating the entry. (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.FreqMaxEvents">
<summary>
Frequency for maximun of events (NFREQUEN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFECOV_VAR.NFREQUEN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.Compare(InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeCoverageVariationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariationCollection">
 <summary>
 Collection for LifeCoverageVariation class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariationCollection.AddLifeCoverageVariation">
 <summary>
 Add an instance of class 'LifeCoverageVariation' in the LifeCoverageVariationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariationCollection.Compare(InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeCoverageVariationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage">
 <summary>
 Additional information on life insurances coverage.
 </summary>
<remarks>Data-source is 'COVER_LIFE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.CreateNewLifeInsuranceCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._Age">
<summary>
Age of the insured at the moment of the transaction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._InsuredAmount">
<summary>
Amount of the sum insured involved.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._TypeOfTransaction">
<summary>
Type of transaction executed on the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._Transaction">
<summary>
Transaction number of the amendment applied on the life coverage (this number is unique within the coverage).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._SurrenderID">
<summary>
Number of the surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._FreqMaxEvents">
<summary>
Frequency for maximun of events
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'COVER_LIFE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'COVER_LIFE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'COVER_LIFE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.Age">
<summary>
Age of the insured at the moment of the transaction. (NAGE)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.InsuredAmount">
<summary>
Amount of the sum insured involved. (NCAPITAL)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'COVER_LIFE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'COVER_LIFE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.TypeOfTransaction">
<summary>
Type of transaction executed on the coverage. (NTYPE)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.Transaction">
<summary>
Transaction number of the amendment applied on the life coverage (this number is unique within the coverage). (NTRANSAC)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NTRANSAC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.SurrenderID">
<summary>
Number of the surrender. (NIDSURR)..
</summary>
<remarks>Data-source is 'COVER_LIFE.NIDSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.FreqMaxEvents">
<summary>
Frequency for maximun of events (NFREQUEN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'COVER_LIFE.NFREQUEN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.Compare(InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeInsuranceCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverageCollection">
 <summary>
 Collection for LifeInsuranceCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverageCollection.AddLifeInsuranceCoverage">
 <summary>
 Add an instance of class 'LifeInsuranceCoverage' in the LifeInsuranceCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverageCollection.Compare(InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeInsuranceCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness">
 <summary>
 Particular data on life policies.
 </summary>
<remarks>Data-source is 'LIFE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CreateNewLifeLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._InsuredAge">
<summary>
Age of the insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._MaximumAge">
<summary>
Age up to which the Insured is covered under the Policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._ActuarialAge">
<summary>
Actuarial age.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._LoanPaymentMethod">
<summary>
Payment method of the loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._InsuredAmount">
<summary>
Insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._InsuredAmountForCalculation">
<summary>
Insured amount for calculation of the total annual premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._EndingNumberSecuritiesWritten">
<summary>
Last number assigned to the securities written.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._EntryFee">
<summary>
Client entry fee amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._MedicalTestCharge">
<summary>
Amount to be charged on account of the medical tests to be performed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeOfMedicalTest">
<summary>
Type of medical test.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeOfInsurancePeriod">
<summary>
Type of Insurance Period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._StartingNumberOfSecuritiesWritten">
<summary>
Initial number assigned to securities written.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._InsuranceDuration">
<summary>
Duration of insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._LoanNumber">
<summary>
Mortgage Loan Number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CancellationCode">
<summary>
Code of cancellation of the specific information record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._DurationOfPayments">
<summary>
Duration of premium payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeOfDurationOfPaymentsNose">
<summary>
Type of duration of premium payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._InsuredAmountMustBeAMultipleOfThisAmount">
<summary>
Amount Multiple of .
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._MaximumNonStandardAmount">
<summary>
Maximum non-standard amount, periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._MinimumNonStandardAmount">
<summary>
Minimum non-standard amount, periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._AnnualPremium">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PremiumToCalculateInsuredAmount">
<summary>
Total annual premium amount for sum insured calculation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._BillNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._ReducedPaidUpAmount">
<summary>
Reduced Paid Up (RPU) amount of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PaidUpIndicator">
<summary>
Extended term insurance or paid-up policy indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NumberOfBonds">
<summary>
Total number of bonds subscribed for under the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._ExcessGuaranteedInterest">
<summary>
Interest percentage guaranteed on surplus.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._GuaranteedInterest">
<summary>
Interest percentage guaranteed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._DurationOfExtraPremiums">
<summary>
Number of years for the extra-premiums will be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._YearsAsAClient">
<summary>
Seniority of the insured in the company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._Transaction">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._ExtendedTermInsuranceEffectiveDate">
<summary>
New effective date after the extended term insurance (ETI) has been applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._AnnuityAmount">
<summary>
Amount of annuity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._AnnuityCurrency">
<summary>
Code of the currency for the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CreditNumber">
<summary>
Loan number (mortgage protection).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CreditDurationInMonths">
<summary>
Duration of the credit in months.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CreditDate">
<summary>
Date when the banking loan (mortgage or similar) was given.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CreditEndingDate">
<summary>
Loan ending date (mortgage, banking loan).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CreditCurrency">
<summary>
Code of the currency for the credit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._OriginalCreditAmount">
<summary>
Original amount of the banking loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._OutstandingCreditAmount">
<summary>
Outstanding credit amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._InsuredAmountCalculation">
<summary>
It indicates that the insured amount must (may) be calculated.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PremiumCalculationIndicator">
<summary>
Indicator of premium calculation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NumberOfInsuredPersons">
<summary>
Number of Insured Persons.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeOfInsuredPerson">
<summary>
Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._RatingTableForHealthInsurance">
<summary>
Code of the rating table used for health insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._Division">
<summary>
Code of the &#34;division&#34; within the group
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._BankAccount">
<summary>
Bank account number (mortgage protection).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._MaximumCreditAmount">
<summary>
Maximum loan amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PercentageOfCapitalization">
<summary>
Percentage of capitalization (retirement products).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._Amount">
<summary>
Amount of Guaranteed Underwriting Limit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeOfPaymentsPeriod">
<summary>
Type of Payment Period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._EndingDateOfPaymentPeriod">
<summary>
Ending date of the period of payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._MortgageInterestRate">
<summary>
Interest rate percentage (only for mortgage protection)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeOfDuration">
<summary>
Type of duration of insurance (open, age, number of years, etc.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._Installments">
<summary>
Number of installments for the credit (mortgage protection).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PercentContributionUsedForInvesting">
<summary>
Percentage of each contribution will be used for investment and savings account (Product class &#61; nontraditional Life)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PercentageOfCostPaidUsingSavingAccounts">
<summary>
Percentage of cost to be paid using savings accounts(Product class &#61; nontraditional Life)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PercentageOfCostPaidUsingUnits">
<summary>
Percentage of cost accounts will be paid using units. (Product class &#61; nontraditional Life)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeProfitabilityCode">
<summary>
The type profitability code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CodeOfTableUsingGuaranteedInterest">
<summary>
Code of table using Guaranteed Interest policy. (Product class &#61; nontraditional Life)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeOfIndemnity">
<summary>
Type of Indemnity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._BasicAmountOfAnnualPremium">
<summary>
Basic Amount of annual premium for the policy / certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PolicyModule">
<summary>
Code module associated with the policy at issue
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._AmountAgreedAccordingPaymentFrequency">
<summary>
Amount agreed / planned according to the policy premium payment frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._AgreedProjectedAnnualPremium">
<summary>
Agreed amount / projected annual policy premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._MinimumPremiumAmountaccordingProduct">
<summary>
Minimum premium amount according product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._GuaranteedInterestInInvestment">
<summary>
Guaranteed interest in investment
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PrintCoverageCertificatesIndicator">
<summary>
Indicator of print certificates of coverage status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._FolioNumber">
<summary>
Folio number. Corresponds to the movement Folio related document. In APV corresponds to foil the return of chosen options.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._MonthYearFirstDiscount">
<summary>
Month-Year of first the discount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._TypeOfTributaryBenefit">
<summary>
Type of Tributary Benefit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._Folio">
<summary>
Number of the folio
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._FinancialInstitution">
<summary>
Code of the financial institution.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._ExclusionCoverageType">
<summary>
Type of coverage per insured exclusion
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PreBillingIndicator">
<summary>
The anticipated billing is handled for the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NoAnswer">
<summary>
Indicates if the insurer did not contest the Affidavit of Health.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PreviousAccidentsOrIntervention">
<summary>
Indicates whether the insured underwent an prior accident or intervention
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._Medicated">
<summary>
Indicates if the insured ingests medicines.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NextHospitalization">
<summary>
Indicates if the insured will be hospitalized
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._SportRiskyActivity">
<summary>
Indicates if the insured practiceany any risky sport or activity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._BMIWithinParameters">
<summary>
Indicates if the BMI is within the normal parameters.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._DeferralPeriod">
<summary>
Years deferral period to start paying the contracted rent
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._GuaranteePeriod">
<summary>
Year duration of the payment of rents, even when the owner has died. Will be paid to the beneficiary
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._RentDuration">
<summary>
Duration of rent payments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._Balance">
<summary>
Account balance entered by the user
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NDEDUART">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NTERM_INSURANCE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._InvestorProfile">
<summary>
Investor Profile
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CountryOfOriginTable66">
<summary>
Country Of Origin Table66
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._CountryDestinationTable139">
<summary>
Country Destination Table139
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._DateStartTravel">
<summary>
Date Start Travel
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._DateEndTravel">
<summary>
Date End Travel
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NumberOfDays">
<summary>
Number Of Days
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NumberOfAdults">
<summary>
Number Of Adults
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NumberOfChildren">
<summary>
Number Of Children
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._NumberOfGreater">
<summary>
Number Of Greater
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._InvestmentFundRelatedToPolicies">
<summary>
Funds associated with a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._PaymentsPlans">
<summary>
Payment plan for contributions
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness._IllustrationsOfNonTraditionalLifePolicies">
<summary>
Illustration of non-traditional life policies
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'LIFE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LIFE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LIFE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'LIFE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'LIFE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'LIFE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InsuredAge">
<summary>
Age of the insured. (NAGE)..
</summary>
<remarks>Data-source is 'LIFE.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate. (SCLIENT)..
</summary>
<remarks>Data-source is 'LIFE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.MaximumAge">
<summary>
Age up to which the Insured is covered under the Policy. (NAGE_LIMIT)..
</summary>
<remarks>Data-source is 'LIFE.NAGE_LIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.ActuarialAge">
<summary>
Actuarial age. (NAGE_REINSU)..
</summary>
<remarks>Data-source is 'LIFE.NAGE_REINSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.LoanPaymentMethod">
<summary>
Payment method of the loan. (SAMORTI_WAY)..
</summary>
<remarks>Data-source is 'LIFE.SAMORTI_WAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InsuredAmount">
<summary>
Insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'LIFE.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InsuredAmountForCalculation">
<summary>
Insured amount for calculation of the total annual premium. (NCAPITAL_CA)..
</summary>
<remarks>Data-source is 'LIFE.NCAPITAL_CA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.EndingNumberSecuritiesWritten">
<summary>
Last number assigned to the securities written. (NEND_NUM)..
</summary>
<remarks>Data-source is 'LIFE.NEND_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.EntryFee">
<summary>
Client entry fee amount. (NENT_RIGHT)..
</summary>
<remarks>Data-source is 'LIFE.NENT_RIGHT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.MedicalTestCharge">
<summary>
Amount to be charged on account of the medical tests to be performed. (NEXA_AMOUNT)..
</summary>
<remarks>Data-source is 'LIFE.NEXA_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfMedicalTest">
<summary>
Type of medical test. (NEXAM_TYPE)..
</summary>
<remarks>Data-source is 'LIFE.NEXAM_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'LIFE.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfInsurancePeriod">
<summary>
Type of Insurance Period. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'LIFE.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfInsurancePeriodEnum">
<summary>
Type of Insurance Period.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsurancePeriod'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfInsurancePeriodEnumText">
<summary>
Type of Insurance Period.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.StartingNumberOfSecuritiesWritten">
<summary>
Initial number assigned to securities written. (NINIT_NUM)..
</summary>
<remarks>Data-source is 'LIFE.NINIT_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InsuranceDuration">
<summary>
Duration of insurance. (NINSUR_TIME)..
</summary>
<remarks>Data-source is 'LIFE.NINSUR_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'LIFE.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.LoanNumber">
<summary>
Mortgage Loan Number. (SLOAN_NUMBE)..
</summary>
<remarks>Data-source is 'LIFE.SLOAN_NUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CancellationCode">
<summary>
Code of cancellation of the specific information record. (NNULLCODE)..
</summary>
<remarks>Data-source is 'LIFE.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LIFE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.DurationOfPayments">
<summary>
Duration of premium payments. (NPAY_TIME)..
</summary>
<remarks>Data-source is 'LIFE.NPAY_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfDurationOfPaymentsNose">
<summary>
Type of duration of premium payment. (SPDURAIND)..
</summary>
<remarks>Data-source is 'LIFE.SPDURAIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InsuredAmountMustBeAMultipleOfThisAmount">
<summary>
Amount Multiple of . (NPERMULTI)..
</summary>
<remarks>Data-source is 'LIFE.NPERMULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.MaximumNonStandardAmount">
<summary>
Maximum non-standard amount, periodical payment. (NPERNUMAI)..
</summary>
<remarks>Data-source is 'LIFE.NPERNUMAI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.MinimumNonStandardAmount">
<summary>
Minimum non-standard amount, periodical payment. (NPERNUNMI)..
</summary>
<remarks>Data-source is 'LIFE.NPERNUNMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.AnnualPremium">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'LIFE.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PremiumToCalculateInsuredAmount">
<summary>
Total annual premium amount for sum insured calculation. (NPREMIUM_CA)..
</summary>
<remarks>Data-source is 'LIFE.NPREMIUM_CA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.BillNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'LIFE.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.ReducedPaidUpAmount">
<summary>
Reduced Paid Up (RPU) amount of the policy. (NSALD_AMOUN)..
</summary>
<remarks>Data-source is 'LIFE.NSALD_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PaidUpIndicator">
<summary>
Extended term insurance or paid-up policy indicator. (SSALD_PROG)..
</summary>
<remarks>Data-source is 'LIFE.SSALD_PROG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'LIFE.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NumberOfBonds">
<summary>
Total number of bonds subscribed for under the policy. (NTITLES_SUB)..
</summary>
<remarks>Data-source is 'LIFE.NTITLES_SUB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.ExcessGuaranteedInterest">
<summary>
Interest percentage guaranteed on surplus. (NWAR_INT_EX)..
</summary>
<remarks>Data-source is 'LIFE.NWAR_INT_EX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.GuaranteedInterest">
<summary>
Interest percentage guaranteed. (NWAR_INTERE)..
</summary>
<remarks>Data-source is 'LIFE.NWAR_INTERE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.DurationOfExtraPremiums">
<summary>
Number of years for the extra-premiums will be applied. (NXPREM_TIME)..
</summary>
<remarks>Data-source is 'LIFE.NXPREM_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.YearsAsAClient">
<summary>
Seniority of the insured in the company. (NYEARS_OLD)..
</summary>
<remarks>Data-source is 'LIFE.NYEARS_OLD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Transaction">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'LIFE.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.ExtendedTermInsuranceEffectiveDate">
<summary>
New effective date after the extended term insurance (ETI) has been applied. (DPROG_DATE)..
</summary>
<remarks>Data-source is 'LIFE.DPROG_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.AnnuityAmount">
<summary>
Amount of annuity. (NRENTAMOUNT)..
</summary>
<remarks>Data-source is 'LIFE.NRENTAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.AnnuityCurrency">
<summary>
Code of the currency for the annuity. (NCURRRENT)..
</summary>
<remarks>Data-source is 'LIFE.NCURRRENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CreditNumber">
<summary>
Loan number (mortgage protection). (SCREDITNUM)..
</summary>
<remarks>Data-source is 'LIFE.SCREDITNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CreditDurationInMonths">
<summary>
Duration of the credit in months. (NCRED_PRO)..
</summary>
<remarks>Data-source is 'LIFE.NCRED_PRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CreditDate">
<summary>
Date when the banking loan (mortgage or similar) was given. (DINIT_CRE)..
</summary>
<remarks>Data-source is 'LIFE.DINIT_CRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CreditEndingDate">
<summary>
Loan ending date (mortgage, banking loan). (DEND_CRE)..
</summary>
<remarks>Data-source is 'LIFE.DEND_CRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CreditCurrency">
<summary>
Code of the currency for the credit. (NCURREN_CRE)..
</summary>
<remarks>Data-source is 'LIFE.NCURREN_CRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.OriginalCreditAmount">
<summary>
Original amount of the banking loan. (NAMOUNT_CRE)..
</summary>
<remarks>Data-source is 'LIFE.NAMOUNT_CRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.OutstandingCreditAmount">
<summary>
Outstanding credit amount (NAMOUNT_ACT)..
</summary>
<remarks>Data-source is 'LIFE.NAMOUNT_ACT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InsuredAmountCalculation">
<summary>
It indicates that the insured amount must (may) be calculated. (NCALCAPITAL)..
</summary>
<remarks>Data-source is 'LIFE.NCALCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PremiumCalculationIndicator">
<summary>
Indicator of premium calculation. (NTYPPREMIUM)..
</summary>
<remarks>Data-source is 'LIFE.NTYPPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NumberOfInsuredPersons">
<summary>
Number of Insured Persons. (NCOUNT_INSU)..
</summary>
<remarks>Data-source is 'LIFE.NCOUNT_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfInsuredPerson">
<summary>
Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance (NGROUP_COMP)..
</summary>
<remarks>Data-source is 'LIFE.NGROUP_COMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RatingTableForHealthInsurance">
<summary>
Code of the rating table used for health insurance. (NTARIFF)..
</summary>
<remarks>Data-source is 'LIFE.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Division">
<summary>
Code of the &#34;division&#34; within the group (NGROUP)..
</summary>
<remarks>Data-source is 'LIFE.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'LIFE.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.BankAccount">
<summary>
Bank account number (mortgage protection). (SACCNUM)..
</summary>
<remarks>Data-source is 'LIFE.SACCNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.MaximumCreditAmount">
<summary>
Maximum loan amount. (NCAPITALMAX)..
</summary>
<remarks>Data-source is 'LIFE.NCAPITALMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PercentageOfCapitalization">
<summary>
Percentage of capitalization (retirement products). (NPERC_CAP)..
</summary>
<remarks>Data-source is 'LIFE.NPERC_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Amount">
<summary>
Amount of Guaranteed Underwriting Limit. (NLEGAMOUNT)..
</summary>
<remarks>Data-source is 'LIFE.NLEGAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfPaymentsPeriod">
<summary>
Type of Payment Period. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'LIFE.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfPaymentsPeriodEnum">
<summary>
Type of Payment Period.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfPaymentsPeriod'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfPaymentsPeriodEnumText">
<summary>
Type of Payment Period.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.EndingDateOfPaymentPeriod">
<summary>
Ending date of the period of payment. (DDATE_PAY)..
</summary>
<remarks>Data-source is 'LIFE.DDATE_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.MortgageInterestRate">
<summary>
Interest rate percentage (only for mortgage protection) (NRATEDESG)..
</summary>
<remarks>Data-source is 'LIFE.NRATEDESG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfDuration">
<summary>
Type of duration of insurance (open, age, number of years, etc. (SIDURAIND)..
</summary>
<remarks>Data-source is 'LIFE.SIDURAIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Installments">
<summary>
Number of installments for the credit (mortgage protection). (NQ_QUOT)..
</summary>
<remarks>Data-source is 'LIFE.NQ_QUOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PercentContributionUsedForInvesting">
<summary>
Percentage of each contribution will be used for investment and savings account (Product class &#61; nontraditional Life) (NSAVING_PCT)..
</summary>
<remarks>Data-source is 'LIFE.NSAVING_PCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PercentageOfCostPaidUsingSavingAccounts">
<summary>
Percentage of cost to be paid using savings accounts(Product class &#61; nontraditional Life) (NDISC_SAVE_PCT)..
</summary>
<remarks>Data-source is 'LIFE.NDISC_SAVE_PCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PercentageOfCostPaidUsingUnits">
<summary>
Percentage of cost accounts will be paid using units. (Product class &#61; nontraditional Life) (NDISC_UNIT_PCT)..
</summary>
<remarks>Data-source is 'LIFE.NDISC_UNIT_PCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeProfitabilityCode">
<summary>
The type profitability code (NINDEX_TABLE)..
</summary>
<remarks>Data-source is 'LIFE.NINDEX_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CodeOfTableUsingGuaranteedInterest">
<summary>
Code of table using Guaranteed Interest policy. (Product class &#61; nontraditional Life) (NWARRN_TABLE)..
</summary>
<remarks>Data-source is 'LIFE.NWARRN_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfIndemnity">
<summary>
Type of Indemnity. (NOPTION)..
</summary>
<remarks>Data-source is 'LIFE.NOPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.BasicAmountOfAnnualPremium">
<summary>
Basic Amount of annual premium for the policy / certificate (NPREMIUMBAS)..
</summary>
<remarks>Data-source is 'LIFE.NPREMIUMBAS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PolicyModule">
<summary>
Code module associated with the policy at issue (NMODULEC)..
</summary>
<remarks>Data-source is 'LIFE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.AmountAgreedAccordingPaymentFrequency">
<summary>
Amount agreed / planned according to the policy premium payment frequency (NPREMDEAL)..
</summary>
<remarks>Data-source is 'LIFE.NPREMDEAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.AgreedProjectedAnnualPremium">
<summary>
Agreed amount / projected annual policy premium (NPREMDEAL_ANU)..
</summary>
<remarks>Data-source is 'LIFE.NPREMDEAL_ANU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.MinimumPremiumAmountaccordingProduct">
<summary>
Minimum premium amount according product. (NPREMMIN)..
</summary>
<remarks>Data-source is 'LIFE.NPREMMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.GuaranteedInterestInInvestment">
<summary>
Guaranteed interest in investment (NINTWARR)..
</summary>
<remarks>Data-source is 'LIFE.NINTWARR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PrintCoverageCertificatesIndicator">
<summary>
Indicator of print certificates of coverage status (SPRINTCOV)..
</summary>
<remarks>Data-source is 'LIFE.SPRINTCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.FolioNumber">
<summary>
Folio number. Corresponds to the movement Folio related document. In APV corresponds to foil the return of chosen options. (SFOLIONUMBER)..
</summary>
<remarks>Data-source is 'LIFE.SFOLIONUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.MonthYearFirstDiscount">
<summary>
Month-Year of first the discount. (NYEARMONTH_FPAY)..
</summary>
<remarks>Data-source is 'LIFE.NYEARMONTH_FPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfTributaryBenefit">
<summary>
Type of Tributary Benefit. (NTAXREGIME)..
</summary>
<remarks>Data-source is 'LIFE.NTAXREGIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Folio">
<summary>
Number of the folio (NCOD_SAAPV)..
</summary>
<remarks>Data-source is 'LIFE.NCOD_SAAPV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.FinancialInstitution">
<summary>
Code of the financial institution. (NINSTITUTION)..
</summary>
<remarks>Data-source is 'LIFE.NINSTITUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.ExclusionCoverageType">
<summary>
Type of coverage per insured exclusion (NTYPEEXC)..
</summary>
<remarks>Data-source is 'LIFE.NTYPEEXC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PreBillingIndicator">
<summary>
The anticipated billing is handled for the policy (SPREBILLING)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.SPREBILLING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NoAnswer">
<summary>
Indicates if the insurer did not contest the Affidavit of Health. (SNOANSW)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.SNOANSW'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PreviousAccidentsOrIntervention">
<summary>
Indicates whether the insured underwent an prior accident or intervention (SPREVACC)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.SPREVACC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Medicated">
<summary>
Indicates if the insured ingests medicines. (SYMEDIC)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.SYMEDIC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NextHospitalization">
<summary>
Indicates if the insured will be hospitalized (SNEXTHOSP)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.SNEXTHOSP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.SportRiskyActivity">
<summary>
Indicates if the insured practiceany any risky sport or activity. (SRISKACT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.SRISKACT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.BMIWithinParameters">
<summary>
Indicates if the BMI is within the normal parameters. (SIMC)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.SIMC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.DeferralPeriod">
<summary>
Years deferral period to start paying the contracted rent (NDEFYEAR)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NDEFYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.GuaranteePeriod">
<summary>
Year duration of the payment of rents, even when the owner has died. Will be paid to the beneficiary (NGUARANTYEAR)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NGUARANTYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RentDuration">
<summary>
Duration of rent payments (NRENTDURATIO)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NRENTDURATIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Balance">
<summary>
Account balance entered by the user (NBALANCE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NBALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NDEDUART">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NDEDUART'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NTERM_INSURANCE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NTERM_INSURANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InvestorProfile">
<summary>
Investor Profile (NTYPEPROFILE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NTYPEPROFILE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CountryOfOriginTable66">
<summary>
Country Of Origin Table66 (NCOUNTRY_ORIGIN)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NCOUNTRY_ORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CountryDestinationTable139">
<summary>
Country Destination Table139 (NCOUNTRY_DESTINATION)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NCOUNTRY_DESTINATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.DateStartTravel">
<summary>
Date Start Travel (DSTARTTRAVEL)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.DSTARTTRAVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.DateEndTravel">
<summary>
Date End Travel (DENDTRAVEL)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.DENDTRAVEL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NumberOfDays">
<summary>
Number Of Days (NCANTDAYS)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NCANTDAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NumberOfAdults">
<summary>
Number Of Adults (NCANTADULTS)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NCANTADULTS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NumberOfChildren">
<summary>
Number Of Children (NCANTCHILDREN)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NCANTCHILDREN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NumberOfGreater">
<summary>
Number Of Greater (NCANTGREATER)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LIFE.NCANTGREATER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NewInvestmentFundRelatedToPoliciesInstance">
<summary>
Initializes the 'InvestmentFundRelatedToPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NewInvestmentFundRelatedToPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'InvestmentFundRelatedToPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'InvestmentFundRelatedToPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InvestmentFundRelatedToPolicies">
<summary>
Funds associated with a policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NewPaymentsPlansInstance">
<summary>
Initializes the 'PaymentsPlans' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NewPaymentsPlanItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PaymentsPlans', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PaymentsPlan' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PaymentsPlans">
<summary>
Payment plan for contributions collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NewIllustrationsOfNonTraditionalLifePoliciesInstance">
<summary>
Initializes the 'IllustrationsOfNonTraditionalLifePolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.NewIllustrationOfNonTraditionalLifePolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'IllustrationsOfNonTraditionalLifePolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'IllustrationOfNonTraditionalLifePolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.IllustrationsOfNonTraditionalLifePolicies">
<summary>
Illustration of non-traditional life policies collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CustomString">
 <summary>
 Extensibility custom string property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CustomStringEx">
 <summary>
 Extensibility custom string ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CustomNumeric">
 <summary>
 Extensibility custom decimal property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CustomNumericEx">
 <summary>
 Extensibility custom decimal ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CustomDate">
 <summary>
 Extensibility custom date property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CustomDateEx">
 <summary>
 Extensibility custom date ex property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CustomBoolean">
 <summary>
 Extensibility custom boolean property.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.CustomBooleanEx">
 <summary>
 Extensibility custom boolean ex property.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfInsurancePeriodDescription">
 <summary>
 Type of Insurance Period.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.InsuredAmountCalculationDescription">
 <summary>
 It indicates that the insured amount must (may) be calculated.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5560'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PremiumCalculationIndicatorDescription">
 <summary>
 Indicator of premium calculation.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5560'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.TypeOfInsuredPersonDescription">
 <summary>
 Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE268'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCollection">
 <summary>
 Collection for LifeLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCollection.AddLifeLineOfBusiness">
 <summary>
 Add an instance of class 'LifeLineOfBusiness' in the LifeLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue">
 <summary>
 
 </summary>
<remarks>Data-source is 'LIFE_LAST'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CreateNewLifeLineOfBusinessCurrentValue">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._LineOfBusiness">
<summary>
Code of The Line of Business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._InsuredAge">
<summary>
Insured&#39;s actual age
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._MaximumAge">
<summary>
Age up to which the Insured is covered under the Policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._ActuarialAge">
<summary>
Actuarial age.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._LoanPaymentMethod">
<summary>
Payment method of the loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._InsuredAmount">
<summary>
Insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._InsuredAmountForCalculation">
<summary>
Insured amount for calculation of the total annual premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._EndingNumberSecuritiesWritten">
<summary>
Last number assigned to the securities written.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._EntryFee">
<summary>
Client entry fee amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._MedicalTestCharge">
<summary>
Amount to be charged on account of the medical tests to be performed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._TypeOfMedicalTest">
<summary>
Type of medical test.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._TypeOfInsurancePeriod">
<summary>
Type of Insurance Period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._StartingNumberOfSecuritiesWritten">
<summary>
Initial number assigned to securities written.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._InsuranceDuration">
<summary>
Duration of insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._LoanNumber">
<summary>
Mortgage Loan Number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CancellationCode">
<summary>
Policy/Certificate Cancellation Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._DurationOfPayments">
<summary>
Duration of premium payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._TypeOfDurationOfPaymentsNose">
<summary>
Type of duration of premium payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._InsuredAmountMustBeAMultipleOfThisAmount">
<summary>
Amount Multiple of .
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._MaximumNonStandardAmount">
<summary>
Maximum non-standard amount, periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._MinimumNonStandardAmount">
<summary>
Minimum non-standard amount, periodical payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._PremiumToCalculateInsuredAmount">
<summary>
Total annual premium amount for sum insured calculation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._BillNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._ReducedPaidUpAmount">
<summary>
Reduced Paid Up (RPU) amount of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._PaidUpExtentedTermIndicator">
<summary>
Extended term insurance or paid-up policy indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._NumberOfBonds">
<summary>
Total number of bonds subscribed for under the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._ExcessGuaranteedInterest">
<summary>
Interest percentage guaranteed on surplus.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._GuaranteedInterest">
<summary>
Interest percentage guaranteed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._DurationOfExtraPremiums">
<summary>
Number of years for the extra-premiums will be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._YearsAsAClient">
<summary>
Seniority of the insured in the company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._TransactionNumber">
<summary>
Transaction Number generated by the Entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._ExtendedTermInsuranceEffectiveDate">
<summary>
New effective date after the extended term insurance (ETI) has been applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._AnnuityAmount">
<summary>
Amount of annuity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._AnnuityCurrency">
<summary>
Code of the currency for the annuity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CreditNumber">
<summary>
Loan number (mortgage protection).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CreditDurationInMonths">
<summary>
Duration of the credit in months.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CreditDate">
<summary>
Date when the banking loan (mortgage or similar) was granted
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CreditEndingDate">
<summary>
Loan ending date (mortgage, banking loan).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CreditCurrency">
<summary>
Code of the currency for the credit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._OriginalCreditAmount">
<summary>
Original amount of the banking loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._OutstandingCreditAmount">
<summary>
Outstanding credit amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._InsuredAmountCalculation">
<summary>
It indicates that the insured amount must (may) be calculated.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._PremiumCalculationIndicator">
<summary>
Indicator of premium calculation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._NumberOfInsuredPersons">
<summary>
Number of Insured Persons.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._TypeOfInsuredPerson">
<summary>
Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._RatingTableForHealthInsurance">
<summary>
Code of the rating table used for health insurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._Division">
<summary>
Code of the &#34;division&#34; within the group
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._BankAccount">
<summary>
Bank account number (mortgage protection).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._MaximumCreditAmount">
<summary>
Maximum loan amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._PercentageOfCapitalization">
<summary>
Percentage of capitalization (retirement products).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._Amount">
<summary>
Amount of Guaranteed Underwriting Limit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._TypeOffPaymentsPeriod">
<summary>
Type of Payment Period.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._EndingDateOfPaymentPeriod">
<summary>
Ending date of the period of payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._MortgageInterestRate">
<summary>
Interest rate percentage (only for mortgage protection)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._TypeOfDuration">
<summary>
Type of duration of insurance (open, age, number of years, etc.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._Isntallments">
<summary>
Number of installments for the credit (mortgage protection).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._SavingPercentage">
<summary>
Percentage of each contribution to be invested in a saving account
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CostPercentageOnCurrentAccount">
<summary>
Percentage of cost that applies on the current account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CostPercentageOnUnits">
<summary>
Percentage of cost that applies on the units.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CapitalizationIndexCode">
<summary>
Code of the Capitalization Index table that will be used in the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._GuaranteedInterestTable">
<summary>
Code of Table of Guaranteed Interest of The Policy (VNT)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._TypeOfIndemnity">
<summary>
Type of Indemnity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._BasePremium">
<summary>
Total annual base premium amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._AgreedPremium">
<summary>
Premium Agreed by Saving Concept, according to the payment frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._AnnualAgreedPremium">
<summary>
Premium Annual Agreed by Saving Concept
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._MinimumPremium">
<summary>
Annual minimum premium amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._GuaranteedProfitability">
<summary>
Guaranteed Profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.LineOfBusiness">
<summary>
Code of The Line of Business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.InsuredAge">
<summary>
Insured&#39;s actual age (NAGE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.MaximumAge">
<summary>
Age up to which the Insured is covered under the Policy. (NAGE_LIMIT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NAGE_LIMIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.ActuarialAge">
<summary>
Actuarial age. (NAGE_REINSU)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NAGE_REINSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.LoanPaymentMethod">
<summary>
Payment method of the loan. (SAMORTI_WAY)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SAMORTI_WAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.InsuredAmount">
<summary>
Insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.InsuredAmountForCalculation">
<summary>
Insured amount for calculation of the total annual premium. (NCAPITAL_CA)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCAPITAL_CA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.EndingNumberSecuritiesWritten">
<summary>
Last number assigned to the securities written. (NEND_NUM)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NEND_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.EntryFee">
<summary>
Client entry fee amount. (NENT_RIGHT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NENT_RIGHT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.MedicalTestCharge">
<summary>
Amount to be charged on account of the medical tests to be performed. (NEXA_AMOUNT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NEXA_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOfMedicalTest">
<summary>
Type of medical test. (NEXAM_TYPE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NEXAM_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOfInsurancePeriod">
<summary>
Type of Insurance Period. (NTYPDURINS)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NTYPDURINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOfInsurancePeriodEnum">
<summary>
Type of Insurance Period.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfInsurancePeriod'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOfInsurancePeriodEnumText">
<summary>
Type of Insurance Period.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.StartingNumberOfSecuritiesWritten">
<summary>
Initial number assigned to securities written. (NINIT_NUM)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NINIT_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.InsuranceDuration">
<summary>
Duration of insurance. (NINSUR_TIME)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NINSUR_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.LoanNumber">
<summary>
Mortgage Loan Number. (SLOAN_NUMBE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SLOAN_NUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CancellationCode">
<summary>
Policy/Certificate Cancellation Code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.DurationOfPayments">
<summary>
Duration of premium payments. (NPAY_TIME)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPAY_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOfDurationOfPaymentsNose">
<summary>
Type of duration of premium payment. (SPDURAIND)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SPDURAIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.InsuredAmountMustBeAMultipleOfThisAmount">
<summary>
Amount Multiple of . (NPERMULTI)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPERMULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.MaximumNonStandardAmount">
<summary>
Maximum non-standard amount, periodical payment. (NPERNUMAI)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPERNUMAI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.MinimumNonStandardAmount">
<summary>
Minimum non-standard amount, periodical payment. (NPERNUNMI)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPERNUNMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.PremiumToCalculateInsuredAmount">
<summary>
Total annual premium amount for sum insured calculation. (NPREMIUM_CA)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPREMIUM_CA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.BillNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.ReducedPaidUpAmount">
<summary>
Reduced Paid Up (RPU) amount of the policy. (NSALD_AMOUN)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NSALD_AMOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.PaidUpExtentedTermIndicator">
<summary>
Extended term insurance or paid-up policy indicator. (SSALD_PROG)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SSALD_PROG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.NumberOfBonds">
<summary>
Total number of bonds subscribed for under the policy. (NTITLES_SUB)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NTITLES_SUB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.ExcessGuaranteedInterest">
<summary>
Interest percentage guaranteed on surplus. (NWAR_INT_EX)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NWAR_INT_EX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.GuaranteedInterest">
<summary>
Interest percentage guaranteed. (NWAR_INTERE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NWAR_INTERE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.DurationOfExtraPremiums">
<summary>
Number of years for the extra-premiums will be applied. (NXPREM_TIME)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NXPREM_TIME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.YearsAsAClient">
<summary>
Seniority of the insured in the company. (NYEARS_OLD)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NYEARS_OLD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TransactionNumber">
<summary>
Transaction Number generated by the Entry. (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.ExtendedTermInsuranceEffectiveDate">
<summary>
New effective date after the extended term insurance (ETI) has been applied. (DPROG_DATE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DPROG_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.AnnuityAmount">
<summary>
Amount of annuity. (NRENTAMOUNT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NRENTAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.AnnuityCurrency">
<summary>
Code of the currency for the annuity. (NCURRRENT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCURRRENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CreditNumber">
<summary>
Loan number (mortgage protection). (SCREDITNUM)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SCREDITNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CreditDurationInMonths">
<summary>
Duration of the credit in months. (NCRED_PRO)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCRED_PRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CreditDate">
<summary>
Date when the banking loan (mortgage or similar) was granted (DINIT_CRE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DINIT_CRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CreditEndingDate">
<summary>
Loan ending date (mortgage, banking loan). (DEND_CRE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DEND_CRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CreditCurrency">
<summary>
Code of the currency for the credit. (NCURREN_CRE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCURREN_CRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.OriginalCreditAmount">
<summary>
Original amount of the banking loan. (NAMOUNT_CRE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NAMOUNT_CRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.OutstandingCreditAmount">
<summary>
Outstanding credit amount (NAMOUNT_ACT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NAMOUNT_ACT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.InsuredAmountCalculation">
<summary>
It indicates that the insured amount must (may) be calculated. (NCALCAPITAL)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCALCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.PremiumCalculationIndicator">
<summary>
Indicator of premium calculation. (NTYPPREMIUM)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NTYPPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.NumberOfInsuredPersons">
<summary>
Number of Insured Persons. (NCOUNT_INSU)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCOUNT_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOfInsuredPerson">
<summary>
Type of insured person (main insured, children, spouse, …) for rating purposes in Health insurance (NGROUP_COMP)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NGROUP_COMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.RatingTableForHealthInsurance">
<summary>
Code of the rating table used for health insurance. (NTARIFF)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.Division">
<summary>
Code of the &#34;division&#34; within the group (NGROUP)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.BankAccount">
<summary>
Bank account number (mortgage protection). (SACCNUM)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SACCNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.MaximumCreditAmount">
<summary>
Maximum loan amount. (NCAPITALMAX)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NCAPITALMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.PercentageOfCapitalization">
<summary>
Percentage of capitalization (retirement products). (NPERC_CAP)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPERC_CAP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.Amount">
<summary>
Amount of Guaranteed Underwriting Limit. (NLEGAMOUNT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NLEGAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOffPaymentsPeriod">
<summary>
Type of Payment Period. (NTYPDURPAY)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NTYPDURPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOffPaymentsPeriodEnum">
<summary>
Type of Payment Period.
</summary>
<remarks>This property use a enumeration based on property 'TypeOffPaymentsPeriod'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOffPaymentsPeriodEnumText">
<summary>
Type of Payment Period.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.EndingDateOfPaymentPeriod">
<summary>
Ending date of the period of payment. (DDATE_PAY)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DDATE_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.MortgageInterestRate">
<summary>
Interest rate percentage (only for mortgage protection) (NRATEDESG)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NRATEDESG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOfDuration">
<summary>
Type of duration of insurance (open, age, number of years, etc. (SIDURAIND)..
</summary>
<remarks>Data-source is 'LIFE_LAST.SIDURAIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.Isntallments">
<summary>
Number of installments for the credit (mortgage protection). (NQ_QUOT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NQ_QUOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.SavingPercentage">
<summary>
Percentage of each contribution to be invested in a saving account (NSAVING_PCT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NSAVING_PCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CostPercentageOnCurrentAccount">
<summary>
Percentage of cost that applies on the current account. (NDISC_SAVE_PCT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NDISC_SAVE_PCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CostPercentageOnUnits">
<summary>
Percentage of cost that applies on the units. (NDISC_UNIT_PCT)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NDISC_UNIT_PCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CapitalizationIndexCode">
<summary>
Code of the Capitalization Index table that will be used in the policy (NINDEX_TABLE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NINDEX_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.GuaranteedInterestTable">
<summary>
Code of Table of Guaranteed Interest of The Policy (VNT) (NWARRN_TABLE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NWARRN_TABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.TypeOfIndemnity">
<summary>
Type of Indemnity. (NOPTION)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NOPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.BasePremium">
<summary>
Total annual base premium amount (NPREMIUMBAS)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPREMIUMBAS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.AgreedPremium">
<summary>
Premium Agreed by Saving Concept, according to the payment frequency (NPREMDEAL)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPREMDEAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.AnnualAgreedPremium">
<summary>
Premium Annual Agreed by Saving Concept (NPREMDEAL_ANU)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPREMDEAL_ANU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.MinimumPremium">
<summary>
Annual minimum premium amount (NPREMMIN)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NPREMMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.GuaranteedProfitability">
<summary>
Guaranteed Profitability (NINTWARR)..
</summary>
<remarks>Data-source is 'LIFE_LAST.NINTWARR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'LIFE_LAST.DEFFECDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.Compare(InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LifeLineOfBusinessCurrentValueItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValue.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValueCollection">
 <summary>
 Collection for LifeLineOfBusinessCurrentValue class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValueCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValueCollection.AddLifeLineOfBusinessCurrentValue">
 <summary>
 Add an instance of class 'LifeLineOfBusinessCurrentValue' in the LifeLineOfBusinessCurrentValueCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValueCollection.Compare(InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValueCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValueCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValueCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LifeLineOfBusinessCurrentValueCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance">
 <summary>
 Loans/advances of life.
 </summary>
<remarks>Data-source is 'LOANS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.CreateNewLoansLifeInsurance">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._CertificateID">
<summary>
Certificate ID subject to the loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._Key">
<summary>
Consecutive number identifying the record as unique for the policy-certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._TotalAmount">
<summary>
Loan total amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._Balance">
<summary>
Outstanding balance of the loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._InterestRate">
<summary>
Interest percentage applied to the loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._LoanEffectiveDate">
<summary>
Effective date of the advance payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._PaymentOrder">
<summary>
Number of the payment order to pay the loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._TaxAmount">
<summary>
Tax amount applied to the loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._NextBilling">
<summary>
Date of next billing.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._AmountOfCapitalizedInterest">
<summary>
Amount of capitalized interest.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._Agency">
<summary>
Agency where the transaction was made.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._AmountOfLoanLocalCurrency">
<summary>
Amount of loan / advance expressed in local currency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._NLOANSTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance._DPOSTED">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LOANS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LOANS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'LOANS.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.CertificateID">
<summary>
Certificate ID subject to the loan. (NCERTIF)..
</summary>
<remarks>Data-source is 'LOANS.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.Key">
<summary>
Consecutive number identifying the record as unique for the policy-certificate. (NCODE)..
</summary>
<remarks>Data-source is 'LOANS.NCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.TotalAmount">
<summary>
Loan total amount. (NAMOUNT)..
</summary>
<remarks>Data-source is 'LOANS.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.Balance">
<summary>
Outstanding balance of the loan. (NBALANCE)..
</summary>
<remarks>Data-source is 'LOANS.NBALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LOANS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.InterestRate">
<summary>
Interest percentage applied to the loan. (NINTEREST)..
</summary>
<remarks>Data-source is 'LOANS.NINTEREST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.LoanEffectiveDate">
<summary>
Effective date of the advance payment. (DLOAN_DATE)..
</summary>
<remarks>Data-source is 'LOANS.DLOAN_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LOANS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.PaymentOrder">
<summary>
Number of the payment order to pay the loan. (NREQUEST_NU)..
</summary>
<remarks>Data-source is 'LOANS.NREQUEST_NU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.TaxAmount">
<summary>
Tax amount applied to the loan. (NAMOTAX)..
</summary>
<remarks>Data-source is 'LOANS.NAMOTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.NextBilling">
<summary>
Date of next billing. (DNEXTRECEIPT)..
</summary>
<remarks>Data-source is 'LOANS.DNEXTRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.AmountOfCapitalizedInterest">
<summary>
Amount of capitalized interest. (NINTERESTCAP)..
</summary>
<remarks>Data-source is 'LOANS.NINTERESTCAP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.Agency">
<summary>
Agency where the transaction was made. (NAGENCY)..
</summary>
<remarks>Data-source is 'LOANS.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.AmountOfLoanLocalCurrency">
<summary>
Amount of loan / advance expressed in local currency (NAMOUNTLOC)..
</summary>
<remarks>Data-source is 'LOANS.NAMOUNTLOC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.NLOANSTYPE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LOANS.NLOANSTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.DPOSTED">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'LOANS.DPOSTED'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.Compare(InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="LoansLifeInsuranceItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsurance.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsuranceCollection">
 <summary>
 Collection for LoansLifeInsurance class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsuranceCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsuranceCollection.AddLoansLifeInsurance">
 <summary>
 Add an instance of class 'LoansLifeInsurance' in the LoansLifeInsuranceCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsuranceCollection.Compare(InMotionGIT.Policy.Entity.Contracts.LoansLifeInsuranceCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsuranceCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsuranceCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.LoansLifeInsuranceCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness">
 <summary>
 Specifics of the machinery branch breakage.
 </summary>
<remarks>Data-source is 'MACHINE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.CreateNewMachineryLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._CancellationCode">
<summary>
Code of cancellation of the specific information record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._Premium">
<summary>
Certificate premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._Division">
<summary>
Code of the &#34;division&#34; within the group
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._TransactionNumber">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'MACHINE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'MACHINE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'MACHINE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'MACHINE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'MACHINE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'MACHINE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'MACHINE.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'MACHINE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'MACHINE.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'MACHINE.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.CancellationCode">
<summary>
Code of cancellation of the specific information record. (NNULLCODE)..
</summary>
<remarks>Data-source is 'MACHINE.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'MACHINE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.Premium">
<summary>
Certificate premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'MACHINE.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.Division">
<summary>
Code of the &#34;division&#34; within the group (NGROUP)..
</summary>
<remarks>Data-source is 'MACHINE.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'MACHINE.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'MACHINE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.TransactionNumber">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'MACHINE.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'MACHINE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'MACHINE.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'MACHINE.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="MachineryLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusinessCollection">
 <summary>
 Collection for MachineryLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusinessCollection.AddMachineryLineOfBusiness">
 <summary>
 Add an instance of class 'MachineryLineOfBusiness' in the MachineryLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MachineryLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase">
 <summary>
 Case massive load - Address
 </summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.CreateNewMassiveLoadAddressCase">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._SubscriptionCaseType">
<summary>
Type of subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._ConsecutiveOfAddressIdentification">
<summary>
Consecutive of address identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._RecordOwner">
<summary>
Owner of the record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._AddressType">
<summary>
Address type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._ClientIdOfTheRegister">
<summary>
Client Id of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._AddressStreetUrl">
<summary>
Address - Street - URL
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._AddressStreet">
<summary>
Address / Street
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._StructureNumber">
<summary>
Number of the building in the street
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._Floor">
<summary>
Floor
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._ApartmentNumber">
<summary>
Apartment Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._ZipCode">
<summary>
Zip code associated to the address
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._StateCode">
<summary>
Code of the state or province
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._CityZipCode">
<summary>
City code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._MunicipalityCode">
<summary>
Code of the municipality
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._CompleteAddress">
<summary>
Complete address
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._Email">
<summary>
Email
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._NotEmailJustification">
<summary>
Indicates the justification for not to inform an email
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.SubscriptionCaseType">
<summary>
Type of subscription case (UNDEWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.UNDEWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification (NSEQUENCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.ConsecutiveOfAddressIdentification">
<summary>
Consecutive of address identification (NSEQADDRESS)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NSEQADDRESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.RecordOwner">
<summary>
Owner of the record (NRECOWNER)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NRECOWNER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.AddressType">
<summary>
Address type (SRECTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SRECTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.ClientIdOfTheRegister">
<summary>
Client Id of the register (SCLIENTID)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SCLIENTID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.AddressStreetUrl">
<summary>
Address - Street - URL (SSTREET)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SSTREET'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.AddressStreet">
<summary>
Address / Street (SSTREET1)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SSTREET1'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.StructureNumber">
<summary>
Number of the building in the street (SBUILD)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SBUILD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.Floor">
<summary>
Floor (NFLOOR)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NFLOOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.ApartmentNumber">
<summary>
Apartment Number (SDEPARTMENT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SDEPARTMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.ZipCode">
<summary>
Zip code associated to the address (SZIP_CODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SZIP_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.StateCode">
<summary>
Code of the state or province (NPROVINCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.CityZipCode">
<summary>
City code (NLOCAL)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NLOCAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.MunicipalityCode">
<summary>
Code of the municipality (NMUNICIPALITY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NMUNICIPALITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.CompleteAddress">
<summary>
Complete address (SDESCADD)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SDESCADD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.Email">
<summary>
Email (SE_MAIL)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.SE_MAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.NotEmailJustification">
<summary>
Indicates the justification for not to inform an email (NNOTINFOREMAIL)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NNOTINFOREMAIL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADADDRESS.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.Compare(InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="MassiveLoadAddressCaseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCase.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCaseCollection">
 <summary>
 Collection for MassiveLoadAddressCase class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCaseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCaseCollection.AddMassiveLoadAddressCase">
 <summary>
 Add an instance of class 'MassiveLoadAddressCase' in the MassiveLoadAddressCaseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCaseCollection.Compare(InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCaseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCaseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCaseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadAddressCaseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase">
 <summary>
 Case massive load
 </summary>
<remarks>Data-source is 'CASEMASSLOAD'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.CreateNewMassiveLoadCase">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._DateOfTheDataLoading">
<summary>
Date of the data loading
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._UploadFileName">
<summary>
Upload file name
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._MasiveLoadingProcessInitialDate">
<summary>
Initial date of massive loading process
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._LoadStatus">
<summary>
Load status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase._MassiveLoadCertificateCasesCollection">
<summary>
Case Massive load - Certificate
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOAD.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.DateOfTheDataLoading">
<summary>
Date of the data loading (DPROCESSDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOAD.DPROCESSDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.UploadFileName">
<summary>
Upload file name (SFILENAME)..
</summary>
<remarks>Data-source is 'CASEMASSLOAD.SFILENAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.MasiveLoadingProcessInitialDate">
<summary>
Initial date of massive loading process (DMASSIVEPROCESS)..
</summary>
<remarks>Data-source is 'CASEMASSLOAD.DMASSIVEPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.LoadStatus">
<summary>
Load status (NLOADSTATUS)..
</summary>
<remarks>Data-source is 'CASEMASSLOAD.NLOADSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOAD.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOAD.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.NewMassiveLoadCertificateCasesCollectionInstance">
<summary>
Initializes the 'MassiveLoadCertificateCasesCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.NewMassiveLoadCertificateCaseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'MassiveLoadCertificateCasesCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'MassiveLoadCertificateCase' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.MassiveLoadCertificateCasesCollection">
<summary>
Case Massive load - Certificate collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.Compare(InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="MassiveLoadCaseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCase.LoadStatusDescription">
 <summary>
 Load status
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6857' on the table 'TABLE6857'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCaseCollection">
 <summary>
 Collection for MassiveLoadCase class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCaseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCaseCollection.AddMassiveLoadCase">
 <summary>
 Add an instance of class 'MassiveLoadCase' in the MassiveLoadCaseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCaseCollection.Compare(InMotionGIT.Policy.Entity.Contracts.MassiveLoadCaseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCaseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCaseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCaseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase">
 <summary>
 Case Massive load - Certificate
 </summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CreateNewMassiveLoadCertificateCase">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._SubscriptionCaseType">
<summary>
Type of subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CommercialStructureId">
<summary>
Commercial structure ID
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._GroupCode">
<summary>
Group code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._RiskSituation">
<summary>
Risk situation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._OriginalEffectDate">
<summary>
Original effective date of the Policy/Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._ApplicationDate">
<summary>
Date of application
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._ApplicationNumber">
<summary>
Application or quotation number that originated this policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._ApplicationIdentificator">
<summary>
Application identificator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._AutomaticPaymentIndicator">
<summary>
Indicator of automatic payments of premium from Bank Accounts or Credit Card
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._PaymentCodeMethod">
<summary>
Code of the payment method
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._MonthsOfPolicyDuration">
<summary>
Number of months of duration of the policy/certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._DirectDebitType">
<summary>
Type of direct debit
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CommerceNumber">
<summary>
Commerce number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._BankAccount">
<summary>
Number of the bank account
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._ClientCode">
<summary>
Client Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._BankCode">
<summary>
Code of the bank
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._DebitAuthNumber">
<summary>
Authorization number for the direct debit
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._UBC">
<summary>
Uniform bank code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._BankAccType">
<summary>
Type of bank account
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CreditCardNumber">
<summary>
Credit Card Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CreditCardType">
<summary>
Code of Credit Card Type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CreditCardExpirationDate">
<summary>
Expiration date of the credit card
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._DebitCardNumber">
<summary>
Debit Card Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._RowNumber">
<summary>
Number of the row
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._LoadStatus">
<summary>
Load status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._MasiveLoadingProcessInitialDate">
<summary>
Initial date of massive loading process
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CaseId">
<summary>
Identification of the subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._Montodeprimatotalanual">
<summary>
Amount of annual total premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._FrequencyTotalPremium">
<summary>
Amount of total premium by frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CaseMassiveLoadAdditionalInformationCollection">
<summary>
Case massive load - Additional information for commercial structures
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._MassiveLoadAddressCasesCollection">
<summary>
Case massive load - Address
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CaseMassiveLoadCoveragesCollection">
<summary>
Case massive load - Coverages
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._CaseMassiveLoadErrorsCollection">
<summary>
Case massive load - Errors
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase._MassiveLoadRolCasesColletion">
<summary>
Case Massive load - roles
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.SubscriptionCaseType">
<summary>
Type of subscription case (UNDEWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.UNDEWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification (NSEQUENCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CommercialStructureId">
<summary>
Commercial structure ID (NIDSTRUC)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NIDSTRUC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.GroupCode">
<summary>
Group code (NGROUP)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.RiskSituation">
<summary>
Risk situation (NSITUATION)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.OriginalEffectDate">
<summary>
Original effective date of the Policy/Certificate (DSTARTDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.ApplicationDate">
<summary>
Date of application (DPROPODAT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.DPROPODAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.ApplicationNumber">
<summary>
Application or quotation number that originated this policy (NPROPONUM)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.ApplicationIdentificator">
<summary>
Application identificator (SNUMFORM)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SNUMFORM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.AutomaticPaymentIndicator">
<summary>
Indicator of automatic payments of premium from Bank Accounts or Credit Card (SDIRIND)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SDIRIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.PaymentCodeMethod">
<summary>
Code of the payment method (NWAYPAY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NWAYPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.MonthsOfPolicyDuration">
<summary>
Number of months of duration of the policy/certificate (NDURATION)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NDURATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.DirectDebitType">
<summary>
Type of direct debit (STYP_DIRDEB)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.STYP_DIRDEB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CommerceNumber">
<summary>
Commerce number (NCOMMERNUM)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NCOMMERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.BankAccount">
<summary>
Number of the bank account (SACCOUNT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.ClientCode">
<summary>
Client Code (SCLIENT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.BankCode">
<summary>
Code of the bank (NBANKEXT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.DebitAuthNumber">
<summary>
Authorization number for the direct debit (SBANKAUTH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SBANKAUTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.UBC">
<summary>
Uniform bank code (SCBU)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SCBU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.BankAccType">
<summary>
Type of bank account (NTYP_ACC)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NTYP_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CreditCardNumber">
<summary>
Credit Card Number (SCREDI_CARD)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SCREDI_CARD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CreditCardType">
<summary>
Code of Credit Card Type (NTYP_CRECARD)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NTYP_CRECARD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CreditCardExpirationDate">
<summary>
Expiration date of the credit card (DCARDEXPIR)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.DCARDEXPIR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.DebitCardNumber">
<summary>
Debit Card Number (SDEBIT_CARD)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.SDEBIT_CARD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.RowNumber">
<summary>
Number of the row (NROW)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NROW'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.LoadStatus">
<summary>
Load status (NLOADSTATUS)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NLOADSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.MasiveLoadingProcessInitialDate">
<summary>
Initial date of massive loading process (DMASSIVEPROCESS)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.DMASSIVEPROCESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CaseId">
<summary>
Identification of the subscription case (UNDERWRITINGCASEID)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.UNDERWRITINGCASEID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.Montodeprimatotalanual">
<summary>
Amount of annual total premium (NPREMANUAL)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NPREMANUAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.FrequencyTotalPremium">
<summary>
Amount of total premium by frequency (NPREMIUM)..
</summary>
<remarks>Data-source is 'CASEMASSLOADCERTIF.NPREMIUM'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewCaseMassiveLoadAdditionalInformationCollectionInstance">
<summary>
Initializes the 'CaseMassiveLoadAdditionalInformationCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewCaseMassiveLoadAdditionalInformationItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CaseMassiveLoadAdditionalInformationCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CaseMassiveLoadAdditionalInformation' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CaseMassiveLoadAdditionalInformationCollection">
<summary>
Case massive load - Additional information for commercial structures collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewMassiveLoadAddressCasesCollectionInstance">
<summary>
Initializes the 'MassiveLoadAddressCasesCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewMassiveLoadAddressCaseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'MassiveLoadAddressCasesCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'MassiveLoadAddressCase' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.MassiveLoadAddressCasesCollection">
<summary>
Case massive load - Address collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewCaseMassiveLoadCoveragesCollectionInstance">
<summary>
Initializes the 'CaseMassiveLoadCoveragesCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewCaseMassiveLoadCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CaseMassiveLoadCoveragesCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CaseMassiveLoadCoverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CaseMassiveLoadCoveragesCollection">
<summary>
Case massive load - Coverages collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewCaseMassiveLoadErrorsCollectionInstance">
<summary>
Initializes the 'CaseMassiveLoadErrorsCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewCaseMassiveLoadErrorItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CaseMassiveLoadErrorsCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CaseMassiveLoadError' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.CaseMassiveLoadErrorsCollection">
<summary>
Case massive load - Errors collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewMassiveLoadRolCasesColletionInstance">
<summary>
Initializes the 'MassiveLoadRolCasesColletion' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.NewMassiveLoadRolCaseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'MassiveLoadRolCasesColletion', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'MassiveLoadRolCase' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.MassiveLoadRolCasesColletion">
<summary>
Case Massive load - roles collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.Compare(InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="MassiveLoadCertificateCaseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCase.LoadStatusDescription">
 <summary>
 Load status
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6857' on the table 'TABLE6857'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCaseCollection">
 <summary>
 Collection for MassiveLoadCertificateCase class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCaseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCaseCollection.AddMassiveLoadCertificateCase">
 <summary>
 Add an instance of class 'MassiveLoadCertificateCase' in the MassiveLoadCertificateCaseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCaseCollection.Compare(InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCaseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCaseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCaseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadCertificateCaseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase">
 <summary>
 Case Massive load - roles
 </summary>
<remarks>Data-source is 'CASEMASSLOADROLES'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.CreateNewMassiveLoadRolCase">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._SubscriptionCaseType">
<summary>
Type of subscription case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ClientRole">
<summary>
Role of the client in the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ClientIdOfTheRegister">
<summary>
Client Id of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._PersonType">
<summary>
Code of the person type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ClientName">
<summary>
First and middle name of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ClientFirstLastName">
<summary>
Last name of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ClientSecondLastName">
<summary>
Last name (2) of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._CompleteName">
<summary>
Complete name
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._LegalNameOfBusinessClient">
<summary>
Legal name of the business client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ClientDateOfBirth">
<summary>
Date of birth of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ClientGender">
<summary>
Gender of the client
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._MaritalStatus">
<summary>
Marital status of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._BeneficiarySharePercentage">
<summary>
Beneficiary share percentage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._BeneficiaryInsuredPersonRelationship">
<summary>
Beneficiary - Insured Person Relationship
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ClientSmokerIndicator">
<summary>
Smoker client indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._RiskType">
<summary>
Risk Type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._CaseMassiveLoadDocumentsCollection">
<summary>
Case massive load - Documents
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase._CaseMassiveLoadPhonesCollection">
<summary>
Case Massive Load Phones
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.SubscriptionCaseType">
<summary>
Type of subscription case (UNDEWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.UNDEWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ConsecutiveOfRegisterIdentification">
<summary>
Consecutive of register identification (NSEQUENCE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NSEQUENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientRole">
<summary>
Role of the client in the policy (NROLE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientRoleEnum">
<summary>
Role of the client in the policy
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientRoleEnumText">
<summary>
Role of the client in the policy
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientIdOfTheRegister">
<summary>
Client Id of the register (SCLIENTID)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SCLIENTID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.PersonType">
<summary>
Code of the person type (NPERSON_TYP)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NPERSON_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.PersonTypeEnum">
<summary>
Code of the person type
</summary>
<remarks>This property use a enumeration based on property 'PersonType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.PersonTypeEnumText">
<summary>
Code of the person type
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientName">
<summary>
First and middle name of the client (SFIRSTNAME)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SFIRSTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientFirstLastName">
<summary>
Last name of the client (SLASTNAME)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SLASTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientSecondLastName">
<summary>
Last name (2) of the client (SLASTNAME2)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SLASTNAME2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.CompleteName">
<summary>
Complete name (SCLIENAME)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SCLIENAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.LegalNameOfBusinessClient">
<summary>
Legal name of the business client (SLEGALNAME)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SLEGALNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientDateOfBirth">
<summary>
Date of birth of the client (DBIRTHDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.DBIRTHDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientGender">
<summary>
Gender of the client (SSEXCLIEN)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SSEXCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.MaritalStatus">
<summary>
Marital status of the client. (NCIVILSTA)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NCIVILSTA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.BeneficiarySharePercentage">
<summary>
Beneficiary share percentage (NPARTICIP)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.BeneficiaryInsuredPersonRelationship">
<summary>
Beneficiary - Insured Person Relationship (NRELATION)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NRELATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientSmokerIndicator">
<summary>
Smoker client indicator (SSMOKING)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.SSMOKING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientSmokerIndicatorEnum">
<summary>
Smoker client indicator
</summary>
<remarks>This property use a enumeration based on property 'ClientSmokerIndicator'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ClientSmokerIndicatorEnumText">
<summary>
Smoker client indicator
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.RiskType">
<summary>
Risk Type (NTYPERISK)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NTYPERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.RiskTypeEnum">
<summary>
Risk Type
</summary>
<remarks>This property use a enumeration based on property 'RiskType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.RiskTypeEnumText">
<summary>
Risk Type
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CASEMASSLOADROLES.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.NewCaseMassiveLoadDocumentsCollectionInstance">
<summary>
Initializes the 'CaseMassiveLoadDocumentsCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.NewCaseMassiveLoadDocumentItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CaseMassiveLoadDocumentsCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CaseMassiveLoadDocument' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.CaseMassiveLoadDocumentsCollection">
<summary>
Case massive load - Documents collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.NewCaseMassiveLoadPhonesCollectionInstance">
<summary>
Initializes the 'CaseMassiveLoadPhonesCollection' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.NewCaseMassiveLoadPhoneItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CaseMassiveLoadPhonesCollection', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CaseMassiveLoadPhone' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.CaseMassiveLoadPhonesCollection">
<summary>
Case Massive Load Phones collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.Compare(InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="MassiveLoadRolCaseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCase.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCaseCollection">
 <summary>
 Collection for MassiveLoadRolCase class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCaseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCaseCollection.AddMassiveLoadRolCase">
 <summary>
 Add an instance of class 'MassiveLoadRolCase' in the MassiveLoadRolCaseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCaseCollection.Compare(InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCaseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCaseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCaseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MassiveLoadRolCaseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Module">
 <summary>
 Modules of the policy.
 </summary>
<remarks>Data-source is 'MODULES'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.CreateNewModule">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._ChangesAreAllowed">
<summary>
It Indicates that changes are allowed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._FixedRate">
<summary>
Fixed rate for this module.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._RatingByModuleIndicator">
<summary>
Indicator of rating by module.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._InheritCharacteristicsModuleRemovedIndicator">
<summary>
It indicates that you want to inherit settings from the module coverage removed
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Module._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'MODULES.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'MODULES.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'MODULES.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'MODULES.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'MODULES.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'MODULES.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'MODULES.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'MODULES.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'MODULES.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'MODULES.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'MODULES.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.ChangesAreAllowed">
<summary>
It Indicates that changes are allowed. (SCHANGEI)..
</summary>
<remarks>Data-source is 'MODULES.SCHANGEI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'MODULES.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.FixedRate">
<summary>
Fixed rate for this module. (NPREMIRAT)..
</summary>
<remarks>Data-source is 'MODULES.NPREMIRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.RatingByModuleIndicator">
<summary>
Indicator of rating by module. (STYP_RAT)..
</summary>
<remarks>Data-source is 'MODULES.STYP_RAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Module.InheritCharacteristicsModuleRemovedIndicator">
<summary>
It indicates that you want to inherit settings from the module coverage removed (SINHERIT)..
</summary>
<remarks>Data-source is 'MODULES.SINHERIT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.Compare(InMotionGIT.Policy.Entity.Contracts.Module,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ModuleItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Module.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ModuleCollection">
 <summary>
 Collection for [Module] class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ModuleCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ModuleCollection.AddModule">
 <summary>
 Add an instance of class '[Module]' in the [Module]Collection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ModuleCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ModuleCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ModuleCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ModuleCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ModuleCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness">
 <summary>
 Details of the particular line of business multi risks.
 </summary>
<remarks>Data-source is 'MULTI_RISK'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.CreateNewMultiRiskLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NARTICLEFIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._ConstructionCategory">
<summary>
Category of insured risk construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NCL_RISKFIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NDET_RISKFIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._CancellationCode">
<summary>
Code of cancellation of the specific information record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._PremiumAmount">
<summary>
Certificate premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._Transaction">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._ClientID">
<summary>
Client code of the policy holder.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._Concatenation">
<summary>
Concatenation of the fields related to the business draft (nBusinessTy + nCommerGrp + nCodKind).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._SpecificDescription">
<summary>
Specific description of business draft.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._ConstructionClass">
<summary>
Class of construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._nCodKind">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._CIIUCode">
<summary>
CIIU Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._CommercialActivityCode">
<summary>
Commercial Activity Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._SquareMeterCode">
<summary>
CriteriaSquareMeterCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._SquareMeters">
<summary>
Square Meters
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._PreBillingIndicator">
<summary>
The anticipated billing is handled for the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NSISMICZONE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NFI_POLICYTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NINSURTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NNUMBEROFEMPLOYEES">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NINSURED">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NTHEFTCAPITAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NSECURITYMEN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NAREA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._SIND_FIDELITY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._SIND_ELECTRONIC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._SIND_MACHINE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._SIND_CONTRACTOR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NMONEY_TRANSIT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._NMONEY_PERMANENCE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._SRISKDESCRIPTION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'MULTI_RISK.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'MULTI_RISK.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NARTICLEFIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM (NARTICLE)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NARTICLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.ConstructionCategory">
<summary>
Category of insured risk construction. (SCATEGORY)..
</summary>
<remarks>Data-source is 'MULTI_RISK.SCATEGORY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NCL_RISKFIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM (NCL_RISK)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NCL_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'MULTI_RISK.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NDET_RISKFIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM (NDET_RISK)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NDET_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'MULTI_RISK.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued. (DISSUEDAT)..
</summary>
<remarks>Data-source is 'MULTI_RISK.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.CancellationCode">
<summary>
Code of cancellation of the specific information record. (NNULLCODE)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'MULTI_RISK.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.PremiumAmount">
<summary>
Certificate premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'MULTI_RISK.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.Transaction">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.ClientID">
<summary>
Client code of the policy holder. (SCLIENT)..
</summary>
<remarks>Data-source is 'MULTI_RISK.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.Concatenation">
<summary>
Concatenation of the fields related to the business draft (nBusinessTy + nCommerGrp + nCodKind). (SCOMPLCOD)..
</summary>
<remarks>Data-source is 'MULTI_RISK.SCOMPLCOD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SpecificDescription">
<summary>
Specific description of business draft. (SDESCBUSSI)..
</summary>
<remarks>Data-source is 'MULTI_RISK.SDESCBUSSI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.ConstructionClass">
<summary>
Class of construction. (NCONSTCAT)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NCONSTCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.nCodKind">
<summary>
.
</summary>
<remarks>Data-source is 'MULTI_RISK.NCODKIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'MULTI_RISK.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.CIIUCode">
<summary>
CIIU Code (NCIIU)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NCIIU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.CommercialActivityCode">
<summary>
Commercial Activity Code (NCOMMER_ACTIVITY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NCOMMER_ACTIVITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SquareMeterCode">
<summary>
CriteriaSquareMeterCode (NCRICODE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NCRICODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SquareMeters">
<summary>
Square Meters (NMETERS)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NMETERS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.PreBillingIndicator">
<summary>
The anticipated billing is handled for the policy (SPREBILLING)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.SPREBILLING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NSISMICZONE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NSISMICZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NFI_POLICYTYPE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NFI_POLICYTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NINSURTYPE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NINSURTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NNUMBEROFEMPLOYEES">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NNUMBEROFEMPLOYEES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NINSURED">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NINSURED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NTHEFTCAPITAL">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NTHEFTCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NSECURITYMEN">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NSECURITYMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NAREA">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NAREA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SIND_FIDELITY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.SIND_FIDELITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SIND_ELECTRONIC">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.SIND_ELECTRONIC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SIND_MACHINE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.SIND_MACHINE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SIND_CONTRACTOR">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.SIND_CONTRACTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NMONEY_TRANSIT">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NMONEY_TRANSIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.NMONEY_PERMANENCE">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.NMONEY_PERMANENCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SRISKDESCRIPTION">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'MULTI_RISK.SRISKDESCRIPTION'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="MultiRiskLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.CommercialActivityCodeDescription">
 <summary>
 Commercial Activity Code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9015'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusiness.SquareMeterCodeDescription">
 <summary>
 CriteriaSquareMeterCode
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6760' on the table 'TABLE6760'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusinessCollection">
 <summary>
 Collection for MultiRiskLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusinessCollection.AddMultiRiskLineOfBusiness">
 <summary>
 Add an instance of class 'MultiRiskLineOfBusiness' in the MultiRiskLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.MultiRiskLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction">
 <summary>
 Entries pending for billing.
 </summary>
<remarks>Data-source is 'OUT_MOVEME'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.CreateNewOutstandingBillingTransaction">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._EntryNumber">
<summary>
Number of the entry pending of billing.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._BillControlDigit">
<summary>
Bill control digit (used in policy modifications with changes in reinsurance)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._InsuredAmount">
<summary>
Sum insured amount related to the billing.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._ExchangeRate">
<summary>
Exchange rate of the entry to the local currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._EndingDate">
<summary>
Ending date of the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._PremiumAmount">
<summary>
Amount of premium of the bill.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._EntryStatus">
<summary>
Status of the billing entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._TaxAmount">
<summary>
Tax amount (related to the premium amount).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._BillOrigin">
<summary>
Transaction originating the bill
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._YearAndMonth">
<summary>
Year and month when the entry is billed for.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._BranchOffice">
<summary>
Code of the Branch Office
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._StateOrProvince">
<summary>
Code of the state or province.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._InsuranceArea">
<summary>
Insurance area (Life or P&#38;C).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._SourceMovement">
<summary>
Source Movement
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._Premiuminvoicenumber">
<summary>
Premium invoice number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._MultiplicationFactor">
<summary>
Multiplication factor
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._DivisionFactor">
<summary>
Division factor
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._NPAYNUMBE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._SPROCESS_IND">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction._OutstandingBillingTransactionsDetails">
<summary>
Details of entries pending for billing.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.EntryNumber">
<summary>
Number of the entry pending of billing. (NMOVNUMBE)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NMOVNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.BillControlDigit">
<summary>
Bill control digit (used in policy modifications with changes in reinsurance) (NDIGIT)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.InsuredAmount">
<summary>
Sum insured amount related to the billing. (NCAPITAL)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.ExchangeRate">
<summary>
Exchange rate of the entry to the local currency. (NEXCHANGE)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.EndingDate">
<summary>
Ending date of the entry. (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.PremiumAmount">
<summary>
Amount of premium of the bill. (NPREMIUM)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.EntryStatus">
<summary>
Status of the billing entry. (SSTATUS_MOV)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.SSTATUS_MOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.TaxAmount">
<summary>
Tax amount (related to the premium amount). (NTAXAMOU)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NTAXAMOU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.BillOrigin">
<summary>
Transaction originating the bill (NTRATYPEI)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NTRATYPEI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.YearAndMonth">
<summary>
Year and month when the entry is billed for. (NYEAR_MONTH)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NYEAR_MONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.BranchOffice">
<summary>
Code of the Branch Office (SZONE)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.SZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.StateOrProvince">
<summary>
Code of the state or province. (NPROVINCE)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.InsuranceArea">
<summary>
Insurance area (Life or P&#38;C). (NINSUR_AREA)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NINSUR_AREA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.SourceMovement">
<summary>
Source Movement (NORIGI)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NORIGI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.Premiuminvoicenumber">
<summary>
Premium invoice number (NRECEIPT)..
</summary>
<remarks>Data-source is 'OUT_MOVEME.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.MultiplicationFactor">
<summary>
Multiplication factor (NMULTIPLY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OUT_MOVEME.NMULTIPLY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.DivisionFactor">
<summary>
Division factor (NDIVIDE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OUT_MOVEME.NDIVIDE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.NPAYNUMBE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OUT_MOVEME.NPAYNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.SPROCESS_IND">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OUT_MOVEME.SPROCESS_IND'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.NewOutstandingBillingTransactionsDetailsInstance">
<summary>
Initializes the 'OutstandingBillingTransactionsDetails' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.NewOutstandingBillingTransactionsDetailItem(System.Boolean)">
<summary>
Add a new item to the collection of 'OutstandingBillingTransactionsDetails', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'OutstandingBillingTransactionsDetail' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.OutstandingBillingTransactionsDetails">
<summary>
Details of entries pending for billing. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.Compare(InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="OutstandingBillingTransactionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransaction.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionCollection">
 <summary>
 Collection for OutstandingBillingTransaction class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionCollection.AddOutstandingBillingTransaction">
 <summary>
 Add an instance of class 'OutstandingBillingTransaction' in the OutstandingBillingTransactionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionCollection.Compare(InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail">
 <summary>
 Details of entries pending for billing.
 </summary>
<remarks>Data-source is 'OUT_PREMIU'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.CreateNewOutstandingBillingTransactionsDetail">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._EntryNumberPendingOfBilling">
<summary>
Number of the entry pending of billing.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._BillControlDigit">
<summary>
Bill control digit (used in policy modifications with changes in reinsurance)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._ConsecutiveNumber">
<summary>
Consecutive number of detail record for a premium bill.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._AddsToObtainInsuredAmount">
<summary>
Indicator of the addition to obtain the sum insured
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._TypeOfDetailRecord">
<summary>
Type of premium detail record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._BillingItem">
<summary>
Billing item.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._CodeOfDetailBilled">
<summary>
Code of the premium detail billed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._SolvencyMarginClass">
<summary>
Classification code for the solvency margin.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._InsuredAmount">
<summary>
Sum insured amount related to the billing.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._CommissionPercentage">
<summary>
Commission percentage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._CommisionAmount">
<summary>
Commission amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._BilledPremium">
<summary>
Premium amount billed for in the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._TaxAmount">
<summary>
Tax amount (related to the premium amount).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._StateOrProvince">
<summary>
Code of the state or province.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._PremiumAmount">
<summary>
Premium amount according to the policy effective period (maximum 1 year).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._CommissionAmount">
<summary>
Commission amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._AnnualPremium">
<summary>
Annual premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._AddsToObtainBaseForTaxes">
<summary>
Indicator of the addition to obtain taxes
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._AnnualCommissionAmount">
<summary>
Annual commission amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._TaxablePremium">
<summary>
Amount of the detail (taxable).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._ExemptPremium">
<summary>
Amount of the detail (exempt).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._TaxAmount2">
<summary>
Tax amount (related to the premium amount).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._CoverageExtraPremium">
<summary>
Total amount of surcharge for the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._DiscountAmount">
<summary>
Discount amount related to the premium of coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._RecordIdentifierNumber">
<summary>
Record identifier number (NID_BILL), which is associated the Rec / Desc / Imp
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail._NMODULEC">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.EntryNumberPendingOfBilling">
<summary>
Number of the entry pending of billing. (NMOVNUMBE)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NMOVNUMBE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.BillControlDigit">
<summary>
Bill control digit (used in policy modifications with changes in reinsurance) (NDIGIT)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.ConsecutiveNumber">
<summary>
Consecutive number of detail record for a premium bill. (NID_BILL)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NID_BILL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.AddsToObtainInsuredAmount">
<summary>
Indicator of the addition to obtain the sum insured (SADDSUINI)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.SADDSUINI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.TypeOfDetailRecord">
<summary>
Type of premium detail record. (STYPE_DETAI)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.STYPE_DETAI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.BillingItem">
<summary>
Billing item. (NBILL_ITEM)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NBILL_ITEM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.CodeOfDetailBilled">
<summary>
Code of the premium detail billed. (NCODE_DETAI)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NCODE_DETAI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.SolvencyMarginClass">
<summary>
Classification code for the solvency margin. (NBRANCH_EST)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NBRANCH_EST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.ReinsuranceLineOfBusiness">
<summary>
Code of the line of business for reinsurance. (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.InsuredAmount">
<summary>
Sum insured amount related to the billing. (NCAPITAL)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.CommissionPercentage">
<summary>
Commission percentage. (NCOMMI_RATE)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NCOMMI_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.CommisionAmount">
<summary>
Commission amount. (NCOMMISION)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NCOMMISION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.BilledPremium">
<summary>
Premium amount billed for in the entry. (NPREMIUM)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.TaxAmount">
<summary>
Tax amount (related to the premium amount). (NTAX)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.StateOrProvince">
<summary>
Code of the state or province. (NPROVINCIE)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NPROVINCIE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.PremiumAmount">
<summary>
Premium amount according to the policy effective period (maximum 1 year). (NPREM_ANU)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NPREM_ANU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.CommissionAmount">
<summary>
Commission amount. (NCOM_ANU)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NCOM_ANU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.AnnualPremium">
<summary>
Annual premium amount. (NPREMANUAL)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NPREMANUAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.AddsToObtainBaseForTaxes">
<summary>
Indicator of the addition to obtain taxes (SADDTAX)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.SADDTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.AnnualCommissionAmount">
<summary>
Annual commission amount. (NCOMANUAL)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NCOMANUAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.TaxablePremium">
<summary>
Amount of the detail (taxable). (NPREMIUMA)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NPREMIUMA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.ExemptPremium">
<summary>
Amount of the detail (exempt). (NPREMIUME)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NPREMIUME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.TaxAmount2">
<summary>
Tax amount (related to the premium amount). (NTAXAMOUNT)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NTAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.CoverageExtraPremium">
<summary>
Total amount of surcharge for the coverage. (NRECAMOUNT)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NRECAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.DiscountAmount">
<summary>
Discount amount related to the premium of coverage. (NDESCAMOUNT)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NDESCAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.RecordIdentifierNumber">
<summary>
Record identifier number (NID_BILL), which is associated the Rec / Desc / Imp (NREL_IDBILL)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.NREL_IDBILL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'OUT_PREMIU.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.NMODULEC">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OUT_PREMIU.NMODULEC'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.Compare(InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="OutstandingBillingTransactionsDetailItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetail.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetailCollection">
 <summary>
 Collection for OutstandingBillingTransactionsDetail class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetailCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetailCollection.AddOutstandingBillingTransactionsDetail">
 <summary>
 Add an instance of class 'OutstandingBillingTransactionsDetail' in the OutstandingBillingTransactionsDetailCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetailCollection.Compare(InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetailCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetailCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetailCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.OutstandingBillingTransactionsDetailCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy">
 <summary>
 Particular data of a póliza
 </summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.CreateNewParticularDataOfaPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._CodeTypeDefinition">
<summary>
Code type definition
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._Effectdate">
<summary>
Date from which the record is valid
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._Type">
<summary>
Attribute type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._Value">
<summary>
Value assigned to the coverage attribute
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._CancellationDatev">
<summary>
Date when the record is null
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._UpdateTimeStamp">
<summary>
Computer date Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.CodeTypeDefinition">
<summary>
Code type definition (NDEFTYPE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.NDEFTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.Effectdate">
<summary>
Date from which the record is valid (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.Type">
<summary>
Attribute type (NTYPEATTRIBUT)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.NTYPEATTRIBUT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.Value">
<summary>
Value assigned to the coverage attribute (SVALUE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.SVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.CancellationDatev">
<summary>
Date when the record is null (DNULLDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.UpdateTimeStamp">
<summary>
Computer date Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPECIFIC_FIELD_POL.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ParticularDataOfaPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.CodeTypeDefinitionDescription">
 <summary>
 Code type definition
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6786'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicy.TypeDescription">
 <summary>
 Attribute type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE360' on the table 'TABLE360'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicyCollection">
 <summary>
 Collection for ParticularDataOfaPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicyCollection.AddParticularDataOfaPolicy">
 <summary>
 Add an instance of class 'ParticularDataOfaPolicy' in the ParticularDataOfaPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ParticularDataOfaPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy">
 <summary>
 PaymentAgreementByPolicy
 </summary>
<remarks>Data-source is 'AGREEMENT_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.CreateNewPaymentAgreementByPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._ClientID">
<summary>
Code identifying a client associated with the agreement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._AgreementCode">
<summary>
Agreement Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._CommerceNumber">
<summary>
Number of the commerce
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._CodeOfExpirationCycle">
<summary>
Code of the expiration cycle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._CodeExpirationRule">
<summary>
Code of the expiration rule
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.ClientID">
<summary>
Code identifying a client associated with the agreement. (SCLIENT)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.AgreementCode">
<summary>
Agreement Code (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'AGREEMENT_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.CommerceNumber">
<summary>
Number of the commerce (NCOMMERNUM)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT_POL.NCOMMERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.CodeOfExpirationCycle">
<summary>
Code of the expiration cycle (NEXPCYCLE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT_POL.NEXPCYCLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.CodeExpirationRule">
<summary>
Code of the expiration rule (nExpirRule)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'AGREEMENT_POL.nExpirRule'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PaymentAgreementByPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicyCollection">
 <summary>
 Collection for PaymentAgreementByPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicyCollection.AddPaymentAgreementByPolicy">
 <summary>
 Add an instance of class 'PaymentAgreementByPolicy' in the PaymentAgreementByPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentAgreementByPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution">
 <summary>
 Payment plan for monthly contributions
 </summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.CreateNewPaymentPlanForMonthlyContribution">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._LineOfBusiness">
<summary>
Code of The Line of Business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._InitialRange">
<summary>
Initial range of year when the policy is
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._ContributionMonth">
<summary>
Month when the contribution must be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._AgreedPremiun">
<summary>
Agreed premium of the month
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.LineOfBusiness">
<summary>
Code of The Line of Business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.InitialRange">
<summary>
Initial range of year when the policy is (NYEAR_INI)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NYEAR_INI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.ContributionMonth">
<summary>
Month when the contribution must be applied. (NMONTH)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.AgreedPremiun">
<summary>
Agreed premium of the month (NAMOUNTDEP_AUX)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NAMOUNTDEP_AUX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.Compare(InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PaymentPlanForMonthlyContributionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContribution.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContributionCollection">
 <summary>
 Collection for PaymentPlanForMonthlyContribution class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContributionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContributionCollection.AddPaymentPlanForMonthlyContribution">
 <summary>
 Add an instance of class 'PaymentPlanForMonthlyContribution' in the PaymentPlanForMonthlyContributionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContributionCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContributionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContributionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContributionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentPlanForMonthlyContributionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan">
 <summary>
 Payment plan for contributions
 </summary>
<remarks>Data-source is 'PER_DEPOSIT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.CreateNewPaymentsPlan">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._LowestLimitOfPolicyYear">
<summary>
Lowest limit for range of policy-year.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._HighestLimitOfPolicyYear">
<summary>
Highest limit for range of policy-year.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._ProjectedAnnualPayments">
<summary>
Estimated total amount of deposits (payments) during each year.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._ExtraordinaryAmountPolicyCurrencySpecificMonth">
<summary>
Amount extraordinary contribution in currency policy, applied to a specific month
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._MonthForExtraordinaryContribution">
<summary>
Month in which must be applied extraordinary contribution
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._PaymentFrequency">
<summary>
Code of the payment frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._AmountExtraPremiumForPeriod">
<summary>
Amount of extra premium for the period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._SimulatedWithdrawalAmountSspecificPeriod">
<summary>
Simulated withdrawal amount for a specific period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._SourceOfDeposit">
<summary>
Source code of deposit
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._OriginalAmount">
<summary>
Original amount of deposits (payments) during each year
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.LowestLimitOfPolicyYear">
<summary>
Lowest limit for range of policy-year. (NYEAR_INI)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NYEAR_INI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.HighestLimitOfPolicyYear">
<summary>
Highest limit for range of policy-year. (NYEAR_END)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NYEAR_END'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.ProjectedAnnualPayments">
<summary>
Estimated total amount of deposits (payments) during each year. (NAMOUNTDEP)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NAMOUNTDEP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.ExtraordinaryAmountPolicyCurrencySpecificMonth">
<summary>
Amount extraordinary contribution in currency policy, applied to a specific month (NAMOUNTDEP_AUX)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NAMOUNTDEP_AUX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.MonthForExtraordinaryContribution">
<summary>
Month in which must be applied extraordinary contribution (NMONTH)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.PaymentFrequency">
<summary>
Code of the payment frequency (NPAYFREQ)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.PaymentFrequencyEnum">
<summary>
Code of the payment frequency
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.AmountExtraPremiumForPeriod">
<summary>
Amount of extra premium for the period (NEXTPREM)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NEXTPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.SimulatedWithdrawalAmountSspecificPeriod">
<summary>
Simulated withdrawal amount for a specific period (NSURRENDER)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NSURRENDER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.SourceOfDeposit">
<summary>
Source code of deposit (NORIGIN)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.OriginalAmount">
<summary>
Original amount of deposits (payments) during each year (NAMOUNTDEP_ORIG)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'PER_DEPOSIT.NAMOUNTDEP_ORIG'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.Compare(InMotionGIT.Policy.Entity.Contracts.PaymentsPlan,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PaymentsPlanItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlan.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PaymentsPlanCollection">
 <summary>
 Collection for PaymentsPlan class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlanCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlanCollection.AddPaymentsPlan">
 <summary>
 Add an instance of class 'PaymentsPlan' in the PaymentsPlanCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlanCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PaymentsPlanCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PaymentsPlanCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlanCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PaymentsPlanCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH">
 <summary>
 
 </summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.CreateNewPER_DEPOSIT_MONTH">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._LineOfBusiness">
<summary>
Code of The Line of Business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._InitialRange">
<summary>
Initial range of year when the policy is
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._ContributionMonth">
<summary>
Month when the contribution must be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._AgreedPremiun">
<summary>
Agreed premium of the month
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.LineOfBusiness">
<summary>
Code of The Line of Business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.PolicyNumber">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.InitialRange">
<summary>
Initial range of year when the policy is (NYEAR_INI)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NYEAR_INI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.ContributionMonth">
<summary>
Month when the contribution must be applied. (NMONTH)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.AgreedPremiun">
<summary>
Agreed premium of the month (NAMOUNTDEP_AUX)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NAMOUNTDEP_AUX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PER_DEPOSIT_MONTH.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.Compare(InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PER_DEPOSIT_MONTHItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTH.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTHCollection">
 <summary>
 Collection for PER_DEPOSIT_MONTH class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTHCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTHCollection.AddPER_DEPOSIT_MONTH">
 <summary>
 Add an instance of class 'PER_DEPOSIT_MONTH' in the PER_DEPOSIT_MONTHCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTHCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTHCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTHCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTHCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PER_DEPOSIT_MONTHCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Policy">
 <summary>
 General information in a policy.
 </summary>
<remarks>Data-source is 'POLICY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.CreateNewPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CurrentAccountIndicator">
<summary>
It indicates that the policy has a current account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._SourceType">
<summary>
Type of source (direct, accepted coinsurance, accepted reinsurance).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CoinsuranceCededIndicator">
<summary>
Coinsurance ceded indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._TypeOfBillForGroups">
<summary>
Type of bill for groups.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._TypeOfReinsuranceForGroups">
<summary>
Type of reinsurance in group policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._TypeOfRenewalForGroups">
<summary>
Type of renewal for groups.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CommissionType">
<summary>
Types of commissions to be assigned to the policy (fixed, by table, none).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ReportingValuesIndicator">
<summary>
It indicates that the policy must report values.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DirectDebitBills">
<summary>
Bills to use Direct-Debit (all or only renewal)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._IndexationType">
<summary>
Indexation type (fixed factor, last
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._BillIDForLeadingCompany">
<summary>
Bill number in the leader company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DocumentNumber">
<summary>
Number of the notice by the leader company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PolicyIDForLeaderCompany">
<summary>
Number of the policy of the leader company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PolicyType">
<summary>
Policy type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OriginDocument">
<summary>
Type of Record (Application/Quotation) originating The Policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._AutomaticRenewal">
<summary>
Automatic renewal indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OptionToApplyIndexation">
<summary>
Option to apply indexation on the original sum insured or on the last year
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PolicyStatus">
<summary>
Policy status.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ThisPolicySubstitutesOthers">
<summary>
The policy to which the record pertains has replaced other policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OptionForClausesInGroups">
<summary>
It indicates how clauses will be processed when issuing the certificates
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OptionForExtraPremiumAndDiscountsInGroups">
<summary>
It indicates how the extra-premiums/discounts will be processed when issuing the certificates
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OptionOfCoveragesForGroups">
<summary>
It indicates how coverages will be processed when issuing the certificates
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PolicyWillNotBeAutomaticallyCancelledForNoPayment">
<summary>
This policy is not taken into account in the automatic process of policies cancellation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PolicyIncludedInPaymentAgreement">
<summary>
The policy is included in the payment agreement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ApplicationID">
<summary>
Number of application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._LastModificationDate">
<summary>
Date of last modification made to the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ApplicationCancellationDate">
<summary>
Date when the application or quotation is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OriginalEffectiveDate">
<summary>
Original effective date of the Policy/Certificate (first effective date).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._KeepUntil">
<summary>
Date until which the application or quotation may remain recorded in the system.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ApplicationDate">
<summary>
Date of application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NextBilling">
<summary>
Date of next billing.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CommissionAmount">
<summary>
Commission amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._BonusMalus">
<summary>
Percentage of bonus for no-claims in groups.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CommissionPercentage">
<summary>
Percentage of commission for this policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._IndexationFactor">
<summary>
Fixed indexation percentage of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._LeaderCommission">
<summary>
Commission percentage of the leader company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._Expenses">
<summary>
Percentage of administrative expenses.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ShareOfLeaderCompany">
<summary>
Percentage of share of the leader company in the insured risk .
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._MainProducerShare">
<summary>
Percentage of share of the main producer of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._AnnualPremium">
<summary>
Annual premium amount of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OwnShareInAcceptedRisks">
<summary>
Percentage of share on the accepted risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._MainProducer">
<summary>
Code of the main producer of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._LastCertificateIDAssigned">
<summary>
Number identifying the last certificate assigned to this policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NoteID">
<summary>
Number of the note containing the comments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._BeneficiaryNoteID">
<summary>
Number of the note defining the beneficiaries as per free text.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CommentsNoteID">
<summary>
Number of the note containing the comments related to the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._RenewalNoteID">
<summary>
Number of the note describing the conditions for renewal of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CoverageNoteID">
<summary>
Number of the text related to the coverage note.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ApplicationOrQuotationNumber">
<summary>
Application or quotation number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._MinimumNumberOfCertificates">
<summary>
Minimum number of certificates required.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._Transaction">
<summary>
Transaction generating the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._LastHistoryEntryNumber">
<summary>
Number of the last historical entry generated for the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OfficialPolicyID">
<summary>
Number of the policy for legal/official purposes.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._Copies">
<summary>
Default value for the number of copies to be printed for the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._LeaderCompany">
<summary>
Code of the leader company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ReasonForNoConversion">
<summary>
Code of the reason for non-conversion into policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DaysOfNoticeForCancellation">
<summary>
Number of days of notice of cancellation of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CancellationCode">
<summary>
Policy/Certificate Cancellation Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._BranchOffice">
<summary>
Code of the Branch Office
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._BranchOfficeAdministrating">
<summary>
Code of the branch office/office/zone in charge of administrating this policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._RatingTable">
<summary>
Code of the rating table used for the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._AmendingUser">
<summary>
Code of the user amending the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._Installments">
<summary>
Number of installments to pay the premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._QuotationType">
<summary>
Quotation type is normal.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._BillingOptions">
<summary>
Options of policy/certificate billing (prorate, short-term, by installments).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DaysBilledInFirstQuota">
<summary>
Number of days billed on the first installment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DaysBilledInNextQuotas">
<summary>
Number of days billed on the next installment
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CompanyCode">
<summary>
Code of the insurance company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._BranchOfficeOfCarrier">
<summary>
Code of the branch office of the carrier.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CarrierPolicyID">
<summary>
Code identifying the policy in the insurance company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._Agreement">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._TypeOfPayrollForQuotation">
<summary>
Type of payroll for the quotation (temporary or definitive).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._InnominatedPolicy">
<summary>
Indicator of &#39;innominated&#39; policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._BankassuranceIndicator">
<summary>
Indicator that the policy is a Bankassurance policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._GuaranteedUnderwritingLimitAmount">
<summary>
Amount of Guaranteed Underwriting Limit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._GuaranteendUnderwritingLimit">
<summary>
Indicator of calculation of Guaranteed Underwriting Limit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._Agency">
<summary>
Code of Agency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._OfficeCode">
<summary>
Code of Office.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._TypeOfBenefitDefinitionForGroups">
<summary>
Type of definition of benefits for groups (at Group level, division, certificate, etc.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ProducersForGroupOrByCertificate">
<summary>
It indicates whether the producers were assigned for the group or for every single certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CurrentAccountUse">
<summary>
Use of current account in the group (by group, certificate, division, etc.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CriteriaToDetermineDuplicationInUpload">
<summary>
Criteria to determine duplication in upload document (by ID of the client or by credit number).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NLOCAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._RenewalDatePolicy">
<summary>
Renewal date of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DaysReportingClaims">
<summary>
Days to reporting / casualty denounced
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._SMASSIVE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PrintingCertificatesCoverageIndicator">
<summary>
Indicator printing certificates of coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ReceiptOfGenerationIndicator">
<summary>
Receipt of generation indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._TypeOfMedicalEvaluation">
<summary>
Type of medical evaluation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._GracePeriod">
<summary>
Grace period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ProductClassLife">
<summary>
Product class life.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._nLeadYM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._TypeOfCalculationOfProvincialTaxes">
<summary>
Type of calculation of provincial taxes for groups
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._ProvincialTaxesHolder">
<summary>
Provincial taxes holder
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._AdjustmentApplicationType">
<summary>
Adjustment application type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NTYPE_PAY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._SAVOIDCOLLEC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._SAUTOCONDIFF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NNONROLPREM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._SCMP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._SCITICURP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NGROUPSUBTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NSELFADMINISTER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NSAMI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NDISTRIBPROFIT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NDIVIDENDFACTOR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NIBNRDIVTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NDIVIDENDS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._NCOMSCHEMETYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._TypeAccount">
<summary>
Type of account
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._StartingTimeExpirationDateFile">
<summary>
Starting time of expiration date file
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DataIndicatorPaymentBreakdownPrinting">
<summary>
Data indicator of payment breakdown for printing
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._IndicatorDataBrokerPrinting">
<summary>
Indicator data of the broker for printing
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._IndicatorDataCallCenterPrinting">
<summary>
Indicator data of the Call Center for printing
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._AgenteMissRght">
<summary>
Agente miss rght
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._UIDSPercent">
<summary>
UIDS percent
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._SREQUOTE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PayClaimMaxDay">
<summary>
Number of max days to pay claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DocumentMaxDay">
<summary>
Number of max days to be added document the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._AveragedRate">
<summary>
Indicator for use of the averaged rate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._IndExclusionProvision">
<summary>
Indicator exclusion of the portfolio provision process
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._IndProfitSharing">
<summary>
Profit sharing indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PercentagePremiumSS">
<summary>
Percentage of Premiums collected for profit sharing
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._PercentageClaimSS">
<summary>
Percentage of claims for profit sharing
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._IndAdjustBlanket">
<summary>
Adjust blanket indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._RiskInformations">
<summary>
Certificates of a Policy (general).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._Client_tmps">
<summary>
Temporary list of Clients (Group quotation).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CoInsurances">
<summary>
Distribution co-insurance in a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CoverageGroups">
<summary>
Coverages related with a group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._CoveragePolicies">
<summary>
Coverages related with a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._DiscountExtraPremiumTaxInPolicyLevels">
<summary>
Discounts / surcharges / taxes-defined in a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Policy._Groups">
<summary>
Groupings to use in a group policy.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'POLICY.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'POLICY.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'POLICY.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'POLICY.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate. (SCLIENT)..
</summary>
<remarks>Data-source is 'POLICY.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CurrentAccountIndicator">
<summary>
It indicates that the policy has a current account. (SACCOUNTI)..
</summary>
<remarks>Data-source is 'POLICY.SACCOUNTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.SourceType">
<summary>
Type of source (direct, accepted coinsurance, accepted reinsurance). (SBUSSITYP)..
</summary>
<remarks>Data-source is 'POLICY.SBUSSITYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CoinsuranceCededIndicator">
<summary>
Coinsurance ceded indicator. (SCOINSURI)..
</summary>
<remarks>Data-source is 'POLICY.SCOINSURI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfBillForGroups">
<summary>
Type of bill for groups. (SCOLINVOT)..
</summary>
<remarks>Data-source is 'POLICY.SCOLINVOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfReinsuranceForGroups">
<summary>
Type of reinsurance in group policies. (SCOLREINT)..
</summary>
<remarks>Data-source is 'POLICY.SCOLREINT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfRenewalForGroups">
<summary>
Type of renewal for groups. (SCOLTIMRE)..
</summary>
<remarks>Data-source is 'POLICY.SCOLTIMRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CommissionType">
<summary>
Types of commissions to be assigned to the policy (fixed, by table, none). (SCOMMITYP)..
</summary>
<remarks>Data-source is 'POLICY.SCOMMITYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CommissionTypeEnum">
<summary>
Types of commissions to be assigned to the policy (fixed, by table, none).
</summary>
<remarks>This property use a enumeration based on property 'CommissionType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CommissionTypeEnumText">
<summary>
Types of commissions to be assigned to the policy (fixed, by table, none).
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ReportingValuesIndicator">
<summary>
It indicates that the policy must report values. (SDECLARI)..
</summary>
<remarks>Data-source is 'POLICY.SDECLARI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DirectDebitBills">
<summary>
Bills to use Direct-Debit (all or only renewal) (SDIRDEBIT)..
</summary>
<remarks>Data-source is 'POLICY.SDIRDEBIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IndexationType">
<summary>
Indexation type (fixed factor, last (SINDEXTYP)..
</summary>
<remarks>Data-source is 'POLICY.SINDEXTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BillIDForLeadingCompany">
<summary>
Bill number in the leader company. (SLEADINVO)..
</summary>
<remarks>Data-source is 'POLICY.SLEADINVO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DocumentNumber">
<summary>
Number of the notice by the leader company. (SLEADNOTI)..
</summary>
<remarks>Data-source is 'POLICY.SLEADNOTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyIDForLeaderCompany">
<summary>
Number of the policy of the leader company. (SLEADPOLI)..
</summary>
<remarks>Data-source is 'POLICY.SLEADPOLI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyType">
<summary>
Policy type. (SPOLITYPE)..
</summary>
<remarks>Data-source is 'POLICY.SPOLITYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyTypeEnum">
<summary>
Policy type.
</summary>
<remarks>This property use a enumeration based on property 'PolicyType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyTypeEnumText">
<summary>
Policy type.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OriginDocument">
<summary>
Type of Record (Application/Quotation) originating The Policy. (SPROPO_CERT)..
</summary>
<remarks>Data-source is 'POLICY.SPROPO_CERT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.AutomaticRenewal">
<summary>
Automatic renewal indicator. (SRENEWAL)..
</summary>
<remarks>Data-source is 'POLICY.SRENEWAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionToApplyIndexation">
<summary>
Option to apply indexation on the original sum insured or on the last year (SREVALAPL)..
</summary>
<remarks>Data-source is 'POLICY.SREVALAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyStatus">
<summary>
Policy status. (SSTATUS_POL)..
</summary>
<remarks>Data-source is 'POLICY.SSTATUS_POL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyStatusEnum">
<summary>
Policy status.
</summary>
<remarks>This property use a enumeration based on property 'PolicyStatus'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyStatusEnumText">
<summary>
Policy status.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ThisPolicySubstitutesOthers">
<summary>
The policy to which the record pertains has replaced other policies. (SSUBSTITI)..
</summary>
<remarks>Data-source is 'POLICY.SSUBSTITI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionForClausesInGroups">
<summary>
It indicates how clauses will be processed when issuing the certificates (STYP_CLAUSE)..
</summary>
<remarks>Data-source is 'POLICY.STYP_CLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionForClausesInGroupsEnum">
<summary>
It indicates how clauses will be processed when issuing the certificates
</summary>
<remarks>This property use a enumeration based on property 'OptionForClausesInGroups'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionForClausesInGroupsEnumText">
<summary>
It indicates how clauses will be processed when issuing the certificates
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionForExtraPremiumAndDiscountsInGroups">
<summary>
It indicates how the extra-premiums/discounts will be processed when issuing the certificates (STYP_DISCXP)..
</summary>
<remarks>Data-source is 'POLICY.STYP_DISCXP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionForExtraPremiumAndDiscountsInGroupsEnum">
<summary>
It indicates how the extra-premiums/discounts will be processed when issuing the certificates
</summary>
<remarks>This property use a enumeration based on property 'OptionForExtraPremiumAndDiscountsInGroups'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionForExtraPremiumAndDiscountsInGroupsEnumText">
<summary>
It indicates how the extra-premiums/discounts will be processed when issuing the certificates
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionOfCoveragesForGroups">
<summary>
It indicates how coverages will be processed when issuing the certificates (STYP_MODULE)..
</summary>
<remarks>Data-source is 'POLICY.STYP_MODULE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionOfCoveragesForGroupsEnum">
<summary>
It indicates how coverages will be processed when issuing the certificates
</summary>
<remarks>This property use a enumeration based on property 'OptionOfCoveragesForGroups'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionOfCoveragesForGroupsEnumText">
<summary>
It indicates how coverages will be processed when issuing the certificates
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyWillNotBeAutomaticallyCancelledForNoPayment">
<summary>
This policy is not taken into account in the automatic process of policies cancellation. (SNONULL)..
</summary>
<remarks>Data-source is 'POLICY.SNONULL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyIncludedInPaymentAgreement">
<summary>
The policy is included in the payment agreement. (SCONCOLL)..
</summary>
<remarks>Data-source is 'POLICY.SCONCOLL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ApplicationID">
<summary>
Number of application. (SNUMFORM)..
</summary>
<remarks>Data-source is 'POLICY.SNUMFORM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.LastModificationDate">
<summary>
Date of last modification made to the policy/certificate. (DCHANGDAT)..
</summary>
<remarks>Data-source is 'POLICY.DCHANGDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'POLICY.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ApplicationCancellationDate">
<summary>
Date when the application or quotation is cancelled. (DDAT_NO_CON)..
</summary>
<remarks>Data-source is 'POLICY.DDAT_NO_CON'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OriginalEffectiveDate">
<summary>
Original effective date of the Policy/Certificate (first effective date). (DDATE_ORIGI)..
</summary>
<remarks>Data-source is 'POLICY.DDATE_ORIGI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'POLICY.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'POLICY.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'POLICY.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.KeepUntil">
<summary>
Date until which the application or quotation may remain recorded in the system. (DMAXIMUM_DA)..
</summary>
<remarks>Data-source is 'POLICY.DMAXIMUM_DA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'POLICY.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ApplicationDate">
<summary>
Date of application. (DPROPODAT)..
</summary>
<remarks>Data-source is 'POLICY.DPROPODAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NextBilling">
<summary>
Date of next billing. (DNEXTRECEIP)..
</summary>
<remarks>Data-source is 'POLICY.DNEXTRECEIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CommissionAmount">
<summary>
Commission amount. (NAMOUCOMM)..
</summary>
<remarks>Data-source is 'POLICY.NAMOUCOMM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'POLICY.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BonusMalus">
<summary>
Percentage of bonus for no-claims in groups. (NCOLCLADI)..
</summary>
<remarks>Data-source is 'POLICY.NCOLCLADI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CommissionPercentage">
<summary>
Percentage of commission for this policy. (NCOMMISSI)..
</summary>
<remarks>Data-source is 'POLICY.NCOMMISSI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IndexationFactor">
<summary>
Fixed indexation percentage of the policy (NINDEXFAC)..
</summary>
<remarks>Data-source is 'POLICY.NINDEXFAC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.LeaderCommission">
<summary>
Commission percentage of the leader company. (NLEADCOMI)..
</summary>
<remarks>Data-source is 'POLICY.NLEADCOMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Expenses">
<summary>
Percentage of administrative expenses. (NLEADEXPE)..
</summary>
<remarks>Data-source is 'POLICY.NLEADEXPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ShareOfLeaderCompany">
<summary>
Percentage of share of the leader company in the insured risk . (NLEADSHARE)..
</summary>
<remarks>Data-source is 'POLICY.NLEADSHARE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.MainProducerShare">
<summary>
Percentage of share of the main producer of the policy. (NPARTICIP)..
</summary>
<remarks>Data-source is 'POLICY.NPARTICIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.AnnualPremium">
<summary>
Annual premium amount of the policy. (NPREMIUM)..
</summary>
<remarks>Data-source is 'POLICY.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OwnShareInAcceptedRisks">
<summary>
Percentage of share on the accepted risk. (NSHARE)..
</summary>
<remarks>Data-source is 'POLICY.NSHARE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'POLICY.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.MainProducer">
<summary>
Code of the main producer of the policy. (NINTERMED)..
</summary>
<remarks>Data-source is 'POLICY.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.LastCertificateIDAssigned">
<summary>
Number identifying the last certificate assigned to this policy. (NLAST_CERTI)..
</summary>
<remarks>Data-source is 'POLICY.NLAST_CERTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NoteID">
<summary>
Number of the note containing the comments (NNOTE_ADEND)..
</summary>
<remarks>Data-source is 'POLICY.NNOTE_ADEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BeneficiaryNoteID">
<summary>
Number of the note defining the beneficiaries as per free text. (NNOTE_BENEF)..
</summary>
<remarks>Data-source is 'POLICY.NNOTE_BENEF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CommentsNoteID">
<summary>
Number of the note containing the comments related to the policy. (NNOTE_COMME)..
</summary>
<remarks>Data-source is 'POLICY.NNOTE_COMME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.RenewalNoteID">
<summary>
Number of the note describing the conditions for renewal of the policy. (NNOTE_CONDI)..
</summary>
<remarks>Data-source is 'POLICY.NNOTE_CONDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CoverageNoteID">
<summary>
Number of the text related to the coverage note. (NNOTE_COVER)..
</summary>
<remarks>Data-source is 'POLICY.NNOTE_COVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ApplicationOrQuotationNumber">
<summary>
Application or quotation number. (NPROPONUM)..
</summary>
<remarks>Data-source is 'POLICY.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.MinimumNumberOfCertificates">
<summary>
Minimum number of certificates required. (NQ_CERTIF)..
</summary>
<remarks>Data-source is 'POLICY.NQ_CERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Transaction">
<summary>
Transaction generating the entry. (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'POLICY.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.LastHistoryEntryNumber">
<summary>
Number of the last historical entry generated for the policy (policy_his). (NMOV_HISTOR)..
</summary>
<remarks>Data-source is 'POLICY.NMOV_HISTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OfficialPolicyID">
<summary>
Number of the policy for legal/official purposes. (NOFICIAL_P)..
</summary>
<remarks>Data-source is 'POLICY.NOFICIAL_P'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Copies">
<summary>
Default value for the number of copies to be printed for the policy. (NCOPIES)..
</summary>
<remarks>Data-source is 'POLICY.NCOPIES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.LeaderCompany">
<summary>
Code of the leader company. (NLEADCOMP)..
</summary>
<remarks>Data-source is 'POLICY.NLEADCOMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ReasonForNoConversion">
<summary>
Code of the reason for non-conversion into policy. (NNO_CONVERS)..
</summary>
<remarks>Data-source is 'POLICY.NNO_CONVERS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DaysOfNoticeForCancellation">
<summary>
Number of days of notice of cancellation of the policy. (NNOTICE)..
</summary>
<remarks>Data-source is 'POLICY.NNOTICE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CancellationCode">
<summary>
Policy/Certificate Cancellation Code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'POLICY.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BranchOffice">
<summary>
Code of the Branch Office (NOFFICE)..
</summary>
<remarks>Data-source is 'POLICY.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BranchOfficeAdministrating">
<summary>
Code of the branch office/office/zone in charge of administrating this policy. (NOFFICE_OWN)..
</summary>
<remarks>Data-source is 'POLICY.NOFFICE_OWN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.RatingTable">
<summary>
Code of the rating table used for the product. (NTARIFF)..
</summary>
<remarks>Data-source is 'POLICY.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.AmendingUser">
<summary>
Code of the user amending the policy/certificate. (NUSER_AMEND)..
</summary>
<remarks>Data-source is 'POLICY.NUSER_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'POLICY.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Installments">
<summary>
Number of installments to pay the premium. (NQUOTA)..
</summary>
<remarks>Data-source is 'POLICY.NQUOTA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.QuotationType">
<summary>
Quotation type is normal. (STYPE_PROP)..
</summary>
<remarks>Data-source is 'POLICY.STYPE_PROP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BillingOptions">
<summary>
Options of policy/certificate billing (prorate, short-term, by installments). (SPRORSHORT)..
</summary>
<remarks>Data-source is 'POLICY.SPRORSHORT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DaysBilledInFirstQuota">
<summary>
Number of days billed on the first installment. (NDAYSFQ)..
</summary>
<remarks>Data-source is 'POLICY.NDAYSFQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DaysBilledInNextQuotas">
<summary>
Number of days billed on the next installment (NDAYSSQ)..
</summary>
<remarks>Data-source is 'POLICY.NDAYSSQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CompanyCode">
<summary>
Code of the insurance company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'POLICY.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BranchOfficeOfCarrier">
<summary>
Code of the branch office of the carrier. (NOFFICEINS)..
</summary>
<remarks>Data-source is 'POLICY.NOFFICEINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CarrierPolicyID">
<summary>
Code identifying the policy in the insurance company. (SORIGINAL)..
</summary>
<remarks>Data-source is 'POLICY.SORIGINAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Agreement">
<summary>
Discount or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'POLICY.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfPayrollForQuotation">
<summary>
Type of payroll for the quotation (temporary or definitive). (STYPENOM)..
</summary>
<remarks>Data-source is 'POLICY.STYPENOM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.InnominatedPolicy">
<summary>
Indicator of &#39;innominated&#39; policy. (SNOPAYROLL)..
</summary>
<remarks>Data-source is 'POLICY.SNOPAYROLL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BankassuranceIndicator">
<summary>
Indicator that the policy is a Bankassurance policy. (SINSUBANK)..
</summary>
<remarks>Data-source is 'POLICY.SINSUBANK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.GuaranteedUnderwritingLimitAmount">
<summary>
Amount of Guaranteed Underwriting Limit. (NLEGAMOUNT)..
</summary>
<remarks>Data-source is 'POLICY.NLEGAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.GuaranteendUnderwritingLimit">
<summary>
Indicator of calculation of Guaranteed Underwriting Limit. (SLEG)..
</summary>
<remarks>Data-source is 'POLICY.SLEG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Agency">
<summary>
Code of Agency. (NAGENCY)..
</summary>
<remarks>Data-source is 'POLICY.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OfficeCode">
<summary>
Code of Office. (NOFFICEAGEN)..
</summary>
<remarks>Data-source is 'POLICY.NOFFICEAGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfBenefitDefinitionForGroups">
<summary>
Type of definition of benefits for groups (at Group level, division, certificate, etc. (SCOLTPRES)..
</summary>
<remarks>Data-source is 'POLICY.SCOLTPRES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfBenefitDefinitionForGroupsEnum">
<summary>
Type of definition of benefits for groups (at Group level, division, certificate, etc.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfBenefitDefinitionForGroups'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfBenefitDefinitionForGroupsEnumText">
<summary>
Type of definition of benefits for groups (at Group level, division, certificate, etc.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ProducersForGroupOrByCertificate">
<summary>
It indicates whether the producers were assigned for the group or for every single certificate. (SIND_COMM)..
</summary>
<remarks>Data-source is 'POLICY.SIND_COMM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CurrentAccountUse">
<summary>
Use of current account in the group (by group, certificate, division, etc. (SCURRACC)..
</summary>
<remarks>Data-source is 'POLICY.SCURRACC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CriteriaToDetermineDuplicationInUpload">
<summary>
Criteria to determine duplication in upload document (by ID of the client or by credit number). (NREPINSURED)..
</summary>
<remarks>Data-source is 'POLICY.NREPINSURED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CriteriaToDetermineDuplicationInUploadEnum">
<summary>
Criteria to determine duplication in upload document (by ID of the client or by credit number).
</summary>
<remarks>This property use a enumeration based on property 'CriteriaToDetermineDuplicationInUpload'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CriteriaToDetermineDuplicationInUploadEnumText">
<summary>
Criteria to determine duplication in upload document (by ID of the client or by credit number).
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NLOCAL">
<summary>
.
</summary>
<remarks>Data-source is 'POLICY.NLOCAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.RenewalDatePolicy">
<summary>
Renewal date of the policy (DDATERENOVA)..
</summary>
<remarks>Data-source is 'POLICY.DDATERENOVA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DaysReportingClaims">
<summary>
Days to reporting / casualty denounced (NCLAIM_NOTICE)..
</summary>
<remarks>Data-source is 'POLICY.NCLAIM_NOTICE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.SMASSIVE">
<summary>
.
</summary>
<remarks>Data-source is 'POLICY.SMASSIVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PrintingCertificatesCoverageIndicator">
<summary>
Indicator printing certificates of coverage (SREPPRINTCOV)..
</summary>
<remarks>Data-source is 'POLICY.SREPPRINTCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ReceiptOfGenerationIndicator">
<summary>
Receipt of generation indicator. (SRECEIPT_IND)..
</summary>
<remarks>Data-source is 'POLICY.SRECEIPT_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfMedicalEvaluation">
<summary>
Type of medical evaluation. (SDOCUTYP)..
</summary>
<remarks>Data-source is 'POLICY.SDOCUTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.GracePeriod">
<summary>
Grace period (NTERM_GRACE)..
</summary>
<remarks>Data-source is 'POLICY.NTERM_GRACE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ProductClassLife">
<summary>
Product class life. (NPRODCLAS)..
</summary>
<remarks>Data-source is 'POLICY.NPRODCLAS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.nLeadYM">
<summary>
.
</summary>
<remarks>Data-source is 'POLICY.NLEADYM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfCalculationOfProvincialTaxes">
<summary>
Type of calculation of provincial taxes for groups (SPROVTAX)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SPROVTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.ProvincialTaxesHolder">
<summary>
Provincial taxes holder (SHOLDERPROVTAX)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SHOLDERPROVTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.AdjustmentApplicationType">
<summary>
Adjustment application type (NADJAPPTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NADJAPPTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NTYPE_PAY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NTYPE_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.SAVOIDCOLLEC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SAVOIDCOLLEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.SAUTOCONDIFF">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SAUTOCONDIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NNONROLPREM">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NNONROLPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.SCMP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SCMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.SCITICURP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SCITICURP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NGROUPSUBTYPE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NGROUPSUBTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NSELFADMINISTER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NSELFADMINISTER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NSAMI">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NSAMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NDISTRIBPROFIT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NDISTRIBPROFIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NDIVIDENDFACTOR">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NDIVIDENDFACTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NIBNRDIVTYPE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NIBNRDIVTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NDIVIDENDS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NDIVIDENDS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.NCOMSCHEMETYPE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NCOMSCHEMETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeAccount">
<summary>
Type of account (NTYPEACCOUNT)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NTYPEACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.StartingTimeExpirationDateFile">
<summary>
Starting time of expiration date file (NHOUREXPIR)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NHOUREXPIR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DataIndicatorPaymentBreakdownPrinting">
<summary>
Data indicator of payment breakdown for printing (SINDATACOBRO)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SINDATACOBRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IndicatorDataBrokerPrinting">
<summary>
Indicator data of the broker for printing (SININTERMED)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SININTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IndicatorDataCallCenterPrinting">
<summary>
Indicator data of the Call Center for printing (SINCALLCENTER)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SINCALLCENTER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.AgenteMissRght">
<summary>
Agente miss rght (NAGENT_EMISR)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NAGENT_EMISR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.UIDSPercent">
<summary>
UIDS percent (NUDIS)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NUDIS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.SREQUOTE">
<summary>
.
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SREQUOTE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PayClaimMaxDay">
<summary>
Number of max days to pay claim (NCLAIM_PAY)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NCLAIM_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DocumentMaxDay">
<summary>
Number of max days to be added document the claim (NCLAIM_PRES)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NCLAIM_PRES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.AveragedRate">
<summary>
Indicator for use of the averaged rate (SMETHRATAV)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SMETHRATAV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IndExclusionProvision">
<summary>
Indicator exclusion of the portfolio provision process (SPROVISION)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SPROVISION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IndProfitSharing">
<summary>
Profit sharing indicator (SPROFITS_SHARING)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SPROFITS_SHARING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PercentagePremiumSS">
<summary>
Percentage of Premiums collected for profit sharing (NPERCENTPRE_SS)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NPERCENTPRE_SS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PercentageClaimSS">
<summary>
Percentage of claims for profit sharing (NPERCENTCLA_SS)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.NPERCENTCLA_SS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IndAdjustBlanket">
<summary>
Adjust blanket indicator (SBLANKET)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY.SBLANKET'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewRiskInformationsInstance">
<summary>
Initializes the 'RiskInformations' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewRiskInformationItem(System.Boolean)">
<summary>
Add a new item to the collection of 'RiskInformations', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'RiskInformation' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.RiskInformations">
<summary>
Certificates of a Policy (general). collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewClient_tmpsInstance">
<summary>
Initializes the 'Client_tmps' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewClient_tmpItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Client_tmps', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Client_tmp' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Client_tmps">
<summary>
Temporary list of Clients (Group quotation). collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewCoInsurancesInstance">
<summary>
Initializes the 'CoInsurances' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewCoInsuranceItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CoInsurances', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CoInsurance' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CoInsurances">
<summary>
Distribution co-insurance in a policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewCoverageGroupsInstance">
<summary>
Initializes the 'CoverageGroups' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewCoverageGroupItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CoverageGroups', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CoverageGroup' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CoverageGroups">
<summary>
Coverages related with a group. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewCoveragePoliciesInstance">
<summary>
Initializes the 'CoveragePolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewCoveragePolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CoveragePolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CoveragePolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CoveragePolicies">
<summary>
Coverages related with a policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewDiscountExtraPremiumTaxInPolicyLevelsInstance">
<summary>
Initializes the 'DiscountExtraPremiumTaxInPolicyLevels' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewDiscountExtraPremiumTaxInPolicyLevelItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DiscountExtraPremiumTaxInPolicyLevels', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DiscountExtraPremiumTaxInPolicyLevel' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.DiscountExtraPremiumTaxInPolicyLevels">
<summary>
Discounts / surcharges / taxes-defined in a policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewGroupsInstance">
<summary>
Initializes the 'Groups' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.NewGroupItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Groups', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Group' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.Groups">
<summary>
Groupings to use in a group policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.Compare(InMotionGIT.Policy.Entity.Contracts.Policy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Policy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.RecordTypeDescription">
 <summary>
 Type of Record.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5632'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfBillForGroupsDescription">
 <summary>
 Type of bill for groups.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE50'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfReinsuranceForGroupsDescription">
 <summary>
 Type of reinsurance in group policies.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE49'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfRenewalForGroupsDescription">
 <summary>
 Type of renewal for groups.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE25'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CommissionTypeDescription">
 <summary>
 Types of commissions to be assigned to the policy (fixed, by table, none).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE47'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.IndexationTypeDescription">
 <summary>
 Indexation type (fixed factor, last
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE46'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionToApplyIndexationDescription">
 <summary>
 Option to apply indexation on the original sum insured or on the last year
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE154'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PolicyStatusDescription">
 <summary>
 Policy status.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE181'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionForClausesInGroupsDescription">
 <summary>
 It indicates how clauses will be processed when issuing the certificates
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE92'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionForExtraPremiumAndDiscountsInGroupsDescription">
 <summary>
 It indicates how the extra-premiums/discounts will be processed when issuing the certificates
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE92'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OptionOfCoveragesForGroupsDescription">
 <summary>
 It indicates how coverages will be processed when issuing the certificates
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE92'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CancellationCodeDescription">
 <summary>
 Policy/Certificate Cancellation Code.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE13'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.BranchOfficeDescription">
 <summary>
 Code of the Branch Office
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.AgencyDescription">
 <summary>
 Code of Agency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5555'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.OfficeCodeDescription">
 <summary>
 Code of Office.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5556'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.TypeOfBenefitDefinitionForGroupsDescription">
 <summary>
 Type of definition of benefits for groups (at Group level, division, certificate, etc.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE92'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.CriteriaToDetermineDuplicationInUploadDescription">
 <summary>
 Criteria to determine duplication in upload document (by ID of the client or by credit number).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5677'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Policy.AdjustmentApplicationTypeDescription">
 <summary>
 Adjustment application type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6846' on the table 'TABLE6846'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyCollection">
 <summary>
 Collection for Policy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCollection.AddPolicy">
 <summary>
 Add an instance of class 'Policy' in the PolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount">
 <summary>
 Current account of the policy (only ActiveLife Policies).
 </summary>
<remarks>Data-source is 'ACCOUNT_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.CreateNewPolicyCheckingAccount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._PolicyValue">
<summary>
Policy value.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._SurrenderedAmount">
<summary>
Total amount of partial surrender made to the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._TotalFixedCharges">
<summary>
Total amount of fixed charges.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._CoverageCost">
<summary>
Total amount of the cost of coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._EarnedInterest">
<summary>
Total amount of earned interests.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._PaidNetPremiums">
<summary>
Total amount of paid net premiums.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._PaymentsTotalAmount">
<summary>
Total amount of the payments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._DateOfLastEntry">
<summary>
Date of the last entry in the current account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._LapseDate">
<summary>
Date in which the policy cash value of policy turned negative
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._DateOfLastPayment">
<summary>
Date of the last payment entered to the current account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._MonthForNextCalculation">
<summary>
Month of next calculation of the policy value.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._YearForNextCalculation">
<summary>
Year of next calculation of the policy value.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._FixedCost">
<summary>
Fixed cost to be charged.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._MonthToChargeFixedCost">
<summary>
Month when the fixed cost must be charged.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount._YearToChargeFixedCost">
<summary>
Year when the fixed cost must be charged.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.PolicyValue">
<summary>
Policy value. (NVALUEPOL)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NVALUEPOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.SurrenderedAmount">
<summary>
Total amount of partial surrender made to the policy (NAMOSURREN)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NAMOSURREN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.TotalFixedCharges">
<summary>
Total amount of fixed charges. (NFIXCHARGE)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NFIXCHARGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.CoverageCost">
<summary>
Total amount of the cost of coverage. (NCOVERCOST)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NCOVERCOST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.EarnedInterest">
<summary>
Total amount of earned interests. (NPROFIT)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NPROFIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.PaidNetPremiums">
<summary>
Total amount of paid net premiums. (NNETPAYS)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NNETPAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.PaymentsTotalAmount">
<summary>
Total amount of the payments. (NPAYS)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NPAYS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.DateOfLastEntry">
<summary>
Date of the last entry in the current account. (DLASTDATE)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.DLASTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.LapseDate">
<summary>
Date in which the policy cash value of policy turned negative (DVP_NEG)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.DVP_NEG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.DateOfLastPayment">
<summary>
Date of the last payment entered to the current account. (DLASTPAY)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.DLASTPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.MonthForNextCalculation">
<summary>
Month of next calculation of the policy value. (NNEXTMONTH)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NNEXTMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.YearForNextCalculation">
<summary>
Year of next calculation of the policy value. (NNEXTYEAR)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NNEXTYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.FixedCost">
<summary>
Fixed cost to be charged. (NDELTACHARGE)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NDELTACHARGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.MonthToChargeFixedCost">
<summary>
Month when the fixed cost must be charged. (NMONTHDC)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NMONTHDC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.YearToChargeFixedCost">
<summary>
Year when the fixed cost must be charged. (NYEARDC)..
</summary>
<remarks>Data-source is 'ACCOUNT_POL.NYEARDC'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PolicyCheckingAccountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccountCollection">
 <summary>
 Collection for PolicyCheckingAccount class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccountCollection.AddPolicyCheckingAccount">
 <summary>
 Add an instance of class 'PolicyCheckingAccount' in the PolicyCheckingAccountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccountCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyCheckingAccountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyHistory">
 <summary>
 History of a policy.
 </summary>
<remarks>Data-source is 'POLICY_HIS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CreateNewPolicyHistory">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._PolicyEntryNumber">
<summary>
Entry number in the history of a policy-certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._ClaimID">
<summary>
Claim number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CancelledEntry">
<summary>
The entry has been cancelled
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._BillNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._Transaction">
<summary>
Number of the transaction generating the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._TransactionType">
<summary>
Type of transaction performed on a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._dLedgerDat">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._OfficialPolicyID">
<summary>
Number of the policy for legal/official purposes.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._EndorsementType">
<summary>
Code of type of endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._ServiceOrder">
<summary>
Number of the service order.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._NoteID">
<summary>
Number of the note related to the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._ProcessedForCommissions">
<summary>
It indicates that it was processed by the commissions process of producers.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._RetroactiveEndorsementDate">
<summary>
Date of The Retroactive Endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._ApplicationOrQuotationNumber">
<summary>
Application or quotation number that originates the entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._Agency">
<summary>
Agency where the transaction was made.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._ReasonForOutstandingStatus">
<summary>
Reason why the policy/quotation/application is in outstanding status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._QuotationStatus">
<summary>
Status of the quotation/application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._ReasonForNoConversion">
<summary>
Code of the reason for non-conversion into policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._PolicyCartolaNumber">
<summary>
Number of the cartola of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CartolaNumber">
<summary>
Number of the cartola
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._PolicyOriginDestination">
<summary>
Policy Number origin / destination linking source and target certificates when a transfer of insured person becomes
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CertificateOriginDestination">
<summary>
Certificate Number origin / destination linking source and target certificates when a transfer of insured person becomes
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._PaymentFrequency">
<summary>
Code of the payment frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CancellationCode">
<summary>
Policy/Certificate Cancellation Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._sFile_report">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._LotProcess">
<summary>
Lot descripcion of The Process
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._ProcessKeyMovements">
<summary>
Key of the process that gives origin to the movement
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CodeSystemGenerated">
<summary>
Integrated system code that generated the request
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CodeReasonCancelation">
<summary>
Code of reason for cancellation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._OfficialPolicyNumber">
<summary>
Number of official policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._LastOfficialPolicyNumber">
<summary>
Last year policy number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._CauseofAmend">
<summary>
Reason for the type of endorsement
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._NSTAMPPROCESSED">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._NMOVVALIDATED">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._NRECEIPTYEAR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._SIND_QLICKVIEW">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'POLICY_HIS.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.PolicyEntryNumber">
<summary>
Entry number in the history of a policy-certificate. (NMOVEMENT)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NMOVEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'POLICY_HIS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.ClaimID">
<summary>
Claim number. (NCLAIM)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'POLICY_HIS.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CancelledEntry">
<summary>
The entry has been cancelled (SNULL_MOVE)..
</summary>
<remarks>Data-source is 'POLICY_HIS.SNULL_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'POLICY_HIS.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.BillNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.Transaction">
<summary>
Number of the transaction generating the entry. (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.TransactionType">
<summary>
Type of transaction performed on a policy. (NTYPE_HIST)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NTYPE_HIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.dLedgerDat">
<summary>
.
</summary>
<remarks>Data-source is 'POLICY_HIS.DLEDGERDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.OfficialPolicyID">
<summary>
Number of the policy for legal/official purposes. (NOFICIAL_P)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NOFICIAL_P'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.EndorsementType">
<summary>
Code of type of endorsement. (NTYPE_AMEND)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NTYPE_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.ServiceOrder">
<summary>
Number of the service order. (NSERV_ORDER)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NSERV_ORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.NoteID">
<summary>
Number of the note related to the entry. (NNOTENUM)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.ProcessedForCommissions">
<summary>
It indicates that it was processed by the commissions process of producers. (SINTERMEI)..
</summary>
<remarks>Data-source is 'POLICY_HIS.SINTERMEI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.RetroactiveEndorsementDate">
<summary>
Date of The Retroactive Endorsement. (DFER)..
</summary>
<remarks>Data-source is 'POLICY_HIS.DFER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.ApplicationOrQuotationNumber">
<summary>
Application or quotation number that originates the entry. (NPROPONUM)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.Agency">
<summary>
Agency where the transaction was made. (NAGENCY)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.ReasonForOutstandingStatus">
<summary>
Reason why the policy/quotation/application is in outstanding status (NWAIT_CODE)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NWAIT_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.QuotationStatus">
<summary>
Status of the quotation/application. (NSTATQUOTA)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NSTATQUOTA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.ReasonForNoConversion">
<summary>
Code of the reason for non-conversion into policy. (NNO_CONVERS)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NNO_CONVERS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.PolicyCartolaNumber">
<summary>
Number of the cartola of the policy (NCARTPOL)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NCARTPOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CartolaNumber">
<summary>
Number of the cartola (NNUMCART)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NNUMCART'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.PolicyOriginDestination">
<summary>
Policy Number origin / destination linking source and target certificates when a transfer of insured person becomes (NPOLREF)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NPOLREF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CertificateOriginDestination">
<summary>
Certificate Number origin / destination linking source and target certificates when a transfer of insured person becomes (NCERREF)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NCERREF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.PaymentFrequency">
<summary>
Code of the payment frequency (NPAYFREQ)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.PaymentFrequencyEnum">
<summary>
Code of the payment frequency
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CancellationCode">
<summary>
Policy/Certificate Cancellation Code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'POLICY_HIS.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.sFile_report">
<summary>
.
</summary>
<remarks>Data-source is 'POLICY_HIS.SFILE_REPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.LotProcess">
<summary>
Lot descripcion of The Process (SLOT)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.SLOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.ProcessKeyMovements">
<summary>
Key of the process that gives origin to the movement (SKEY)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CodeSystemGenerated">
<summary>
Integrated system code that generated the request (NSYSTEM)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.NSYSTEM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CodeReasonCancelation">
<summary>
Code of reason for cancellation (NREASON_CANCELL)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.NREASON_CANCELL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.OfficialPolicyNumber">
<summary>
Number of official policy (SOFFICIALPOL)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.SOFFICIALPOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.LastOfficialPolicyNumber">
<summary>
Last year policy number (SLASTOFFICIALPOL)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.SLASTOFFICIALPOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CauseofAmend">
<summary>
Reason for the type of endorsement (NCAUSE_AMEND)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.NCAUSE_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.NSTAMPPROCESSED">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.NSTAMPPROCESSED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.NMOVVALIDATED">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.NMOVVALIDATED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.NRECEIPTYEAR">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.NRECEIPTYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.SIND_QLICKVIEW">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'POLICY_HIS.SIND_QLICKVIEW'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyHistory._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyHistory,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PolicyHistoryItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.TransactionTypeDescription">
 <summary>
 Type of transaction performed on a policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE165'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.QuotationStatusDescription">
 <summary>
 Status of the quotation/application.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5526'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistory.CodeReasonCancelationDescription">
 <summary>
 Code of reason for cancellation
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6836' on the table 'TABLE6836'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyHistoryCollection">
 <summary>
 Collection for PolicyHistory class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistoryCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistoryCollection.AddPolicyHistory">
 <summary>
 Add an instance of class 'PolicyHistory' in the PolicyHistoryCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistoryCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyHistoryCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyHistoryCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistoryCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyHistoryCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation">
 <summary>
 Policy installation options.
 </summary>
<remarks>Data-source is 'OPT_POLICY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.CreateNewPolicyInstallation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._SalesOperation">
<summary>
Type of sales operation of the insurance company (direct or with intermediaries).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._SpecialProducer">
<summary>
Code of the producer used for direct sales.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._PrintClauseTextTogetherPolicydocument">
<summary>
It indicates that the text associated with the clause of a policy will be printed by the system together with the policy documents
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._SSTOCK_IND">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._SAAPVFormIntitution">
<summary>
Code of the institution of origin of SAAPV application form.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._WhenChargesApplyIndicator">
<summary>
Indicator when charges apply.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._VerifyRelationshipClientIntermediary">
<summary>
Verify client intermediary relationship
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._MaximunNumberOfFiles">
<summary>
Maximum number of files per batch, to send to stamp.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._MaximunNumberOfRows">
<summary>
Maximum number of rows by file, to send to stamp.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._SimulateIndicator">
<summary>
CFDI simulate indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._NALPHADIVRESERVE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._NGLOBEXPMINPERDI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation._NMAXNUMSEND">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'OPT_POLICY.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'OPT_POLICY.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'OPT_POLICY.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SalesOperation">
<summary>
Type of sales operation of the insurance company (direct or with intermediaries). (NPOLICYSALE)..
</summary>
<remarks>Data-source is 'OPT_POLICY.NPOLICYSALE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SpecialProducer">
<summary>
Code of the producer used for direct sales. (NINTERMED)..
</summary>
<remarks>Data-source is 'OPT_POLICY.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.PrintClauseTextTogetherPolicydocument">
<summary>
It indicates that the text associated with the clause of a policy will be printed by the system together with the policy documents (SCLAUSEIMP)..
</summary>
<remarks>Data-source is 'OPT_POLICY.SCLAUSEIMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SSTOCK_IND">
<summary>
.
</summary>
<remarks>Data-source is 'OPT_POLICY.SSTOCK_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SAAPVFormIntitution">
<summary>
Code of the institution of origin of SAAPV application form. (NINSTITUTION)..
</summary>
<remarks>Data-source is 'OPT_POLICY.NINSTITUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.WhenChargesApplyIndicator">
<summary>
Indicator when charges apply. (SDATE_APLY_CHARGE)..
</summary>
<remarks>Data-source is 'OPT_POLICY.SDATE_APLY_CHARGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.VerifyRelationshipClientIntermediary">
<summary>
Verify client intermediary relationship (NCLIINTREL)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OPT_POLICY.NCLIINTREL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.MaximunNumberOfFiles">
<summary>
Maximum number of files per batch, to send to stamp. (NMAXNUMFILES)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OPT_POLICY.NMAXNUMFILES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.MaximunNumberOfRows">
<summary>
Maximum number of rows by file, to send to stamp. (NMAXNUMROWS)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OPT_POLICY.NMAXNUMROWS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SimulateIndicator">
<summary>
CFDI simulate indicator. (SCFDI_SIMULATE)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OPT_POLICY.SCFDI_SIMULATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.NALPHADIVRESERVE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OPT_POLICY.NALPHADIVRESERVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.NGLOBEXPMINPERDI">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OPT_POLICY.NGLOBEXPMINPERDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.NMAXNUMSEND">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'OPT_POLICY.NMAXNUMSEND'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyInstallation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PolicyInstallationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallation.SalesOperationDescription">
 <summary>
 Type of sales operation of the insurance company (direct or with intermediaries).
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE696'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyInstallationCollection">
 <summary>
 Collection for PolicyInstallation class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallationCollection.AddPolicyInstallation">
 <summary>
 Add an instance of class 'PolicyInstallation' in the PolicyInstallationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallationCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyInstallationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyInstallationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyInstallationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement">
 <summary>
 Protection elements of the policy / certificate.
 </summary>
<remarks>Data-source is 'PROTECTION'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.CreateNewPolicyProtectionElement">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._ProtectionElement">
<summary>
Code of the Protection Element.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._CurrencyCode">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._DiscountAmount">
<summary>
Amount of discount because of element of protection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._DiscountPercentage">
<summary>
Percentage of discount because of element of protection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._MaximumDiscount">
<summary>
Maximum amount of discount to apply.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._MinimumDiscount">
<summary>
Minimum amount of discount to apply.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PROTECTION.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PROTECTION.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PROTECTION.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PROTECTION.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'PROTECTION.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.ProtectionElement">
<summary>
Code of the Protection Element. (NELEMENT)..
</summary>
<remarks>Data-source is 'PROTECTION.NELEMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PROTECTION.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.CurrencyCode">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PROTECTION.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.DiscountAmount">
<summary>
Amount of discount because of element of protection. (NDISCOUNT)..
</summary>
<remarks>Data-source is 'PROTECTION.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PROTECTION.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.DiscountPercentage">
<summary>
Percentage of discount because of element of protection. (NDISRATE)..
</summary>
<remarks>Data-source is 'PROTECTION.NDISRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.MaximumDiscount">
<summary>
Maximum amount of discount to apply. (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'PROTECTION.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.MinimumDiscount">
<summary>
Minimum amount of discount to apply. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'PROTECTION.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PROTECTION.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PROTECTION.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PolicyProtectionElementItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElement.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElementCollection">
 <summary>
 Collection for PolicyProtectionElement class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElementCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElementCollection.AddPolicyProtectionElement">
 <summary>
 Add an instance of class 'PolicyProtectionElement' in the PolicyProtectionElementCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElementCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElementCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElementCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElementCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyProtectionElementCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyWindow">
 <summary>
 Windows associated with a policy/certificate.
 </summary>
<remarks>Data-source is 'POLICY_WIN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.CreateNewPolicyWindow">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._ContentIndicators">
<summary>
Contents indicator vector (t one-alphanumeric characters elements).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._WindowsVector">
<summary>
Window Vector (Six-Alphanumeric Characters Elements).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PolicyWindow._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'POLICY_WIN.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'POLICY_WIN.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'POLICY_WIN.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'POLICY_WIN.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'POLICY_WIN.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'POLICY_WIN.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'POLICY_WIN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'POLICY_WIN.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'POLICY_WIN.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.ContentIndicators">
<summary>
Contents indicator vector (t one-alphanumeric characters elements). (SV_CONPOLIC)..
</summary>
<remarks>Data-source is 'POLICY_WIN.SV_CONPOLIC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.WindowsVector">
<summary>
Window Vector (Six-Alphanumeric Characters Elements). (SV_WINPOLIC)..
</summary>
<remarks>Data-source is 'POLICY_WIN.SV_WINPOLIC'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyWindow,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PolicyWindowItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindow.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PolicyWindowCollection">
 <summary>
 Collection for PolicyWindow class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindowCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindowCollection.AddPolicyWindow">
 <summary>
 Add an instance of class 'PolicyWindow' in the PolicyWindowCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindowCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PolicyWindowCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PolicyWindowCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindowCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PolicyWindowCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL">
 <summary>
 
 </summary>
<remarks>Data-source is 'PROJECTVUL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.CreateNewPROJECTVUL">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._TypeProyection">
<summary>
Proyection type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._YearOfThePolicy">
<summary>
Current year of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._CurrencyCode">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._PolicyValueOfProjectedProfitablity">
<summary>
Amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._AccumulatdAmount">
<summary>
Accumulated amount according to the payment schedule
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._SurrenderAvailableAmount">
<summary>
Available amount for surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._SurrenderAvailablemountAccordingInterest">
<summary>
Available amount for surrender according to the projected interest
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._InsuredAge">
<summary>
Age of the insured for the year of registration
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._DeathCoverageAmount">
<summary>
Death coverage for the year of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._PolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Amount of the policy value according to the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._SurrenderAvailableAmountAccordingProjection">
<summary>
Available amount for surrender expressed in the policy&#39;s currency using the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._DeathCoverageProjected">
<summary>
Death coverage for the year of the policy using the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._ExcessAmount">
<summary>
Amount related to the excess accounts
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._PremiumOfThePolicyValueOfProjectedProfitablity">
<summary>
Premium amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._SavingAmountOfThePolicyValueOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._PremiumPolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Amount of the premium of the policy value according to the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._SavingAmountOfThePolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the second percentage of projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._SourceAccount">
<summary>
Code of the source account (values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._RentabilityAmount">
<summary>
Amount of rentability as first rate projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._AmountChargesFirstProjection">
<summary>
Amount of charges and precargos as first rate projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._AmountPremiumFirstProjection">
<summary>
Amount of premium rate period as first projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._AmountRentabilitySecondProjection">
<summary>
Amount of rentability as second rate projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._AmountChargesSecondProyection">
<summary>
Amount of charges and precargos as second rate projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._AmountPremiumSecondProjection">
<summary>
Amount of premium rate period as second projection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL._PROJECTVUL_DETs">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.TypeProyection">
<summary>
Proyection type. (NTYPE_PRO)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NTYPE_PRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.YearOfThePolicy">
<summary>
Current year of the policy (NYEAR)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.CurrencyCode">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.PolicyValueOfProjectedProfitablity">
<summary>
Amount of the policy value according to the projected profitability (NVP)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.AccumulatdAmount">
<summary>
Accumulated amount according to the payment schedule (NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SurrenderAvailableAmount">
<summary>
Available amount for surrender. (NSURRAMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NSURRAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SurrenderAvailablemountAccordingInterest">
<summary>
Available amount for surrender according to the projected interest (NSURRAMOUNTL)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NSURRAMOUNTL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.InsuredAge">
<summary>
Age of the insured for the year of registration (NAGE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.DeathCoverageAmount">
<summary>
Death coverage for the year of the policy (NCAPITAL)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.PolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Amount of the policy value according to the second percentage of projected profitability (NVP2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SurrenderAvailableAmountAccordingProjection">
<summary>
Available amount for surrender expressed in the policy&#39;s currency using the second percentage of projected profitability (NSURRAMOUNT2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NSURRAMOUNT2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.DeathCoverageProjected">
<summary>
Death coverage for the year of the policy using the second percentage of projected profitability (NCAPITAL2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCAPITAL2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.ExcessAmount">
<summary>
Amount related to the excess accounts (NPREMIUM2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPREMIUM2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.PremiumOfThePolicyValueOfProjectedProfitablity">
<summary>
Premium amount of the policy value according to the projected profitability (NVP_NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP_NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SavingAmountOfThePolicyValueOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the projected profitability (NVP_SAVING)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP_SAVING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.PremiumPolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Amount of the premium of the policy value according to the second percentage of projected profitability (NVP2_NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP2_NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SavingAmountOfThePolicyValueOfSecondPercentageOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the second percentage of projected profitability (NVP2_SAVING)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NVP2_SAVING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SourceAccount">
<summary>
Code of the source account (values (NORIGIN)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.RentabilityAmount">
<summary>
Amount of rentability as first rate projection. (NRENTABILITY)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NRENTABILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.AmountChargesFirstProjection">
<summary>
Amount of charges and precargos as first rate projection. (NCHARG_AMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCHARG_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.AmountPremiumFirstProjection">
<summary>
Amount of premium rate period as first projection. (NPREM_AMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPREM_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.AmountRentabilitySecondProjection">
<summary>
Amount of rentability as second rate projection. (NRENTABILITY2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NRENTABILITY2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.AmountChargesSecondProyection">
<summary>
Amount of charges and precargos as second rate projection. (NCHARG_AMOUNT2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NCHARG_AMOUNT2'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.AmountPremiumSecondProjection">
<summary>
Amount of premium rate period as second projection. (NPREM_AMOUNT2)..
</summary>
<remarks>Data-source is 'PROJECTVUL.NPREM_AMOUNT2'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.NewPROJECTVUL_DETsInstance">
<summary>
Initializes the 'PROJECTVUL_DETs' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.NewPROJECTVUL_DETItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PROJECTVUL_DETs', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PROJECTVUL_DET' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.PROJECTVUL_DETs">
<summary>
 collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.Compare(InMotionGIT.Policy.Entity.Contracts.PROJECTVUL,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PROJECTVULItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PROJECTVULCollection">
 <summary>
 Collection for PROJECTVUL class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVULCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVULCollection.AddPROJECTVUL">
 <summary>
 Add an instance of class 'PROJECTVUL' in the PROJECTVULCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVULCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PROJECTVULCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVULCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVULCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVULCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET">
 <summary>
 
 </summary>
<remarks>Data-source is 'PROJECTVUL_DET'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.CreateNewPROJECTVUL_DET">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._CertificateID">
<summary>
Number identifying the Certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._TypeProyection">
<summary>
Type of proyection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._SourceAccount">
<summary>
Code of the source account (values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._YearOfThePolicy">
<summary>
Current year of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._PolicyCurrentMonth">
<summary>
Current month of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._ConsecutiveNumber">
<summary>
Consecutive Number identifying The Record as sole.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._EntryType">
<summary>
It indicates the type of entry
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._CoverageModule">
<summary>
Code of the module associated to the charge
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._TaxAmount">
<summary>
Tax amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._EntryTypeCurrentAccount">
<summary>
Type of entry of the current account.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._PolicyValueOfProjectedProfitablity">
<summary>
Amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._AccumulatdAmount">
<summary>
Accumulated amount according to the payment schedule
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._SurrenderAvailableAmount">
<summary>
Available amount for surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._RealAge">
<summary>
Real age of the insured person when he/she was first registered
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._ActuarialAge">
<summary>
Actuarial age of the insured person when she/he was first registered
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._InsuredAmount">
<summary>
Death coverage for the year of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._PremiumOfThePolicyValueOfProjectedProfitablity">
<summary>
Premium amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._SavingAmountOfThePolicyValueOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the projected profitability
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._BeforeInvestmentChargeIndicator">
<summary>
It indicates that The Charge or Credit must be applied before the investment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._ChargeCode">
<summary>
Charge Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._ChargeAmount">
<summary>
Charge amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._Premium">
<summary>
Premium amount of the guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._PurchaseCost">
<summary>
Amount of the purchase cost of the guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._Reserve">
<summary>
Reserve of guaranteed saving
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._TributaryBenefit">
<summary>
Amount of the tributary benefit
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._Rentability">
<summary>
Amount of guaranteed rentability.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._CapitalRisk">
<summary>
Amount of capital at risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET._PercentajeRateApplied">
<summary>
Percentage rate applied.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.CertificateID">
<summary>
Number identifying the Certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.TypeProyection">
<summary>
Type of proyection. (NTYPE_PRO)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NTYPE_PRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SourceAccount">
<summary>
Code of the source account (values (NORIGIN)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.YearOfThePolicy">
<summary>
Current year of the policy (NYEAR)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.PolicyCurrentMonth">
<summary>
Current month of the policy (NMONTH)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NMONTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.ConsecutiveNumber">
<summary>
Consecutive Number identifying The Record as sole. (NID)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.EntryType">
<summary>
It indicates the type of entry (SCREDIT)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.SCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.CoverageModule">
<summary>
Code of the module associated to the charge (NMODULEC)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.TaxAmount">
<summary>
Tax amount (NTAX)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.EntryTypeCurrentAccount">
<summary>
Type of entry of the current account. (NTYPE_MOVE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NTYPE_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.PolicyValueOfProjectedProfitablity">
<summary>
Amount of the policy value according to the projected profitability (NVP)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NVP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.AccumulatdAmount">
<summary>
Accumulated amount according to the payment schedule (NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SurrenderAvailableAmount">
<summary>
Available amount for surrender. (NSURRAMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NSURRAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.RealAge">
<summary>
Real age of the insured person when he/she was first registered (NAGE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.ActuarialAge">
<summary>
Actuarial age of the insured person when she/he was first registered (NAGE_REINSU)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NAGE_REINSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.InsuredAmount">
<summary>
Death coverage for the year of the policy (NCAPITAL)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.PremiumOfThePolicyValueOfProjectedProfitablity">
<summary>
Premium amount of the policy value according to the projected profitability (NVP_NPREMIUM)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NVP_NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SavingAmountOfThePolicyValueOfProjectedProfitability">
<summary>
Saving amount of the policy value according to the projected profitability (NVP_SAVING)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NVP_SAVING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.BeforeInvestmentChargeIndicator">
<summary>
It indicates that The Charge or Credit must be applied before the investment. (SPREINV)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.SPREINV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.ChargeCode">
<summary>
Charge Code (NLOAD_COD)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NLOAD_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.ChargeAmount">
<summary>
Charge amount (NCHARG_AMOUNT)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCHARG_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.Premium">
<summary>
Premium amount of the guaranteed saving (NGUARSAV_PREM)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NGUARSAV_PREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.PurchaseCost">
<summary>
Amount of the purchase cost of the guaranteed saving (NGUARSAV_COST)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NGUARSAV_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.Reserve">
<summary>
Reserve of guaranteed saving (NGUARRESERVE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NGUARRESERVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.TributaryBenefit">
<summary>
Amount of the tributary benefit (NBENEF_TRIB)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NBENEF_TRIB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.Rentability">
<summary>
Amount of guaranteed rentability. (NRENTABILITY)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NRENTABILITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.CapitalRisk">
<summary>
Amount of capital at risk. (NCAPITAL_RISK)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NCAPITAL_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.PercentajeRateApplied">
<summary>
Percentage rate applied. (NLOAD_RATE)..
</summary>
<remarks>Data-source is 'PROJECTVUL_DET.NLOAD_RATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.Compare(InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PROJECTVUL_DETItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DET.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DETCollection">
 <summary>
 Collection for PROJECTVUL_DET class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DETCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DETCollection.AddPROJECTVUL_DET">
 <summary>
 Add an instance of class 'PROJECTVUL_DET' in the PROJECTVUL_DETCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DETCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DETCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DETCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DETCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PROJECTVUL_DETCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PropertyInsured">
 <summary>
 Property insured under the policy/proposal/quotation.
 </summary>
<remarks>Data-source is 'PROPERTY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.CreateNewPropertyInsured">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._ConsecutiveNumber">
<summary>
Number identifying the property insured under a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._InsuredProperty">
<summary>
Códe of the property insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._Limit">
<summary>
Insured value of the property.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._Description">
<summary>
Description of the insured property.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._FranchiseOrDeductible">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Percentage of discount because of franchise or deductible.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._Losses">
<summary>
Losses in the claim.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._NoteID">
<summary>
Number of the note containing the comments related to the insured property.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._PremiumAmount">
<summary>
Premium amount for this property.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._RatePerThousand">
<summary>
Rate (o/oo) to be applied to the insured property.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._CurrencyCode">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._ServiceOrder">
<summary>
Number of the service order.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'PROPERTY.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'PROPERTY.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'PROPERTY.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'PROPERTY.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'PROPERTY.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.ConsecutiveNumber">
<summary>
Number identifying the property insured under a policy. (NID)..
</summary>
<remarks>Data-source is 'PROPERTY.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'PROPERTY.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.InsuredProperty">
<summary>
Códe of the property insured. (NCODE_GOOD)..
</summary>
<remarks>Data-source is 'PROPERTY.NCODE_GOOD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.Limit">
<summary>
Insured value of the property. (NCAPITAL)..
</summary>
<remarks>Data-source is 'PROPERTY.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'PROPERTY.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.Description">
<summary>
Description of the insured property. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'PROPERTY.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.FranchiseOrDeductible">
<summary>
It indicates whether a franchise or deductible is applied (SFRANDEDI)..
</summary>
<remarks>Data-source is 'PROPERTY.SFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.DiscountPercentageBecauseFranchiseOrDeductible">
<summary>
Percentage of discount because of franchise or deductible. (NDISCOUNT)..
</summary>
<remarks>Data-source is 'PROPERTY.NDISCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.Losses">
<summary>
Losses in the claim. (NLOST_CAPIT)..
</summary>
<remarks>Data-source is 'PROPERTY.NLOST_CAPIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.NoteID">
<summary>
Number of the note containing the comments related to the insured property. (NNOTENUM)..
</summary>
<remarks>Data-source is 'PROPERTY.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.FixedAmountOfFranchiseOrDeductible">
<summary>
Fixed franchise or deductible amount. (NFIXAMOUNT)..
</summary>
<remarks>Data-source is 'PROPERTY.NFIXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'PROPERTY.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.MaximumAmountOfFranchiseOrDeductible">
<summary>
Maximum franchise or deductible amount. (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'PROPERTY.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.PremiumAmount">
<summary>
Premium amount for this property. (NPREMIUM)..
</summary>
<remarks>Data-source is 'PROPERTY.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'PROPERTY.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.RatePerThousand">
<summary>
Rate (o/oo) to be applied to the insured property. (NRATEPROP)..
</summary>
<remarks>Data-source is 'PROPERTY.NRATEPROP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'PROPERTY.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.FranchiseOrDeductiblePercentage">
<summary>
Franchise or deductible percentage to be applied. (NRATE)..
</summary>
<remarks>Data-source is 'PROPERTY.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.CurrencyCode">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'PROPERTY.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.ServiceOrder">
<summary>
Number of the service order. (NSERV_ORDER)..
</summary>
<remarks>Data-source is 'PROPERTY.NSERV_ORDER'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.PropertyInsured._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.Compare(InMotionGIT.Policy.Entity.Contracts.PropertyInsured,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="PropertyInsuredItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsured.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.PropertyInsuredCollection">
 <summary>
 Collection for PropertyInsured class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsuredCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsuredCollection.AddPropertyInsured">
 <summary>
 Add an instance of class 'PropertyInsured' in the PropertyInsuredCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsuredCollection.Compare(InMotionGIT.Policy.Entity.Contracts.PropertyInsuredCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.PropertyInsuredCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsuredCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.PropertyInsuredCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise">
 <summary>
 Rate and Deductibles for transport of merchandise.
 </summary>
<remarks>Data-source is 'TRAN_RATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.CreateNewRateAndDeductibleForTransportMerchandise">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._ClassOfMerchandise">
<summary>
Classification of the insured merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._Packaging">
<summary>
Packaging type used for the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._ValueLimit">
<summary>
Limit amount of the value of the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._nRate">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._nAmo_Deduc">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._DeductiblePercentage">
<summary>
Deductible Percentage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._MaximumDeductible">
<summary>
Maximum deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._nMinAmount">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TRAN_RATE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.ClassOfMerchandise">
<summary>
Classification of the insured merchandise. (NCLASSMERCH)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NCLASSMERCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.Packaging">
<summary>
Packaging type used for the merchandise. (NPACKING)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NPACKING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TRAN_RATE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.ValueLimit">
<summary>
Limit amount of the value of the merchandise. (NLIMITCAPITAL)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NLIMITCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.nRate">
<summary>
.
</summary>
<remarks>Data-source is 'TRAN_RATE.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.nAmo_Deduc">
<summary>
.
</summary>
<remarks>Data-source is 'TRAN_RATE.NAMO_DEDUC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.DeductiblePercentage">
<summary>
Deductible Percentage (NDEDUCTIBLE)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NDEDUCTIBLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.MaximumDeductible">
<summary>
Maximum deductible amount. (NMAXAMOUNT)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NMAXAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.nMinAmount">
<summary>
.
</summary>
<remarks>Data-source is 'TRAN_RATE.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TRAN_RATE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TRAN_RATE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TRAN_RATE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.FranchiseOrDeductible">
<summary>
It indicates if a franchise or deductible is applied (SFRANCAPL)..
</summary>
<remarks>Data-source is 'TRAN_RATE.SFRANCAPL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.Compare(InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RateAndDeductibleForTransportMerchandiseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.ClassOfMerchandiseDescription">
 <summary>
 Classification of the insured merchandise.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE232'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.PackagingDescription">
 <summary>
 Packaging type used for the merchandise.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE237'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandise.FranchiseOrDeductibleDescription">
 <summary>
 It indicates if a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE33'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandiseCollection">
 <summary>
 Collection for RateAndDeductibleForTransportMerchandise class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandiseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandiseCollection.AddRateAndDeductibleForTransportMerchandise">
 <summary>
 Add an instance of class 'RateAndDeductibleForTransportMerchandise' in the RateAndDeductibleForTransportMerchandiseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandiseCollection.Compare(InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandiseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandiseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandiseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RateAndDeductibleForTransportMerchandiseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife">
 <summary>
 Rate of traditional life.
 </summary>
<remarks>Data-source is 'TAR_TRALIFE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.CreateNewRatingTableTraditionalLife">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._RiskType">
<summary>
Type of risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._ConsecutiveNumber">
<summary>
Consecutive number identifying the record as unique.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._Age">
<summary>
Age of the rate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._SmokerIndicator">
<summary>
Smoker client indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._InsuranceLowestYearsLimit">
<summary>
Lowest limit of the number of years of the insurance period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._RateForWomen">
<summary>
Rate for women.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._PaymentLowestYearsLimit">
<summary>
Lowest limit of the number of years of the payment period
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._PremiumForWomen">
<summary>
Premium amount for women.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._RateForMen">
<summary>
Rate for men.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._PremiumForMen">
<summary>
Premium amount for men.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._RatingTableType">
<summary>
Type of rating.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._FinalYearOfInsurance">
<summary>
Final year of the insurance period of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._FinalYearOfPayment">
<summary>
Final year of the payment period of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._SingleRate">
<summary>
Single rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._SinglePremium">
<summary>
Single Premium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RiskType">
<summary>
Type of risk. (NTYPERISK)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NTYPERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RiskTypeEnum">
<summary>
Type of risk.
</summary>
<remarks>This property use a enumeration based on property 'RiskType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RiskTypeEnumText">
<summary>
Type of risk.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.ConsecutiveNumber">
<summary>
Consecutive number identifying the record as unique. (NID)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.Age">
<summary>
Age of the rate (NAGE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SmokerIndicator">
<summary>
Smoker client indicator. (SSMOKING)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.SSMOKING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SmokerIndicatorEnum">
<summary>
Smoker client indicator.
</summary>
<remarks>This property use a enumeration based on property 'SmokerIndicator'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SmokerIndicatorEnumText">
<summary>
Smoker client indicator.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.InsuranceLowestYearsLimit">
<summary>
Lowest limit of the number of years of the insurance period (NINIPERCOV)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NINIPERCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RateForWomen">
<summary>
Rate for women. (NRATEWOMEN)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NRATEWOMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.PaymentLowestYearsLimit">
<summary>
Lowest limit of the number of years of the payment period (NINIPAYCOV)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NINIPAYCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.PremiumForWomen">
<summary>
Premium amount for women. (NPREMWOMEN)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NPREMWOMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RateForMen">
<summary>
Rate for men. (NRATEMEN)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NRATEMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.PremiumForMen">
<summary>
Premium amount for men. (NPREMMEN)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NPREMMEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RatingTableType">
<summary>
Type of rating. (NTYPE_TAR)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NTYPE_TAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RatingTableTypeEnum">
<summary>
Type of rating.
</summary>
<remarks>This property use a enumeration based on property 'RatingTableType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RatingTableTypeEnumText">
<summary>
Type of rating.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.FinalYearOfInsurance">
<summary>
Final year of the insurance period of the coverage. (NENDPERCOV)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NENDPERCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.FinalYearOfPayment">
<summary>
Final year of the payment period of the coverage. (NENDPAYCOV)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NENDPAYCOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SingleRate">
<summary>
Single rate. (NRATE)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SinglePremium">
<summary>
Single Premium (NPREMIUM)..
</summary>
<remarks>Data-source is 'TAR_TRALIFE.NPREMIUM'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.Compare(InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RatingTableTraditionalLifeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RiskTypeDescription">
 <summary>
 Type of risk.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5639'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLife.RatingTableTypeDescription">
 <summary>
 Type of rating.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5584'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLifeCollection">
 <summary>
 Collection for RatingTableTraditionalLife class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLifeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLifeCollection.AddRatingTableTraditionalLife">
 <summary>
 Add an instance of class 'RatingTableTraditionalLife' in the RatingTableTraditionalLifeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLifeCollection.Compare(InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLifeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLifeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLifeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RatingTableTraditionalLifeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution">
 <summary>
 Distribution of proportional reinsurance.
 </summary>
<remarks>Data-source is 'REINSURAN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.CreateNewReinsuranceDistribution">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._CoverageModule">
<summary>
Code of The Module of The Coverage. Is zero unless the reinsurance is defined by &#34;coverage&#34;.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._CoverageCode">
<summary>
Code of the coverage. Is zero unless the reinsurance is defined by &#34;coverage&#34;.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._ReinsuranceLineOfBusiness">
<summary>
Code of the Reinsurance Line of Business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._TypeOfTreaty">
<summary>
Type of reinsurance treaty.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._CompanyCode">
<summary>
Code of the company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._AcceptanceDate">
<summary>
Date of acceptance of the facultative reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._InsuredAmountCeded">
<summary>
Insured amount ceded in the treaty (calculated on the basis of participation in the contract total amount of reinsurance ceded).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._CommissionPercentage">
<summary>
Percentage of facultative reinsurance commission.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._CurrencyCode">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._Cumulus">
<summary>
Code of cumulus.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._InterestEarnedByPremiumReserves">
<summary>
Interest to be paid on premiums withheld for facultative reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._ReinsuranceTreaty">
<summary>
Number of the reinsurance treaty.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._PremiumReservePercentageInFacultative">
<summary>
Premium percentage to be reserved for the reinsurance company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._Share">
<summary>
Percentage of share on the total risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._TypeOfChange">
<summary>
Type of the change for reinsurance purposes.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._AcceptanceCode">
<summary>
Acceptance Code By The Facultative Reinsurer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._ManualEntryIndicator">
<summary>
Manual entry indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._TotalReinsuranceCapital">
<summary>
Total reinsurance capital (accumulated coverages involved)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._ApplicationPriority">
<summary>
Order or priority in applying the reinsurance contract.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._SharePercentage">
<summary>
Percentage reinsurance capital, given the contract (percentage of participation in the contract).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._SCESSIREI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._NTYPERATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._NRATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._NFIXAMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'REINSURAN.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'REINSURAN.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'REINSURAN.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'REINSURAN.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'REINSURAN.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.CoverageModule">
<summary>
Code of The Module of The Coverage. Is zero unless the reinsurance is defined by &#34;coverage&#34;. (NMODULEC)..
</summary>
<remarks>Data-source is 'REINSURAN.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'REINSURAN.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.CoverageCode">
<summary>
Code of the coverage. Is zero unless the reinsurance is defined by &#34;coverage&#34;. (NCOVER)..
</summary>
<remarks>Data-source is 'REINSURAN.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.ReinsuranceLineOfBusiness">
<summary>
Code of the Reinsurance Line of Business (NBRANCH_REI)..
</summary>
<remarks>Data-source is 'REINSURAN.NBRANCH_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.TypeOfTreaty">
<summary>
Type of reinsurance treaty. (NTYPE_REIN)..
</summary>
<remarks>Data-source is 'REINSURAN.NTYPE_REIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.CompanyCode">
<summary>
Code of the company. (NCOMPANY)..
</summary>
<remarks>Data-source is 'REINSURAN.NCOMPANY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'REINSURAN.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.AcceptanceDate">
<summary>
Date of acceptance of the facultative reinsurance. (DACCEDATE)..
</summary>
<remarks>Data-source is 'REINSURAN.DACCEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.InsuredAmountCeded">
<summary>
Insured amount ceded in the treaty (calculated on the basis of participation in the contract total amount of reinsurance ceded). (NCAPITAL)..
</summary>
<remarks>Data-source is 'REINSURAN.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.CommissionPercentage">
<summary>
Percentage of facultative reinsurance commission. (NCOMMISSI)..
</summary>
<remarks>Data-source is 'REINSURAN.NCOMMISSI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'REINSURAN.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.CurrencyCode">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'REINSURAN.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.Cumulus">
<summary>
Code of cumulus. (SHEAP_CODE)..
</summary>
<remarks>Data-source is 'REINSURAN.SHEAP_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.InterestEarnedByPremiumReserves">
<summary>
Interest to be paid on premiums withheld for facultative reinsurance. (NINTER_RATE)..
</summary>
<remarks>Data-source is 'REINSURAN.NINTER_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'REINSURAN.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.ReinsuranceTreaty">
<summary>
Number of the reinsurance treaty. (NNUMBER)..
</summary>
<remarks>Data-source is 'REINSURAN.NNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.PremiumReservePercentageInFacultative">
<summary>
Premium percentage to be reserved for the reinsurance company. (NRESER_RATE)..
</summary>
<remarks>Data-source is 'REINSURAN.NRESER_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.Share">
<summary>
Percentage of share on the total risk. (NSHARE)..
</summary>
<remarks>Data-source is 'REINSURAN.NSHARE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'REINSURAN.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.TypeOfChange">
<summary>
Type of the change for reinsurance purposes. (NCHANGE)..
</summary>
<remarks>Data-source is 'REINSURAN.NCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.AcceptanceCode">
<summary>
Acceptance Code By The Facultative Reinsurer (NACEP_CODE)..
</summary>
<remarks>Data-source is 'REINSURAN.NACEP_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.ManualEntryIndicator">
<summary>
Manual entry indicator. (SMANUALMOV)..
</summary>
<remarks>Data-source is 'REINSURAN.SMANUALMOV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.TotalReinsuranceCapital">
<summary>
Total reinsurance capital (accumulated coverages involved) (NCAPITAL_REI)..
</summary>
<remarks>Data-source is 'REINSURAN.NCAPITAL_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.ApplicationPriority">
<summary>
Order or priority in applying the reinsurance contract. (NORDEN)..
</summary>
<remarks>Data-source is 'REINSURAN.NORDEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.SharePercentage">
<summary>
Percentage reinsurance capital, given the contract (percentage of participation in the contract). (NSHARE_REI)..
</summary>
<remarks>Data-source is 'REINSURAN.NSHARE_REI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.SCESSIREI">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REINSURAN.SCESSIREI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.NTYPERATE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REINSURAN.NTYPERATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.NRATE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REINSURAN.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.NFIXAMOUNT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REINSURAN.NFIXAMOUNT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.Compare(InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ReinsuranceDistributionItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.ReinsuranceLineOfBusinessDescription">
 <summary>
 Code of the Reinsurance Line of Business
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5000'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.TypeOfTreatyDescription">
 <summary>
 Type of reinsurance treaty.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE173'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistribution.TypeOfChangeDescription">
 <summary>
 Type of the change for reinsurance purposes.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5531'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistributionCollection">
 <summary>
 Collection for ReinsuranceDistribution class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistributionCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistributionCollection.AddReinsuranceDistribution">
 <summary>
 Add an instance of class 'ReinsuranceDistribution' in the ReinsuranceDistributionCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistributionCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistributionCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistributionCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistributionCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ReinsuranceDistributionCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Request">
 <summary>
 Requests for redemptions, cancellations, rehabilitation, balance, extended, and collecting loans
 </summary>
<remarks>Data-source is 'REQUEST'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.CreateNewRequest">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._RequestDate">
<summary>
Date of request of the transaction
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._InvestmentFundCode">
<summary>
Code of the investment fund
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._QuotationType">
<summary>
Code of type of quotation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._CancellationDate">
<summary>
Cancellation date of the request
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SurrenderType">
<summary>
Type of surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._PaymentOrder">
<summary>
Type of payment order.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._CancelOutstandingPremiums">
<summary>
It indicates that outstanding premiums must be cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._Amount">
<summary>
Amount of the partial surrender or loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._Description">
<summary>
Description of the request.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NoteID">
<summary>
Number of the note related to the application
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._CancellationCode">
<summary>
Application cancellation code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._BillingType">
<summary>
Type of billing for the refund (automatic, manual, no bill)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._ReinstateLastBill">
<summary>
It indicates that the last bill must be reinstated.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._InterestRate">
<summary>
Interest percentage applied to the amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._TypeOfPaymentForTheSurrender">
<summary>
Type of payment related to the surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._EfectiveDate">
<summary>
Date of request of the surrender, cancellation, reinstatement, loan.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SurrenderPaymentOrder">
<summary>
Number of the payment order to pay the surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._ClientID">
<summary>
Client ID of the client that will receive the payment for the surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._TypeofPaymentRecord">
<summary>
Type of record of the policy related to the request.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._LineOfBusinessSurrenderedPolicy">
<summary>
Line of business of the surrendered policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._ProductCodeBeingSurrendered">
<summary>
Code of the product of the policy that is being surrendered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._PolicyIDBeingSurrendered">
<summary>
Policy ID that will be surrendered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._Certificate">
<summary>
Certificate ID that was surrendered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._Agency">
<summary>
Agency where the transaction was made.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._CauseOfTheSurrender">
<summary>
Cause of the surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SurrenderPaymentType">
<summary>
Type of payment of the surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._FinancialInstitution">
<summary>
Financial institution to which the funds are transferred.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._ClientIDFinancialInstitutio">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._MethodForPremiumRefund">
<summary>
Method for premium refund in case of cancellation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._nReturn_rat">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NORIGIN_APV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SurrenderCost">
<summary>
Cost of the surrender
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._TaxRateApplied">
<summary>
Tax rate applied.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._TaxAmountOfSurrender">
<summary>
Amount resulting from the application of the percentage tax to the amount of surrender.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NSIGNAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NUNITSCHANGE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NCURRENCY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NSELL_COST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NBUY_COST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NSWI_COST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._AmountOfInputOutputOfFund">
<summary>
Amount of input / output of the treatment fund
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._AccountCodeUsedInProcessSwitches">
<summary>
Account code that is used in the process switches
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._StatusSwitchProcess">
<summary>
Status of the record in the switch process
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._EvidenceOfInsurabilityIndicator">
<summary>
Indicator of evidence of insurability. (No capital reduces the Rescue - Option A).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._DateOfSurrenderPayment">
<summary>
Date of surrender payment
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._TypeOfTributaryBenefit">
<summary>
Type of Tributary Benefit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SSWITCHORIGIN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NPROPONUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._DNED_PREVIO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NFREYEAR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NAVADAY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NWEEKDAY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NAVADAYNUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._DNEXTPAY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._DLETTERFINALEXP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SKEY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SSURRENDERSTA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._DLETTEREXPIRDAT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._DLEGALEXPIRDAT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SREQUESTSTA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NFNED_PREVIO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NPROCESSTYPE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NWITHDRAWALAMO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NAMOUNWITHHOLD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._SORIGINAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NRESCUE_POR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NTAX_FUND">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NCHARGE_FUND">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._NCHARGE_IVA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'REQUEST.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'REQUEST.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'REQUEST.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'REQUEST.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'REQUEST.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.RequestDate">
<summary>
Date of request of the transaction (DEFFECDATE)..
</summary>
<remarks>Data-source is 'REQUEST.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.InvestmentFundCode">
<summary>
Code of the investment fund (NFUNDS)..
</summary>
<remarks>Data-source is 'REQUEST.NFUNDS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.QuotationType">
<summary>
Code of type of quotation. (NORIGIN)..
</summary>
<remarks>Data-source is 'REQUEST.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.CancellationDate">
<summary>
Cancellation date of the request (DNULLDATE)..
</summary>
<remarks>Data-source is 'REQUEST.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SurrenderType">
<summary>
Type of surrender. (STYP_SURR)..
</summary>
<remarks>Data-source is 'REQUEST.STYP_SURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.PaymentOrder">
<summary>
Type of payment order. (SPAYORDER)..
</summary>
<remarks>Data-source is 'REQUEST.SPAYORDER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.CancelOutstandingPremiums">
<summary>
It indicates that outstanding premiums must be cancelled. (SNULL_REC)..
</summary>
<remarks>Data-source is 'REQUEST.SNULL_REC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.Amount">
<summary>
Amount of the partial surrender or loan. (NAMOUNT)..
</summary>
<remarks>Data-source is 'REQUEST.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.Description">
<summary>
Description of the request. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'REQUEST.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NoteID">
<summary>
Number of the note related to the application (NNOTENUM)..
</summary>
<remarks>Data-source is 'REQUEST.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'REQUEST.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'REQUEST.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.CancellationCode">
<summary>
Application cancellation code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'REQUEST.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.BillingType">
<summary>
Type of billing for the refund (automatic, manual, no bill) (NTYP_REC)..
</summary>
<remarks>Data-source is 'REQUEST.NTYP_REC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.ReinstateLastBill">
<summary>
It indicates that the last bill must be reinstated. (SREH_LREC)..
</summary>
<remarks>Data-source is 'REQUEST.SREH_LREC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.InterestRate">
<summary>
Interest percentage applied to the amount (NINTERESTRATE)..
</summary>
<remarks>Data-source is 'REQUEST.NINTERESTRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.TypeOfPaymentForTheSurrender">
<summary>
Type of payment related to the surrender. (NTYPEPAY)..
</summary>
<remarks>Data-source is 'REQUEST.NTYPEPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.EfectiveDate">
<summary>
Date of request of the surrender, cancellation, reinstatement, loan. (DMOVDATE)..
</summary>
<remarks>Data-source is 'REQUEST.DMOVDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SurrenderPaymentOrder">
<summary>
Number of the payment order to pay the surrender. (NREQUEST_NU)..
</summary>
<remarks>Data-source is 'REQUEST.NREQUEST_NU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.ClientID">
<summary>
Client ID of the client that will receive the payment for the surrender. (SCLIPAYSURR)..
</summary>
<remarks>Data-source is 'REQUEST.SCLIPAYSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.TypeofPaymentRecord">
<summary>
Type of record of the policy related to the request. (SCERTPAYSURR)..
</summary>
<remarks>Data-source is 'REQUEST.SCERTPAYSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.LineOfBusinessSurrenderedPolicy">
<summary>
Line of business of the surrendered policy. (NBRAPAYSURR)..
</summary>
<remarks>Data-source is 'REQUEST.NBRAPAYSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.ProductCodeBeingSurrendered">
<summary>
Code of the product of the policy that is being surrendered. (NPROPAYSURR)..
</summary>
<remarks>Data-source is 'REQUEST.NPROPAYSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.PolicyIDBeingSurrendered">
<summary>
Policy ID that will be surrendered. (NPOLPAYSURR)..
</summary>
<remarks>Data-source is 'REQUEST.NPOLPAYSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.Certificate">
<summary>
Certificate ID that was surrendered. (NCERPAYSURR)..
</summary>
<remarks>Data-source is 'REQUEST.NCERPAYSURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.Agency">
<summary>
Agency where the transaction was made. (NAGENCY)..
</summary>
<remarks>Data-source is 'REQUEST.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.CauseOfTheSurrender">
<summary>
Cause of the surrender. (NSURR_REASON)..
</summary>
<remarks>Data-source is 'REQUEST.NSURR_REASON'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SurrenderPaymentType">
<summary>
Type of payment of the surrender. (NTYPE_PAYMENT)..
</summary>
<remarks>Data-source is 'REQUEST.NTYPE_PAYMENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.FinancialInstitution">
<summary>
Financial institution to which the funds are transferred. (NINSTITUTION)..
</summary>
<remarks>Data-source is 'REQUEST.NINSTITUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.ClientIDFinancialInstitutio">
<summary>
Code of the client. (SCLIENTINSTITUTION)..
</summary>
<remarks>Data-source is 'REQUEST.SCLIENTINSTITUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.MethodForPremiumRefund">
<summary>
Method for premium refund in case of cancellation. (SRETURN_IND)..
</summary>
<remarks>Data-source is 'REQUEST.SRETURN_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.nReturn_rat">
<summary>
.
</summary>
<remarks>Data-source is 'REQUEST.NRETURN_RAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NORIGIN_APV">
<summary>
.
</summary>
<remarks>Data-source is 'REQUEST.NORIGIN_APV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SurrenderCost">
<summary>
Cost of the surrender (NCOSTAMOUNT)..
</summary>
<remarks>Data-source is 'REQUEST.NCOSTAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.TaxRateApplied">
<summary>
Tax rate applied. (NTAX)..
</summary>
<remarks>Data-source is 'REQUEST.NTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.TaxAmountOfSurrender">
<summary>
Amount resulting from the application of the percentage tax to the amount of surrender. (NTAX_RENT)..
</summary>
<remarks>Data-source is 'REQUEST.NTAX_RENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NSIGNAL">
<summary>
.
</summary>
<remarks>Data-source is 'REQUEST.NSIGNAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NUNITSCHANGE">
<summary>
.
</summary>
<remarks>Data-source is 'REQUEST.NUNITSCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NCURRENCY">
<summary>
.
</summary>
<remarks>Data-source is 'REQUEST.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NSELL_COST">
<summary>
.
</summary>
<remarks>Data-source is 'REQUEST.NSELL_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NBUY_COST">
<summary>
.
</summary>
<remarks>Data-source is 'REQUEST.NBUY_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NSWI_COST">
<summary>
.
</summary>
<remarks>Data-source is 'REQUEST.NSWI_COST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.AmountOfInputOutputOfFund">
<summary>
Amount of input / output of the treatment fund (NVALUECHANGE)..
</summary>
<remarks>Data-source is 'REQUEST.NVALUECHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.AccountCodeUsedInProcessSwitches">
<summary>
Account code that is used in the process switches (NSWITCHORIGIN)..
</summary>
<remarks>Data-source is 'REQUEST.NSWITCHORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.StatusSwitchProcess">
<summary>
Status of the record in the switch process (SSWITCHSTATUS)..
</summary>
<remarks>Data-source is 'REQUEST.SSWITCHSTATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.EvidenceOfInsurabilityIndicator">
<summary>
Indicator of evidence of insurability. (No capital reduces the Rescue - Option A). (SIND_INSUR)..
</summary>
<remarks>Data-source is 'REQUEST.SIND_INSUR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.DateOfSurrenderPayment">
<summary>
Date of surrender payment (DPAYMENTDATE)..
</summary>
<remarks>Data-source is 'REQUEST.DPAYMENTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.TypeOfTributaryBenefit">
<summary>
Type of Tributary Benefit. (NTYP_PROFITWORKER)..
</summary>
<remarks>Data-source is 'REQUEST.NTYP_PROFITWORKER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SSWITCHORIGIN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.SSWITCHORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NPROPONUM">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.DNED_PREVIO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.DNED_PREVIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NFREYEAR">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NFREYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NAVADAY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NAVADAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NWEEKDAY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NWEEKDAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NAVADAYNUM">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NAVADAYNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.DNEXTPAY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.DNEXTPAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.DLETTERFINALEXP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.DLETTERFINALEXP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SKEY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SSURRENDERSTA">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.SSURRENDERSTA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.DLETTEREXPIRDAT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.DLETTEREXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.DLEGALEXPIRDAT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.DLEGALEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SREQUESTSTA">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.SREQUESTSTA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NFNED_PREVIO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NFNED_PREVIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NPROCESSTYPE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NPROCESSTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NWITHDRAWALAMO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NWITHDRAWALAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NAMOUNWITHHOLD">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NAMOUNWITHHOLD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SORIGINAL">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.SORIGINAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NRESCUE_POR">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NRESCUE_POR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NTAX_FUND">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NTAX_FUND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NCHARGE_FUND">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NCHARGE_FUND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.NCHARGE_IVA">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'REQUEST.NCHARGE_IVA'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Request._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.Compare(InMotionGIT.Policy.Entity.Contracts.Request,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RequestItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Request.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.QuotationTypeDescription">
 <summary>
 Code of type of quotation.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5580'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.PaymentOrderDescription">
 <summary>
 Type of payment order.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE193'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.CancellationCodeDescription">
 <summary>
 Application cancellation code.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE13'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.TypeOfPaymentForTheSurrenderDescription">
 <summary>
 Type of payment related to the surrender.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5527'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.CauseOfTheSurrenderDescription">
 <summary>
 Cause of the surrender.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5635'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Request.SurrenderPaymentTypeDescription">
 <summary>
 Type of payment of the surrender.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5636'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RequestCollection">
 <summary>
 Collection for Request class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RequestCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RequestCollection.AddRequest">
 <summary>
 Add an instance of class 'Request' in the RequestCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RequestCollection.Compare(InMotionGIT.Policy.Entity.Contracts.RequestCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RequestCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RequestCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RequestCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RiskInformation">
 <summary>
 Certificates of a Policy (general).
 </summary>
<remarks>Data-source is 'CERTIFICAT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CreateNewRiskInformation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PayerClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._InsuredAmount">
<summary>
Insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CumulusCode">
<summary>
Code of the cumulus
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._QuotationCancellationDate">
<summary>
Date when the application or quotation is nullified.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._OriginalEffectiveDate">
<summary>
Original effective date of the Policy/Certificate (first effective date).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._LastModificationDate">
<summary>
Date of last modification made to the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._KeepUntil">
<summary>
Date until which the application or quotation may remain recorded in the system.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ReasonForNoConversionIntoPolicy">
<summary>
Code of the reason for non conversion into policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BeneficiaryNoteID">
<summary>
Number of the note defining the beneficiaries as per free text.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RiskDescriptionNoteID">
<summary>
Number of the note describing the insured risk as per Free Text.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CancellationCode">
<summary>
Policy/Certificate Cancellation Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PaymentFrequency">
<summary>
Payment frequency of the premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AnnualPremium">
<summary>
Certificate annual premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ApplicationDate">
<summary>
Date of application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AutomaticRenewal">
<summary>
Automatic renewal indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._EffectiveDate">
<summary>
Effective date of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._StatusOfPolicyCertificate">
<summary>
Policy/Certificate Status.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AmendingUser">
<summary>
Code of the user amending the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._LineOfBusinessOfReplacedPolicy">
<summary>
Code of the line of business of the replaced policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ReasonForOutstandingStatus">
<summary>
Reason why the policy/quotation/application is in outstanding status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ProductOfReplacedPolicy">
<summary>
Code of the product of the replaced policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ReplacedPolicyID">
<summary>
Number of the policy replaced by this policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CertificateIDOfReplacedPolicy">
<summary>
Number of the certificate of the policy that has been replaced by this Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NextBilling">
<summary>
Date of next billing.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ApplicationOrQuotationNumber">
<summary>
Application or quotation number that originated this policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Installments">
<summary>
Number of installments to pay the premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DaysBilledInFirstQuota">
<summary>
Number of days billed on the first installment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BillingOptions">
<summary>
Options of policy/certificate billing (prorate, short-term, by installments).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DaysBilledInNextQuotas">
<summary>
Number of days billed on the next installments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ApplicationID">
<summary>
Number of application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ProportionalReinsurance">
<summary>
The certificate has a proportional reinsurance distribution.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._TotalLossWarning">
<summary>
It indicates that a claim of &#39;total loss&#39; has been declared to the policy-certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RatingException">
<summary>
Indicator for rating table exception.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RatingExceptionCause">
<summary>
Reason why the standard rating was not used.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ProperUse">
<summary>
Indicator of property use.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PremiumWaiver">
<summary>
Indicator of premium waiver (premiums have been waived).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ImageID">
<summary>
Number of the image associated to the risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DirectDebitIndicator">
<summary>
Indicator of automatic payments of premium from Bank Accounts or Credit Card.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PaymentMethod">
<summary>
Code of the payment method.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BillDueDate">
<summary>
Due date of the premium bill.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._TypeOfAddress">
<summary>
Type of address.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NonForfeitureValuesCalculation">
<summary>
Mode of calculation of the non-forfeiture values of the policy (manual or automatic).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._TypeOfDistributionChannel">
<summary>
Code of type of distribution channel.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BillingSuspensionEffectiveDate">
<summary>
Date as of which the billing of the policy/certificate is suspended.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RetroactiveEndorsementDate">
<summary>
Date of The Retroactive Endorsement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BillingSuspensionEndingDate">
<summary>
Date until which the billing of the policy/certificate is suspended.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._QuotationIsValidForThisNumberOfDays">
<summary>
Number of days of validity of the quotation/application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CauseOfSuspension">
<summary>
Code of the suspension reason
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PolicyIDResultingFromThisQuotation">
<summary>
Number of policy to which the quotation belongs (only used in quotation records converted to policy).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._OriginOfSuspension">
<summary>
Indicator of origin of the suspension.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DateQuotationAccepted">
<summary>
Date of acceptance of the quotation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CancellationNotification">
<summary>
Indicates that a letter notifying the annulment has been issued.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BillingIndicator">
<summary>
Billing indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Refund">
<summary>
Indicator of refund of premiums in a quotation/application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._QuotationStatus">
<summary>
Status of the quotation/application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PendingInformation">
<summary>
Pending information indicator for holding commission payment.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NumberOfRenewals">
<summary>
Number of times the policy has been renewed (only in P &#38; C).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Digit">
<summary>
Check digit of the policy, it is used for collection.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Application">
<summary>
Number of regular application that motivates the application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._MaximumDaysForPaymentWhenReinstatingPoliicy">
<summary>
Maximum number of days to make the payment when reinstalling the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DurationInMonths">
<summary>
Number of months of duration of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AFPCharges">
<summary>
Commission amount that the Pension Fund Administrator charges to transfer the funds to the insurance company.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CommissionCurrency">
<summary>
Currency in which the commission amount is expressed.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SourceAccount">
<summary>
Code of the source account by default
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CollectionAgent">
<summary>
Code of the agent, person or organization in charge of collecting this premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ProrateFirstBillToGoWithMonth">
<summary>
It indicates if the first bill of the policy should be prorated when the effective date does not corresponds to the first of the month.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AgreementCode">
<summary>
Discount or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._MailingPreference">
<summary>
Mailing preference option of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RepricingPremiumIndicator">
<summary>
Repricing indicator premium pricing as last date.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._LastPricingDate">
<summary>
Date of last pricing premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._OperationCode">
<summary>
Code of the operation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DatToBeUsedForTariff">
<summary>
It dates To include Date of tariff. Date whereupon the rate of premium is obtained. It corresponds to the date of the quote if the product requires quote. On the contrary date of the proposal.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DateOfReceiptByIntermediary">
<summary>
Date of receipt by the intermediary policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DateCompanyReceivesProofOfReceiptByIintermediary">
<summary>
Date the company receives proof of receipt of policy broker.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DateOfPolicyReceiptByInsured">
<summary>
Date of receipt of policy by the insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DateCompanyReceivesProofOfReceiptByInsuredPerson">
<summary>
Date the company receives proof of receipt by the policy insured person.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SAPPLYCOSTFP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DigitizationControlHasBeenPrinted">
<summary>
Indicator that the digitization control has been printed
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PaidUpDateForMigratedPolicies">
<summary>
Date of Paid up for migrated policies
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RateForTechnicalReservesbase">
<summary>
Rate for calculating technical reserves base
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NFOLIO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._FacultativeReinsurance">
<summary>
It indicates that the certificate has facultative reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._OfficialNumberOfPolicy">
<summary>
Number of official policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._OfficialNumberOfCertificate">
<summary>
Number of official certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._nSus_Office">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AgreementDiscountCode">
<summary>
Discount and/or Agreement Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CoverageExclusionType">
<summary>
Type of coverage exclusion per insured person
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._IntegratedSystem">
<summary>
Code integrated system that generated the request.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CertificateCoverage">
<summary>
Number identifying the certificate of coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._StatusCertificateCoverage">
<summary>
Status of the certificate of coverage. (Values 1-Issued, 2-Pending)
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RiskAcceptedDate">
<summary>
Date of acceptance of risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NADDRESSID">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NPHONEID">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Sponsor">
<summary>
Code that identifies the authorized commercial partner to market the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CommercialProduct">
<summary>
Commercial Product Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CombinedPolicy">
<summary>
Combined policy number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CampaignRelease">
<summary>
Campaign reléase number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CommercialCampaign">
<summary>
Commercial Campaign code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DuplicityCriteriaForClaims">
<summary>
Duplicity criteria for claims
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RevalType">
<summary>
Indices of revaluation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RevalFrequency">
<summary>
Revaluation Frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RevaluationNextDate">
<summary>
Date of next revaluation
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._IndicatorOfClaimPaymentsByCreditOperations">
<summary>
Indicator of claim payments by credit operations
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BankCodeToClaimPayments">
<summary>
Code of the bank to claim payments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BankAccountNumberToClaimPayments">
<summary>
Number of the bank account to claim payments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BankAgencyToClaimPayments">
<summary>
Code of The Bank Agency to claim payments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._UniformBankCodeToClaimPayments">
<summary>
Uniform Bank code to claim payments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CodeofTheCurrencyToClaimPayments">
<summary>
Code of The Currency to claim payments
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CommerceNumber">
<summary>
Commerce Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CodeOfExpirationCycle">
<summary>
Code of the expiration cycle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._LastOfficialPolicyNumber">
<summary>
Last year policy number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CodeExpirationRule">
<summary>
Code of the expiration rule
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SKEY_CODE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SFILE_OWNER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SCAPTURE_KEY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NSALESCAMPAIGN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NCONSEC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SPRINTMODEL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SCLIENTPRESENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SPREPAGO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NAMOUNTPAID">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NSTATE_REC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SSOURCE_CODE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NCAMP_BANK">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NPRINTEDFLAG">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ConversionIndicator">
<summary>
Indicates that the certificate becomes an individual policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._OriginalIssueDateBeforeConversion">
<summary>
Original date when the certificate was issued before they become an individual policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ConversionStatus">
<summary>
Status of the conversion process
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NLASTMOV_STAMP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NLASTYEARRECEIPT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SFILEPOLICYNAME">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DPROCESSDATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SCITICURP">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NNOINTERMONTHS">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._MultiAnnualPolicyIndicator">
<summary>
Multi Annual Policy Indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NDEPRECIATIONTABLE">
<summary>
NDEPRECIATIONTABLE
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ManagedPromissoryNoteScheme">
<summary>
Iindicates that the policy will be managed with the Promissory Note scheme
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ExtraDaysDurationPolicyCertificate">
<summary>
Extra days of duration of the policy/certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SINDQSAMEVALUE">
<summary>
SINDQSAMEVALUE
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ObjetivePremiumAmount">
<summary>
Objetive Premium Amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._StartTimeEndValidity">
<summary>
Start time of the end of validity
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BillingBreakdownDataIndicatorPrinting">
<summary>
Billing breakdown data indicator for printing
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BrokerDataIndicatorPrinting">
<summary>
Broker data indicator for printing
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CallCenterDataIndicatorPrinting">
<summary>
Call Center data indicator for printing
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DaysGraceReceiptEmission">
<summary>
Days of grace for the receipt of Emission
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._GraceDaysRenewalReceipt">
<summary>
Grace days for the renewal receipt
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._TypeAddress">
<summary>
Type Address
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NumFolioReplace">
<summary>
Folio Replace Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CauseStateFolio">
<summary>
Code of cause to state change to the folio
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._FileNumber">
<summary>
File Number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._FirstIndicatorPremiumFree">
<summary>
First Indicator Premium Free
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._NCAPDIF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CommercialStrategy">
<summary>
Commercial Strategy: Possible values TABLE5753
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._RolNotify">
<summary>
Role to Notify Possible Values TABLE5751
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ViaForCommunications">
<summary>
Via for Communications Possible Values TABLE5752
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ContinuityOfCoverageInd">
<summary>
Continuity of Coverage Indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ContinuityOfCoverageDate">
<summary>
Continuity of coverage date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AutomaticCoverageInd">
<summary>
Automatic coverage indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AutomaticCoverageDate">
<summary>
Automatic coverage date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PolicyCheckingAccount">
<summary>
Current account of the policy (only ActiveLife Policies).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ActiveLife">
<summary>
Specific Information on Special Life Policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PaymentAgreementByPolicy">
<summary>
Payment Agreement By Policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AutomobileLineOfBusiness">
<summary>
Particular information on automobile policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Beneficiaries">
<summary>
Beneficiaries of a policy or certificate of a group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Clauses">
<summary>
Clause of a policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Commissions">
<summary>
Commissions of a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Coverages">
<summary>
Coverages of a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CreditLineOfBusiness">
<summary>
Particular information about credit and fidelity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CurrencyPolicies">
<summary>
Currencies associated with the policy/certificated.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._AutomaticPaymentPolicies">
<summary>
Details for automatic payment by bank or credit card associated with the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DiscountExtraPremiumTaxOfPolicies">
<summary>
Extra-premiums/technical discounts/taxes of a policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._FireLineOfBusiness">
<summary>
Particular information on fire policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Franchises">
<summary>
Franchise or deductible of a policy or certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._FundsOfMainPolicy">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._GuarranteedSavingPols">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._GuaranteedValues">
<summary>
Table of non-forfeiture values of a policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._HealthLineOfBusiness">
<summary>
Particular information on health policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._HomeLineOfBusiness">
<summary>
Particular information on homeowner policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ExtraPremiumDiscountByInsureds">
<summary>
Surcharges / Discounts by insured person and coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._LifeLineOfBusiness">
<summary>
Particular data on life policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._DocumentRequestedLifePolicies">
<summary>
Documents requested in life policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._LifeLineOfBusinessCurrentValue">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SpecificationsForLifeInsurances">
<summary>
Risk selection criteria for life insurance policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._MachineryLineOfBusiness">
<summary>
Specifics of the machinery branch breakage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Modules">
<summary>
Modules of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._EntryPolicyInvestmentFunds">
<summary>
Entries of policies investment funds.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._MultiRiskLineOfBusiness">
<summary>
Details of the particular line of business multi risks.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._InsuredPersonsByCoverages">
<summary>
Number of insured persons by coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._OutstandingBillingTransactions">
<summary>
Entries pending for billing.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PaymentPlansForMonthlyContributions">
<summary>
Payment plan for monthly contributions
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PolicyHistories">
<summary>
History of a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PolicyWindow">
<summary>
Windows associated with a policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PropertyInsureds">
<summary>
Property insured under the policy/proposal/quotation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._PolicyProtectionElements">
<summary>
Protection elements of the policy / certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ReinsuranceDistributions">
<summary>
Distribution of proportional reinsurance.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Requests">
<summary>
Requests for redemptions, cancellations, rehabilitation, balance, extended, and collecting loans
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Roles">
<summary>
Role of the client in the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ShipLineOfBusiness">
<summary>
Particular information on Ship policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._BasicInsuredAmounts">
<summary>
Basic sums insured of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ExcludedIllnessInHealthPolicies">
<summary>
Excluded illness (Health Policy).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Theft">
<summary>
Particular information on theft policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._TransportLineOfBusiness">
<summary>
Particular informatin on transportation policies.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Ul_curr_acc_pol">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._SavingAccountPolicyMasters">
<summary>
Savings Account Policy (Master) (APV).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._ParticularDataOfaPolicies">
<summary>
Particular data of a póliza
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._StipendPolicies">
<summary>
Brokerage commissions and stipends per policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._CertificateStatus">
<summary>
Current state of the certificates
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._HistoryStatesOfCertificates">
<summary>
History states of certificates
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._IndexInformationAppliedToThePolicys">
<summary>
Index information applied to the policy
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PayerClientID">
<summary>
Code that identifies the payer of the bills of the policy or certificate. (SCLIENT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.InsuredAmount">
<summary>
Insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CumulusCode">
<summary>
Code of the cumulus (SCUMUL_CODE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SCUMUL_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.QuotationCancellationDate">
<summary>
Date when the application or quotation is nullified. (DDAT_NO_CON)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DDAT_NO_CON'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.OriginalEffectiveDate">
<summary>
Original effective date of the Policy/Certificate (first effective date). (DDATE_ORIGI)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DDATE_ORIGI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LastModificationDate">
<summary>
Date of last modification made to the policy/certificate. (DCHANGDAT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DCHANGDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.KeepUntil">
<summary>
Date until which the application or quotation may remain recorded in the system. (DMAXIMUM_DA)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DMAXIMUM_DA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ReasonForNoConversionIntoPolicy">
<summary>
Code of the reason for non conversion into policy. (NNO_CONVERS)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NNO_CONVERS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BeneficiaryNoteID">
<summary>
Number of the note defining the beneficiaries as per free text. (NNOTE_BENEF)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NNOTE_BENEF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RiskDescriptionNoteID">
<summary>
Number of the note describing the insured risk as per Free Text. (NNOTE_DRISK)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NNOTE_DRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CancellationCode">
<summary>
Policy/Certificate Cancellation Code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaymentFrequency">
<summary>
Payment frequency of the premium. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaymentFrequencyEnum">
<summary>
Payment frequency of the premium.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaymentFrequencyEnumText">
<summary>
Payment frequency of the premium.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AnnualPremium">
<summary>
Certificate annual premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ApplicationDate">
<summary>
Date of application. (DPROPODAT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DPROPODAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AutomaticRenewal">
<summary>
Automatic renewal indicator. (SRENEWAL)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SRENEWAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.EffectiveDate">
<summary>
Effective date of the policy/certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.StatusOfPolicyCertificate">
<summary>
Policy/Certificate Status. (SSTATUSVA)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SSTATUSVA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.StatusOfPolicyCertificateEnum">
<summary>
Policy/Certificate Status.
</summary>
<remarks>This property use a enumeration based on property 'StatusOfPolicyCertificate'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.StatusOfPolicyCertificateEnumText">
<summary>
Policy/Certificate Status.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AmendingUser">
<summary>
Code of the user amending the policy/certificate. (NUSER_AMEND)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NUSER_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LineOfBusinessOfReplacedPolicy">
<summary>
Code of the line of business of the replaced policy. (NSUS_BRANCH)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSUS_BRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ReasonForOutstandingStatus">
<summary>
Reason why the policy/quotation/application is in outstanding status (NWAIT_CODE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NWAIT_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ProductOfReplacedPolicy">
<summary>
Code of the product of the replaced policy. (NSUS_PRODUCT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSUS_PRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ReplacedPolicyID">
<summary>
Number of the policy replaced by this policy/certificate. (NSUS_POLICY)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSUS_POLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CertificateIDOfReplacedPolicy">
<summary>
Number of the certificate of the policy that has been replaced by this Policy/Certificate. (NSUS_CERTIF)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSUS_CERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NextBilling">
<summary>
Date of next billing. (DNEXTRECEIP)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DNEXTRECEIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ApplicationOrQuotationNumber">
<summary>
Application or quotation number that originated this policy. (NPROPONUM)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NPROPONUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Installments">
<summary>
Number of installments to pay the premium. (NQUOTA)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NQUOTA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DaysBilledInFirstQuota">
<summary>
Number of days billed on the first installment. (NDAYSFQ)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NDAYSFQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BillingOptions">
<summary>
Options of policy/certificate billing (prorate, short-term, by installments). (SPRORSHORT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SPRORSHORT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DaysBilledInNextQuotas">
<summary>
Number of days billed on the next installments (NDAYSSQ)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NDAYSSQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ApplicationID">
<summary>
Number of application. (SNUMFORM)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SNUMFORM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ProportionalReinsurance">
<summary>
The certificate has a proportional reinsurance distribution. (SREINSURA)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SREINSURA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.TotalLossWarning">
<summary>
It indicates that a claim of &#39;total loss&#39; has been declared to the policy-certificate. (SCLAIMIND)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SCLAIMIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RatingException">
<summary>
Indicator for rating table exception. (SEXCEPTION)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SEXCEPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RatingExceptionCause">
<summary>
Reason why the standard rating was not used. (NEXCCAUSE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NEXCCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ProperUse">
<summary>
Indicator of property use. (SPROPERUSE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SPROPERUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PremiumWaiver">
<summary>
Indicator of premium waiver (premiums have been waived). (SEXEMPTION)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SEXEMPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ImageID">
<summary>
Number of the image associated to the risk. (NIMAGENUM)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NIMAGENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DirectDebitIndicator">
<summary>
Indicator of automatic payments of premium from Bank Accounts or Credit Card. (SDIRIND)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SDIRIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaymentMethod">
<summary>
Code of the payment method. (NWAY_PAY)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NWAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BillDueDate">
<summary>
Due date of the premium bill. (NBILL_DAY)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NBILL_DAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.TypeOfAddress">
<summary>
Type of address. (NSENDADDR)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSENDADDR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NonForfeitureValuesCalculation">
<summary>
Mode of calculation of the non-forfeiture values of the policy (manual or automatic). (SAUT_GUARVAL)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SAUT_GUARVAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.TypeOfDistributionChannel">
<summary>
Code of type of distribution channel. (NSELLCHANNEL)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSELLCHANNEL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BillingSuspensionEffectiveDate">
<summary>
Date as of which the billing of the policy/certificate is suspended. (DCOLLSUS_INI)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DCOLLSUS_INI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RetroactiveEndorsementDate">
<summary>
Date of The Retroactive Endorsement. (DFER)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DFER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BillingSuspensionEndingDate">
<summary>
Date until which the billing of the policy/certificate is suspended. (DCOLLSUS_END)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DCOLLSUS_END'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.QuotationIsValidForThisNumberOfDays">
<summary>
Number of days of validity of the quotation/application. (NDAYS_QUOT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NDAYS_QUOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CauseOfSuspension">
<summary>
Code of the suspension reason (NSUS_REASON)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSUS_REASON'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PolicyIDResultingFromThisQuotation">
<summary>
Number of policy to which the quotation belongs (only used in quotation records converted to policy). (NPOL_QUOT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NPOL_QUOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.OriginOfSuspension">
<summary>
Indicator of origin of the suspension. (SSUS_ORIGI)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SSUS_ORIGI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DateQuotationAccepted">
<summary>
Date of acceptance of the quotation. (DDATE_ACCEPT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DDATE_ACCEPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CancellationNotification">
<summary>
Indicates that a letter notifying the annulment has been issued. (SANULLETTER)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SANULLETTER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BillingIndicator">
<summary>
Billing indicator. (SBILL_IND)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SBILL_IND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Refund">
<summary>
Indicator of refund of premiums in a quotation/application. (SREFUNDPREM)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SREFUNDPREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.QuotationStatus">
<summary>
Status of the quotation/application. (NSTATQUOTA)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSTATQUOTA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PendingInformation">
<summary>
Pending information indicator for holding commission payment. (SPENDINFO)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SPENDINFO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NumberOfRenewals">
<summary>
Number of times the policy has been renewed (only in P &#38; C). (NRENEWALNUM)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NRENEWALNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Digit">
<summary>
Check digit of the policy, it is used for collection. (NDIGIT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NDIGIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Application">
<summary>
Number of regular application that motivates the application. (NPROP_REG)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NPROP_REG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.MaximumDaysForPaymentWhenReinstatingPoliicy">
<summary>
Maximum number of days to make the payment when reinstalling the policy. (NDAY_PAY)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NDAY_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DurationInMonths">
<summary>
Number of months of duration of the policy/certificate. (NDURATION)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NDURATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AFPCharges">
<summary>
Commission amount that the Pension Fund Administrator charges to transfer the funds to the insurance company. (NAFP_COMMISS)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NAFP_COMMISS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CommissionCurrency">
<summary>
Currency in which the commission amount is expressed. (NAFP_COMM_CURR)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NAFP_COMM_CURR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SourceAccount">
<summary>
Code of the source account by default (NORIGIN)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CollectionAgent">
<summary>
Code of the agent, person or organization in charge of collecting this premium. (NCOLLECTOR)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NCOLLECTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ProrateFirstBillToGoWithMonth">
<summary>
It indicates if the first bill of the policy should be prorated when the effective date does not corresponds to the first of the month. (SFRACRECEIP)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SFRACRECEIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AgreementCode">
<summary>
Discount or Agreement Code. (NGROUP_AGREE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NGROUP_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.MailingPreference">
<summary>
Mailing preference option of the client. (NMAILINGPREF)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NMAILINGPREF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RepricingPremiumIndicator">
<summary>
Repricing indicator premium pricing as last date. (SRETARIF)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SRETARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LastPricingDate">
<summary>
Date of last pricing premium. (DLAST_TARIF)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DLAST_TARIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.OperationCode">
<summary>
Code of the operation (SOPERATION)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SOPERATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DatToBeUsedForTariff">
<summary>
It dates To include Date of tariff. Date whereupon the rate of premium is obtained. It corresponds to the date of the quote if the product requires quote. On the contrary date of the proposal. (DTARIFFDATE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DTARIFFDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DateOfReceiptByIntermediary">
<summary>
Date of receipt by the intermediary policy. (DRECEPINT)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DRECEPINT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DateCompanyReceivesProofOfReceiptByIintermediary">
<summary>
Date the company receives proof of receipt of policy broker. (DRECEPINT_COMP)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DRECEPINT_COMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DateOfPolicyReceiptByInsured">
<summary>
Date of receipt of policy by the insured. (DRECEPINSU)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DRECEPINSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DateCompanyReceivesProofOfReceiptByInsuredPerson">
<summary>
Date the company receives proof of receipt by the policy insured person. (DRECEPINSU_COMP)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DRECEPINSU_COMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SAPPLYCOSTFP">
<summary>
.
</summary>
<remarks>Data-source is 'CERTIFICAT.SAPPLYCOSTFP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DigitizationControlHasBeenPrinted">
<summary>
Indicator that the digitization control has been printed (SDETAILED_ENTRY_PRINTED)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SDETAILED_ENTRY_PRINTED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaidUpDateForMigratedPolicies">
<summary>
Date of Paid up for migrated policies (DSALD_DATE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DSALD_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RateForTechnicalReservesbase">
<summary>
Rate for calculating technical reserves base (NRATE_BASE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NRATE_BASE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NFOLIO">
<summary>
.
</summary>
<remarks>Data-source is 'CERTIFICAT.NFOLIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.FacultativeReinsurance">
<summary>
It indicates that the certificate has facultative reinsurance. (SFACULTATIV)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SFACULTATIV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.OfficialNumberOfPolicy">
<summary>
Number of official policy. (SOFFICIALPOL)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SOFFICIALPOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.OfficialNumberOfCertificate">
<summary>
Number of official certificate. (SOFFICIALCER)..
</summary>
<remarks>Data-source is 'CERTIFICAT.SOFFICIALCER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.nSus_Office">
<summary>
.
</summary>
<remarks>Data-source is 'CERTIFICAT.NSUS_OFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AgreementDiscountCode">
<summary>
Discount and/or Agreement Code. (NCOD_AGREE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NCOD_AGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CoverageExclusionType">
<summary>
Type of coverage exclusion per insured person (NTYPEEXC)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NTYPEEXC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.IntegratedSystem">
<summary>
Code integrated system that generated the request. (NSYSTEM)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSYSTEM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CertificateCoverage">
<summary>
Number identifying the certificate of coverage. (NCOVERAGECERTIFICATE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NCOVERAGECERTIFICATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.StatusCertificateCoverage">
<summary>
Status of the certificate of coverage. (Values 1-Issued, 2-Pending) (NSTATUSCOVERAGECERTIFICATE)..
</summary>
<remarks>Data-source is 'CERTIFICAT.NSTATUSCOVERAGECERTIFICATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RiskAcceptedDate">
<summary>
Date of acceptance of risk (DRISKACCEPTED)..
</summary>
<remarks>Data-source is 'CERTIFICAT.DRISKACCEPTED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NADDRESSID">
<summary>
.
</summary>
<remarks>Data-source is 'CERTIFICAT.NADDRESSID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NPHONEID">
<summary>
.
</summary>
<remarks>Data-source is 'CERTIFICAT.NPHONEID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Sponsor">
<summary>
Code that identifies the authorized commercial partner to market the product (SCLIENTSPONSOR)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCLIENTSPONSOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CommercialProduct">
<summary>
Commercial Product Code (SCOMERPRODUCT)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCOMERPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CombinedPolicy">
<summary>
Combined policy number (NCOMBPOLICY)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCOMBPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CampaignRelease">
<summary>
Campaign reléase number (NCAMP_RELEASE)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCAMP_RELEASE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CommercialCampaign">
<summary>
Commercial Campaign code (NCAMPAIGN)..
Source 'InMotion Chile-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCAMPAIGN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DuplicityCriteriaForClaims">
<summary>
Duplicity criteria for claims (NREPINSURED)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NREPINSURED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DuplicityCriteriaForClaimsEnum">
<summary>
Duplicity criteria for claims
</summary>
<remarks>This property use a enumeration based on property 'DuplicityCriteriaForClaims'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DuplicityCriteriaForClaimsEnumText">
<summary>
Duplicity criteria for claims
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RevalType">
<summary>
Indices of revaluation (NREVALTYPE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NREVALTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RevalFrequency">
<summary>
Revaluation Frequency (NREVALFREQ)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NREVALFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RevaluationNextDate">
<summary>
Date of next revaluation (DNEXTREVAL)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.DNEXTREVAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.IndicatorOfClaimPaymentsByCreditOperations">
<summary>
Indicator of claim payments by credit operations (SCREDITIND)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCREDITIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BankCodeToClaimPayments">
<summary>
Code of the bank to claim payments (NCLBANKEXT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCLBANKEXT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BankAccountNumberToClaimPayments">
<summary>
Number of the bank account to claim payments (SCLACCOUNT)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCLACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BankAgencyToClaimPayments">
<summary>
Code of The Bank Agency to claim payments (NCLBK_AGENCY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCLBK_AGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.UniformBankCodeToClaimPayments">
<summary>
Uniform Bank code to claim payments (SCLACC_CBU)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCLACC_CBU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CodeofTheCurrencyToClaimPayments">
<summary>
Code of The Currency to claim payments (NCLCURRENCY)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCLCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CommerceNumber">
<summary>
Commerce Number (NCOMMERNUM)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCOMMERNUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CodeOfExpirationCycle">
<summary>
Code of the expiration cycle (NEXPCYCLE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NEXPCYCLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LastOfficialPolicyNumber">
<summary>
Last year policy number (SLASTOFFICIALPOL)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SLASTOFFICIALPOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CodeExpirationRule">
<summary>
Code of the expiration rule (nExpirRule)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.nExpirRule'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SKEY_CODE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SKEY_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SFILE_OWNER">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SFILE_OWNER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SCAPTURE_KEY">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCAPTURE_KEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NSALESCAMPAIGN">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NSALESCAMPAIGN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NCONSEC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SPRINTMODEL">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SPRINTMODEL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SCLIENTPRESENT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCLIENTPRESENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SPREPAGO">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SPREPAGO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NAMOUNTPAID">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NAMOUNTPAID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NSTATE_REC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NSTATE_REC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SSOURCE_CODE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SSOURCE_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NCAMP_BANK">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCAMP_BANK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NPRINTEDFLAG">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NPRINTEDFLAG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ConversionIndicator">
<summary>
Indicates that the certificate becomes an individual policy (SINDCONV)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SINDCONV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.OriginalIssueDateBeforeConversion">
<summary>
Original date when the certificate was issued before they become an individual policy (DCERTORIG)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.DCERTORIG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ConversionStatus">
<summary>
Status of the conversion process (SSTATUSCONV)..
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SSTATUSCONV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NLASTMOV_STAMP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NLASTMOV_STAMP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NLASTYEARRECEIPT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NLASTYEARRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SFILEPOLICYNAME">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SFILEPOLICYNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DPROCESSDATE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.DPROCESSDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SCITICURP">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCITICURP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NNOINTERMONTHS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NNOINTERMONTHS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.MultiAnnualPolicyIndicator">
<summary>
Multi Annual Policy Indicator (SIND_MULTIANNUAL)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SIND_MULTIANNUAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NDEPRECIATIONTABLE">
<summary>
NDEPRECIATIONTABLE.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NDEPRECIATIONTABLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ManagedPromissoryNoteScheme">
<summary>
Iindicates that the policy will be managed with the Promissory Note scheme (NPROMISSORY_NOTE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NPROMISSORY_NOTE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ExtraDaysDurationPolicyCertificate">
<summary>
Extra days of duration of the policy/certificate (NEXTRADAY)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NEXTRADAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SINDQSAMEVALUE">
<summary>
SINDQSAMEVALUE.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SINDQSAMEVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ObjetivePremiumAmount">
<summary>
Objetive Premium Amount (NOBJETIVE_PREMIUM)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NOBJETIVE_PREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.StartTimeEndValidity">
<summary>
Start time of the end of validity (NHOUREXPIR)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NHOUREXPIR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BillingBreakdownDataIndicatorPrinting">
<summary>
Billing breakdown data indicator for printing (SINDATACOBRO)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SINDATACOBRO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BrokerDataIndicatorPrinting">
<summary>
Broker data indicator for printing (SININTERMED)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SININTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CallCenterDataIndicatorPrinting">
<summary>
Call Center data indicator for printing (SINCALLCENTER)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SINCALLCENTER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DaysGraceReceiptEmission">
<summary>
Days of grace for the receipt of Emission (NLIMITDAY_EMI)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NLIMITDAY_EMI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.GraceDaysRenewalReceipt">
<summary>
Grace days for the renewal receipt (NLIMITDAY_REN)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NLIMITDAY_REN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.TypeAddress">
<summary>
Type Address (SRECTYPE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SRECTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NumFolioReplace">
<summary>
Folio Replace Number (NFOLIO_REPLACE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NFOLIO_REPLACE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CauseStateFolio">
<summary>
Code of cause to state change to the folio (NCAUREP)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCAUREP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.FileNumber">
<summary>
File Number (SFILENUMBER)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SFILENUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.FirstIndicatorPremiumFree">
<summary>
First Indicator Premium Free (SFREERECEIP)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SFREERECEIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NCAPDIF">
<summary>
.
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NCAPDIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CommercialStrategy">
<summary>
Commercial Strategy: Possible values TABLE5753 (NSTRATEGY)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NSTRATEGY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RolNotify">
<summary>
Role to Notify Possible Values TABLE5751 (NROLETONOTIFY)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NROLETONOTIFY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ViaForCommunications">
<summary>
Via for Communications Possible Values TABLE5752 (NNOTIFICATIONROUTE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.NNOTIFICATIONROUTE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ContinuityOfCoverageInd">
<summary>
Continuity of Coverage Indicator (SCONTINUITYCOVER)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SCONTINUITYCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ContinuityOfCoverageDate">
<summary>
Continuity of coverage date (DCONTINUITYCOVERDATE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.DCONTINUITYCOVERDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AutomaticCoverageInd">
<summary>
Automatic coverage indicator (SAUTOMATICCOVER)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.SAUTOMATICCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AutomaticCoverageDate">
<summary>
Automatic coverage date (DAUTOMATICCOVERDATE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'CERTIFICAT.DAUTOMATICCOVERDATE'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskInformation._Images">
<summary>
Images.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Images">
<summary>
Images.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewImagesInstance">
<summary>
Initializes the 'Images' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewImagesItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Images', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Images' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPolicyCheckingAccountInstance">
<summary>
Initializes the 'PolicyCheckingAccount' instance.
</summary>
 <returns>The 'PolicyCheckingAccount' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PolicyCheckingAccount">
<summary>
Current account of the policy (only ActiveLife Policies). collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewActiveLifeInstance">
<summary>
Initializes the 'ActiveLife' instance.
</summary>
 <returns>The 'ActiveLife' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ActiveLife">
<summary>
Specific Information on Special Life Policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPaymentAgreementByPolicyInstance">
<summary>
Initializes the 'PaymentAgreementByPolicy' instance.
</summary>
 <returns>The 'PaymentAgreementByPolicy' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaymentAgreementByPolicy">
<summary>
Payment Agreement By Policy collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewAutomobileLineOfBusinessInstance">
<summary>
Initializes the 'AutomobileLineOfBusiness' instance.
</summary>
 <returns>The 'AutomobileLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AutomobileLineOfBusiness">
<summary>
Particular information on automobile policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewBeneficiariesInstance">
<summary>
Initializes the 'Beneficiaries' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewBeneficiaryItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Beneficiaries', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Beneficiary' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Beneficiaries">
<summary>
Beneficiaries of a policy or certificate of a group. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewClausesInstance">
<summary>
Initializes the 'Clauses' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewClauseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Clauses', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Clause' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Clauses">
<summary>
Clause of a policy/Certificate. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewCommissionsInstance">
<summary>
Initializes the 'Commissions' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewCommissionItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Commissions', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Commission' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Commissions">
<summary>
Commissions of a policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewCoveragesInstance">
<summary>
Initializes the 'Coverages' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Coverages', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Coverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Coverages">
<summary>
Coverages of a policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewCreditLineOfBusinessInstance">
<summary>
Initializes the 'CreditLineOfBusiness' instance.
</summary>
 <returns>The 'CreditLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CreditLineOfBusiness">
<summary>
Particular information about credit and fidelity. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewCurrencyPoliciesInstance">
<summary>
Initializes the 'CurrencyPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewCurrencyPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'CurrencyPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'CurrencyPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CurrencyPolicies">
<summary>
Currencies associated with the policy/certificated. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewAutomaticPaymentPoliciesInstance">
<summary>
Initializes the 'AutomaticPaymentPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewAutomaticPaymentPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'AutomaticPaymentPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'AutomaticPaymentPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.AutomaticPaymentPolicies">
<summary>
Details for automatic payment by bank or credit card associated with the policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewDiscountExtraPremiumTaxOfPoliciesInstance">
<summary>
Initializes the 'DiscountExtraPremiumTaxOfPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewDiscountExtraPremiumTaxOfPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DiscountExtraPremiumTaxOfPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DiscountExtraPremiumTaxOfPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DiscountExtraPremiumTaxOfPolicies">
<summary>
Extra-premiums/technical discounts/taxes of a policy/certificate. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewFireLineOfBusinessInstance">
<summary>
Initializes the 'FireLineOfBusiness' instance.
</summary>
 <returns>The 'FireLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.FireLineOfBusiness">
<summary>
Particular information on fire policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewFranchisesInstance">
<summary>
Initializes the 'Franchises' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewFranchiseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Franchises', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Franchise' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Franchises">
<summary>
Franchise or deductible of a policy or certificate. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewFundsOfMainPolicyInstance">
<summary>
Initializes the 'FundsOfMainPolicy' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewFundOfMainPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'FundsOfMainPolicy', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'FundOfMainPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.FundsOfMainPolicy">
<summary>
 collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewGuarranteedSavingPolsInstance">
<summary>
Initializes the 'GuarranteedSavingPols' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewGuarranteedSavingsPolItem(System.Boolean)">
<summary>
Add a new item to the collection of 'GuarranteedSavingPols', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'GuarranteedSavingsPol' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.GuarranteedSavingPols">
<summary>
 collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewGuaranteedValuesInstance">
<summary>
Initializes the 'GuaranteedValues' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewGuaranteedValueItem(System.Boolean)">
<summary>
Add a new item to the collection of 'GuaranteedValues', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'GuaranteedValue' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.GuaranteedValues">
<summary>
Table of non-forfeiture values of a policy collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewHealthLineOfBusinessInstance">
<summary>
Initializes the 'HealthLineOfBusiness' instance.
</summary>
 <returns>The 'HealthLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.HealthLineOfBusiness">
<summary>
Particular information on health policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewHomeLineOfBusinessInstance">
<summary>
Initializes the 'HomeLineOfBusiness' instance.
</summary>
 <returns>The 'HomeLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.HomeLineOfBusiness">
<summary>
Particular information on homeowner policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewExtraPremiumDiscountByInsuredsInstance">
<summary>
Initializes the 'ExtraPremiumDiscountByInsureds' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewExtraPremiumDiscountByInsuredItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ExtraPremiumDiscountByInsureds', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ExtraPremiumDiscountByInsured' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ExtraPremiumDiscountByInsureds">
<summary>
Surcharges / Discounts by insured person and coverage. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewLifeLineOfBusinessInstance">
<summary>
Initializes the 'LifeLineOfBusiness' instance.
</summary>
 <returns>The 'LifeLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LifeLineOfBusiness">
<summary>
Particular data on life policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewDocumentRequestedLifePoliciesInstance">
<summary>
Initializes the 'DocumentRequestedLifePolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewDocumentRequestedLifePolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DocumentRequestedLifePolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DocumentRequestedLifePolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DocumentRequestedLifePolicies">
<summary>
Documents requested in life policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewLifeLineOfBusinessCurrentValueInstance">
<summary>
Initializes the 'LifeLineOfBusinessCurrentValue' instance.
</summary>
 <returns>The 'LifeLineOfBusinessCurrentValue' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LifeLineOfBusinessCurrentValue">
<summary>
 collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewSpecificationsForLifeInsurancesInstance">
<summary>
Initializes the 'SpecificationsForLifeInsurances' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewSpecificationsForLifeInsuranceItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SpecificationsForLifeInsurances', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SpecificationsForLifeInsurance' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SpecificationsForLifeInsurances">
<summary>
Risk selection criteria for life insurance policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewMachineryLineOfBusinessInstance">
<summary>
Initializes the 'MachineryLineOfBusiness' instance.
</summary>
 <returns>The 'MachineryLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.MachineryLineOfBusiness">
<summary>
Specifics of the machinery branch breakage. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewModulesInstance">
<summary>
Initializes the 'Modules' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewModuleItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Modules', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Module' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Modules">
<summary>
Modules of the policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewEntryPolicyInvestmentFundsInstance">
<summary>
Initializes the 'EntryPolicyInvestmentFunds' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewEntryPolicyInvestmentFundItem(System.Boolean)">
<summary>
Add a new item to the collection of 'EntryPolicyInvestmentFunds', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'EntryPolicyInvestmentFund' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.EntryPolicyInvestmentFunds">
<summary>
Entries of policies investment funds. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewMultiRiskLineOfBusinessInstance">
<summary>
Initializes the 'MultiRiskLineOfBusiness' instance.
</summary>
 <returns>The 'MultiRiskLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.MultiRiskLineOfBusiness">
<summary>
Details of the particular line of business multi risks. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewInsuredPersonsByCoveragesInstance">
<summary>
Initializes the 'InsuredPersonsByCoverages' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewInsuredPersonsByCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'InsuredPersonsByCoverages', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'InsuredPersonsByCoverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.InsuredPersonsByCoverages">
<summary>
Number of insured persons by coverage. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewOutstandingBillingTransactionsInstance">
<summary>
Initializes the 'OutstandingBillingTransactions' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewOutstandingBillingTransactionItem(System.Boolean)">
<summary>
Add a new item to the collection of 'OutstandingBillingTransactions', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'OutstandingBillingTransaction' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.OutstandingBillingTransactions">
<summary>
Entries pending for billing. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPaymentPlansForMonthlyContributionsInstance">
<summary>
Initializes the 'PaymentPlansForMonthlyContributions' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPaymentPlanForMonthlyContributionItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PaymentPlansForMonthlyContributions', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PaymentPlanForMonthlyContribution' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaymentPlansForMonthlyContributions">
<summary>
Payment plan for monthly contributions collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPolicyHistoriesInstance">
<summary>
Initializes the 'PolicyHistories' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPolicyHistoryItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PolicyHistories', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PolicyHistory' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PolicyHistories">
<summary>
History of a policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPolicyWindowInstance">
<summary>
Initializes the 'PolicyWindow' instance.
</summary>
 <returns>The 'PolicyWindow' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PolicyWindow">
<summary>
Windows associated with a policy/certificate. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPropertyInsuredsInstance">
<summary>
Initializes the 'PropertyInsureds' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPropertyInsuredItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PropertyInsureds', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PropertyInsured' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PropertyInsureds">
<summary>
Property insured under the policy/proposal/quotation. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPolicyProtectionElementsInstance">
<summary>
Initializes the 'PolicyProtectionElements' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewPolicyProtectionElementItem(System.Boolean)">
<summary>
Add a new item to the collection of 'PolicyProtectionElements', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'PolicyProtectionElement' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PolicyProtectionElements">
<summary>
Protection elements of the policy / certificate. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewReinsuranceDistributionsInstance">
<summary>
Initializes the 'ReinsuranceDistributions' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewReinsuranceDistributionItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ReinsuranceDistributions', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ReinsuranceDistribution' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ReinsuranceDistributions">
<summary>
Distribution of proportional reinsurance. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewRequestsInstance">
<summary>
Initializes the 'Requests' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewRequestItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Requests', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Request' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Requests">
<summary>
Requests for redemptions, cancellations, rehabilitation, balance, extended, and collecting loans collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewRolesInstance">
<summary>
Initializes the 'Roles' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewRoleItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Roles', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Role' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Roles">
<summary>
Role of the client in the policy/certificate. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewShipLineOfBusinessInstance">
<summary>
Initializes the 'ShipLineOfBusiness' instance.
</summary>
 <returns>The 'ShipLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ShipLineOfBusiness">
<summary>
Particular information on Ship policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewBasicInsuredAmountsInstance">
<summary>
Initializes the 'BasicInsuredAmounts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewBasicInsuredAmountItem(System.Boolean)">
<summary>
Add a new item to the collection of 'BasicInsuredAmounts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'BasicInsuredAmount' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BasicInsuredAmounts">
<summary>
Basic sums insured of the policy/certificate. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewExcludedIllnessInHealthPoliciesInstance">
<summary>
Initializes the 'ExcludedIllnessInHealthPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewExcludedIllnessInHealthPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ExcludedIllnessInHealthPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ExcludedIllnessInHealthPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ExcludedIllnessInHealthPolicies">
<summary>
Excluded illness (Health Policy). collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewTheftInstance">
<summary>
Initializes the 'Theft' instance.
</summary>
 <returns>The 'Theft' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Theft">
<summary>
Particular information on theft policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewTransportLineOfBusinessInstance">
<summary>
Initializes the 'TransportLineOfBusiness' instance.
</summary>
 <returns>The 'TransportLineOfBusiness' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.TransportLineOfBusiness">
<summary>
Particular informatin on transportation policies. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewUl_curr_acc_polInstance">
<summary>
Initializes the 'Ul_curr_acc_pol' instance.
</summary>
 <returns>The 'Ul_curr_acc_pol' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Ul_curr_acc_pol">
<summary>
 collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewSavingAccountPolicyMastersInstance">
<summary>
Initializes the 'SavingAccountPolicyMasters' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewSavingAccountPolicyMasterItem(System.Boolean)">
<summary>
Add a new item to the collection of 'SavingAccountPolicyMasters', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'SavingAccountPolicyMaster' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SavingAccountPolicyMasters">
<summary>
Savings Account Policy (Master) (APV). collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewParticularDataOfaPoliciesInstance">
<summary>
Initializes the 'ParticularDataOfaPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewParticularDataOfaPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'ParticularDataOfaPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'ParticularDataOfaPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.ParticularDataOfaPolicies">
<summary>
Particular data of a póliza collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewStipendPoliciesInstance">
<summary>
Initializes the 'StipendPolicies' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewStipendPolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'StipendPolicies', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'StipendPolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.StipendPolicies">
<summary>
Brokerage commissions and stipends per policy collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewCertificateStatusInstance">
<summary>
Initializes the 'CertificateStatus' instance.
</summary>
 <returns>The 'CertificateStatus' class instance.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CertificateStatus">
<summary>
Current state of the certificates collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewHistoryStatesOfCertificatesInstance">
<summary>
Initializes the 'HistoryStatesOfCertificates' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewHistoryStatesOfCertificateItem(System.Boolean)">
<summary>
Add a new item to the collection of 'HistoryStatesOfCertificates', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'HistoryStatesOfCertificate' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.HistoryStatesOfCertificates">
<summary>
History states of certificates collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewIndexInformationAppliedToThePolicysInstance">
<summary>
Initializes the 'IndexInformationAppliedToThePolicys' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewIndexInformationAppliedToThePolicyItem(System.Boolean)">
<summary>
Add a new item to the collection of 'IndexInformationAppliedToThePolicys', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'IndexInformationAppliedToThePolicy' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.IndexInformationAppliedToThePolicys">
<summary>
Index information applied to the policy collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Compare(InMotionGIT.Policy.Entity.Contracts.RiskInformation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RiskInformationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CancellationCodeDescription">
 <summary>
 Policy/Certificate Cancellation Code.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE13'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaymentFrequencyDescription">
 <summary>
 Payment frequency of the premium.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.StatusOfPolicyCertificateDescription">
 <summary>
 Policy/Certificate Status.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE181'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.PaymentMethodDescription">
 <summary>
 Code of the payment method.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5002'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.TypeOfDistributionChannelDescription">
 <summary>
 Code of type of distribution channel.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5532'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.CauseOfSuspensionDescription">
 <summary>
 Code of the suspension reason
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5566'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.QuotationStatusDescription">
 <summary>
 Status of the quotation/application.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5526'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.MailingPreferenceDescription">
 <summary>
 Mailing preference option of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE4008'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.DuplicityCriteriaForClaimsDescription">
 <summary>
 Duplicity criteria for claims
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5677'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.RevalTypeDescription">
 <summary>
 Indices of revaluation
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6714' on the table 'TABLE6714'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LineOfBusinessData">
 <summary>
 Particular data. Specific particular data by product.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.LineOfBusinessDataEx">
 <summary>
 Particular data complement. Specific particular data by product.
 </summary>
 <remarks>This property allows you to define a new instance if the cancellation of the existing instance in the 'LineOfBusinessData' needed.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.BillNumber">
<summary>
Number identifying the bill (NRECEIPT).
</summary>
<remarks>Datasource is 'PREMIUM.NRECEIPT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformation.NewModulesItem(System.Boolean)">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformation.Component">
<summary>
Component of the policy being processed. 
</summary>
<remarks>Datasource is 'SCOMPON'.</remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection">
 <summary>
 Collection for RiskInformation class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection.AddRiskInformation">
 <summary>
 Add an instance of class 'RiskInformation' in the RiskInformationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection.Compare(InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskInformationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RiskyActivity">
 <summary>
 Table of riskies activities of clients
 </summary>
<remarks>Data-source is 'TAB_RISKY_ACTIVITIES'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.CreateNewRiskyActivity">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._RiskyActivity">
<summary>
Risky activity code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._Risk">
<summary>
Indicate that the activity is risky
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._Status">
<summary>
Register status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.RiskyActivity._User">
<summary>
UserCode
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.RiskyActivity">
<summary>
Risky activity code (NSPECIALITY_RISK)..
</summary>
<remarks>Data-source is 'TAB_RISKY_ACTIVITIES.NSPECIALITY_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.Risk">
<summary>
Indicate that the activity is risky (SRISK)..
</summary>
<remarks>Data-source is 'TAB_RISKY_ACTIVITIES.SRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.Status">
<summary>
Register status (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_RISKY_ACTIVITIES.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.StatusEnum">
<summary>
Register status
</summary>
<remarks>This property use a enumeration based on property 'Status'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.StatusEnumText">
<summary>
Register status
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_RISKY_ACTIVITIES.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_RISKY_ACTIVITIES.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.Compare(InMotionGIT.Policy.Entity.Contracts.RiskyActivity,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RiskyActivityItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivity.RiskyActivityDescription">
 <summary>
 Risky activity code
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE16'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RiskyActivityCollection">
 <summary>
 Collection for RiskyActivity class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivityCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivityCollection.AddRiskyActivity">
 <summary>
 Add an instance of class 'RiskyActivity' in the RiskyActivityCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivityCollection.Compare(InMotionGIT.Policy.Entity.Contracts.RiskyActivityCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RiskyActivityCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivityCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RiskyActivityCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Role">
 <summary>
 Role of the client in the policy/certificate.
 </summary>
<remarks>Data-source is 'ROLES'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.CreateNewRole">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._ClientRole">
<summary>
Role of the client in the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._ProducerCode">
<summary>
Code of the producer.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._BirthDate">
<summary>
Date of birth of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._Gender">
<summary>
Gender of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._SmokerIndicator">
<summary>
Smoker client indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._RiskType">
<summary>
Type of risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._VIPInsured">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._Item">
<summary>
Item number when loading the insured person.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._InsuredStatus">
<summary>
Status of the insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._Rating">
<summary>
Rating related to the insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._TypeOfClientName">
<summary>
Type of client name.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._PositionOfTheClientRole">
<summary>
Position of the client-role within the internal coverage sequence.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._DateContinuationCoverage">
<summary>
Date from when continuation coverage applies
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._StipendContract">
<summary>
Code of the stipend contract
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._ContinuationCoverageIndicator">
<summary>
Continuation coverage indicator
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._SPRINTNAME">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._TransactionNumber">
<summary>
Transaction number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._ItemNumber">
<summary>
Item number when loading the insured person.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._IndicatorPEP">
<summary>
Politically exposed client indicator (PEP).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._MandateIndicator">
<summary>
Mandate indicator of consolidated balances.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._FixedAmountStipend">
<summary>
Fixed amount of the stipend contract for the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._PercentageStipend">
<summary>
Percentage of the stipend contract for the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Role._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'ROLES.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'ROLES.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'ROLES.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'ROLES.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'ROLES.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ClientRole">
<summary>
Role of the client in the policy. (NROLE)..
</summary>
<remarks>Data-source is 'ROLES.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ClientRoleEnum">
<summary>
Role of the client in the policy.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ClientRoleEnumText">
<summary>
Role of the client in the policy.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'ROLES.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'ROLES.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'ROLES.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'ROLES.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'ROLES.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ProducerCode">
<summary>
Code of the producer. (NINTERMED)..
</summary>
<remarks>Data-source is 'ROLES.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.BirthDate">
<summary>
Date of birth of the client. (DBIRTHDATE)..
</summary>
<remarks>Data-source is 'ROLES.DBIRTHDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.Gender">
<summary>
Gender of the client. (SSEXCLIEN)..
</summary>
<remarks>Data-source is 'ROLES.SSEXCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.GenderEnum">
<summary>
Gender of the client.
</summary>
<remarks>This property use a enumeration based on property 'Gender'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.GenderEnumText">
<summary>
Gender of the client.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.SmokerIndicator">
<summary>
Smoker client indicator. (SSMOKING)..
</summary>
<remarks>Data-source is 'ROLES.SSMOKING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.SmokerIndicatorEnum">
<summary>
Smoker client indicator.
</summary>
<remarks>This property use a enumeration based on property 'SmokerIndicator'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.SmokerIndicatorEnumText">
<summary>
Smoker client indicator.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.RiskType">
<summary>
Type of risk. (NTYPERISK)..
</summary>
<remarks>Data-source is 'ROLES.NTYPERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.RiskTypeEnum">
<summary>
Type of risk.
</summary>
<remarks>This property use a enumeration based on property 'RiskType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.RiskTypeEnumText">
<summary>
Type of risk.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.VIPInsured">
<summary>
 (SVIP)..
</summary>
<remarks>Data-source is 'ROLES.SVIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.Item">
<summary>
Item number when loading the insured person. (SITEM)..
</summary>
<remarks>Data-source is 'ROLES.SITEM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.InsuredStatus">
<summary>
Status of the insured. (NSTATUSROL)..
</summary>
<remarks>Data-source is 'ROLES.NSTATUSROL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.InsuredStatusEnum">
<summary>
Status of the insured.
</summary>
<remarks>This property use a enumeration based on property 'InsuredStatus'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.InsuredStatusEnumText">
<summary>
Status of the insured.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.Rating">
<summary>
Rating related to the insured. (NRATING)..
</summary>
<remarks>Data-source is 'ROLES.NRATING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.TypeOfClientName">
<summary>
Type of client name. (NTYPENAME)..
</summary>
<remarks>Data-source is 'ROLES.NTYPENAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.PositionOfTheClientRole">
<summary>
Position of the client-role within the internal coverage sequence. (NCOVERPOS)..
</summary>
<remarks>Data-source is 'ROLES.NCOVERPOS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.DateContinuationCoverage">
<summary>
Date from when continuation coverage applies (DCONTINUE)..
</summary>
<remarks>Data-source is 'ROLES.DCONTINUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.StipendContract">
<summary>
Code of the stipend contract (NCONTRAT_PAY)..
</summary>
<remarks>Data-source is 'ROLES.NCONTRAT_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ContinuationCoverageIndicator">
<summary>
Continuation coverage indicator (SCONTINUED)..
</summary>
<remarks>Data-source is 'ROLES.SCONTINUED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.SPRINTNAME">
<summary>
.
</summary>
<remarks>Data-source is 'ROLES.SPRINTNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.TransactionNumber">
<summary>
Transaction number. (NTRANSACTIO)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'ROLES.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ItemNumber">
<summary>
Item number when loading the insured person. (NITEM)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'ROLES.NITEM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.IndicatorPEP">
<summary>
Politically exposed client indicator (PEP). (SCLIENTPEP)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'ROLES.SCLIENTPEP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.MandateIndicator">
<summary>
Mandate indicator of consolidated balances. (SMSCONSOLIDATE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'ROLES.SMSCONSOLIDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.FixedAmountStipend">
<summary>
Fixed amount of the stipend contract for the policy. (NAMOUNT)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'ROLES.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.PercentageStipend">
<summary>
Percentage of the stipend contract for the policy. (NPERCENTAGE)..
Source 'Colombia Oficial-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'ROLES.NPERCENTAGE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.Compare(InMotionGIT.Policy.Entity.Contracts.Role,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="RoleItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Role.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.ClientRoleDescription">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE12'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.GenderDescription">
 <summary>
 Gender of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE18'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.RiskTypeDescription">
 <summary>
 Type of risk.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5639'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.InsuredStatusDescription">
 <summary>
 Status of the insured.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5561'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Role.TypeOfClientNameDescription">
 <summary>
 Type of client name.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5592'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.RoleCollection">
 <summary>
 Collection for Role class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RoleCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RoleCollection.AddRole">
 <summary>
 Add an instance of class 'Role' in the RoleCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RoleCollection.Compare(InMotionGIT.Policy.Entity.Contracts.RoleCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.RoleCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RoleCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RoleCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.RoleCollection.CompleteCompare(InMotionGIT.Policy.Entity.Contracts.RoleCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SalesExecutive">
 <summary>
 Sales executives
 </summary>
<remarks>Data-source is 'SALESEXECUTIVES'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.CreateNewSalesExecutive">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._SaleExecutiveCode">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._EffectiveDate">
<summary>
Effective date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._SirhRef">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._PrinExecFlag">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SalesExecutive._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.SaleExecutiveCode">
<summary>
 (SSALESEXECUTIVE)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.SSALESEXECUTIVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.EffectiveDate">
<summary>
Effective date (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.SirhRef">
<summary>
 (SSIRHREF)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.SSIRHREF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.PrinExecFlag">
<summary>
 (SPRINEXECFLAG)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.SPRINEXECFLAG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SALESEXECUTIVES.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.Compare(InMotionGIT.Policy.Entity.Contracts.SalesExecutive,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SalesExecutiveItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutive.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SalesExecutiveCollection">
 <summary>
 Collection for SalesExecutive class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutiveCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutiveCollection.AddSalesExecutive">
 <summary>
 Add an instance of class 'SalesExecutive' in the SalesExecutiveCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutiveCollection.Compare(InMotionGIT.Policy.Entity.Contracts.SalesExecutiveCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SalesExecutiveCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutiveCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SalesExecutiveCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster">
 <summary>
 Savings Account Policy (Master) (APV).
 </summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.CreateNewSavingAccountPolicyMaster">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._SourceAccount">
<summary>
Code of the source account (values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._CurrencyCode">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._Balance">
<summary>
Account balance amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster._EntriesSavingAccountAPVs">
<summary>
Details of savings account (APV).
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.SourceAccount">
<summary>
Code of the source account (values (NORIGIN)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.CurrencyCode">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.Balance">
<summary>
Account balance amount. (NBALANCE)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.NBALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'UL_SAVING_ACC_POL.DCOMPDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.NewEntriesSavingAccountAPVsInstance">
<summary>
Initializes the 'EntriesSavingAccountAPVs' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.NewEntriesSavingAccountAPVItem(System.Boolean)">
<summary>
Add a new item to the collection of 'EntriesSavingAccountAPVs', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'EntriesSavingAccountAPV' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.EntriesSavingAccountAPVs">
<summary>
Details of savings account (APV). collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.Compare(InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SavingAccountPolicyMasterItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMaster.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMasterCollection">
 <summary>
 Collection for SavingAccountPolicyMaster class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMasterCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMasterCollection.AddSavingAccountPolicyMaster">
 <summary>
 Add an instance of class 'SavingAccountPolicyMaster' in the SavingAccountPolicyMasterCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMasterCollection.Compare(InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMasterCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMasterCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMasterCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SavingAccountPolicyMasterCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness">
 <summary>
 Particular information on Ship policies.
 </summary>
<remarks>Data-source is 'SHIP'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.CreateNewShipLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._CancellationCode">
<summary>
Policy/Certificate Cancellation Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Transaction">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._ShipName">
<summary>
Name of the ship.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._ShipRegistration">
<summary>
Ship registration.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._MaterialOfTheHull">
<summary>
Code of material of the hull.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Color">
<summary>
Hull color
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Builder">
<summary>
Builder of the ship.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._ConstructionYear">
<summary>
Year of construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._EquivalentYear">
<summary>
Equivalent year.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._LastCareeningDate">
<summary>
Last careening date.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._LastCareeningPlace">
<summary>
Last careening place.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Depth">
<summary>
Depth measurement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Length">
<summary>
Length measurement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Width">
<summary>
Width.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._NumberOfEngines">
<summary>
Number of engines on the vessel.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._EnginesBrandAndModel">
<summary>
Model/Brand of the engines.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._SerialNumberOfEngines">
<summary>
Serial number of the engines.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Power">
<summary>
Motor horsepower.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._GrossWeightInTons">
<summary>
Gross weight in metric tons.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._NetWeightInTons">
<summary>
Net weight in metric tons.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._LoadCapacity">
<summary>
Load capacity
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Unit">
<summary>
Code of unit for capacity or weight of the items that are transported Example values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._SeaPort">
<summary>
Port where the ship is registered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._Equippment">
<summary>
Ship Equippment
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._ActionZone">
<summary>
Action zone of the ship.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._TypeOfShip">
<summary>
Type Ship Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._UseOfTheShip">
<summary>
Code of the ship usage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'SHIP.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SHIP.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SHIP.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SHIP.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'SHIP.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SHIP.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'SHIP.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'SHIP.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SHIP.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'SHIP.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'SHIP.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.CancellationCode">
<summary>
Policy/Certificate Cancellation Code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'SHIP.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SHIP.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'SHIP.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'SHIP.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SHIP.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Transaction">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'SHIP.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'SHIP.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'SHIP.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.ShipName">
<summary>
Name of the ship. (SNAME)..
</summary>
<remarks>Data-source is 'SHIP.SNAME'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.ShipRegistration">
<summary>
Ship registration. (SREGIST)..
</summary>
<remarks>Data-source is 'SHIP.SREGIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.MaterialOfTheHull">
<summary>
Code of material of the hull. (NMATERIAL)..
</summary>
<remarks>Data-source is 'SHIP.NMATERIAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Color">
<summary>
Hull color (SCOLOR)..
</summary>
<remarks>Data-source is 'SHIP.SCOLOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Builder">
<summary>
Builder of the ship. (SCONSTRUCTOR)..
</summary>
<remarks>Data-source is 'SHIP.SCONSTRUCTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.ConstructionYear">
<summary>
Year of construction. (NCONSYEAR)..
</summary>
<remarks>Data-source is 'SHIP.NCONSYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.EquivalentYear">
<summary>
Equivalent year. (NEQUIVYEAR)..
</summary>
<remarks>Data-source is 'SHIP.NEQUIVYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.LastCareeningDate">
<summary>
Last careening date. (DLASTCAREDATE)..
</summary>
<remarks>Data-source is 'SHIP.DLASTCAREDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.LastCareeningPlace">
<summary>
Last careening place. (SLASTCAREPLACE)..
</summary>
<remarks>Data-source is 'SHIP.SLASTCAREPLACE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Depth">
<summary>
Depth measurement. (NDEPTH)..
</summary>
<remarks>Data-source is 'SHIP.NDEPTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Length">
<summary>
Length measurement. (NLENGTH)..
</summary>
<remarks>Data-source is 'SHIP.NLENGTH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Width">
<summary>
Width. (NWATERS)..
</summary>
<remarks>Data-source is 'SHIP.NWATERS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.NumberOfEngines">
<summary>
Number of engines on the vessel. (NNUMMOTORS)..
</summary>
<remarks>Data-source is 'SHIP.NNUMMOTORS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.EnginesBrandAndModel">
<summary>
Model/Brand of the engines. (SMODELMOTORS)..
</summary>
<remarks>Data-source is 'SHIP.SMODELMOTORS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.SerialNumberOfEngines">
<summary>
Serial number of the engines. (SSERIALMOTORS)..
</summary>
<remarks>Data-source is 'SHIP.SSERIALMOTORS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Power">
<summary>
Motor horsepower. (NPOWER)..
</summary>
<remarks>Data-source is 'SHIP.NPOWER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.GrossWeightInTons">
<summary>
Gross weight in metric tons. (NTRB)..
</summary>
<remarks>Data-source is 'SHIP.NTRB'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.NetWeightInTons">
<summary>
Net weight in metric tons. (NTRN)..
</summary>
<remarks>Data-source is 'SHIP.NTRN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.LoadCapacity">
<summary>
Load capacity (NCAPACITY)..
</summary>
<remarks>Data-source is 'SHIP.NCAPACITY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Unit">
<summary>
Code of unit for capacity or weight of the items that are transported Example values (NUNITMESURECODE)..
</summary>
<remarks>Data-source is 'SHIP.NUNITMESURECODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.SeaPort">
<summary>
Port where the ship is registered. (SSEAPORT)..
</summary>
<remarks>Data-source is 'SHIP.SSEAPORT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Equippment">
<summary>
Ship Equippment (SDOTATION)..
</summary>
<remarks>Data-source is 'SHIP.SDOTATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.ActionZone">
<summary>
Action zone of the ship. (SACTIONZONE)..
</summary>
<remarks>Data-source is 'SHIP.SACTIONZONE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.TypeOfShip">
<summary>
Type Ship Code. (NSHIPTYPE)..
</summary>
<remarks>Data-source is 'SHIP.NSHIPTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.UseOfTheShip">
<summary>
Code of the ship usage (NSHIPUSE)..
</summary>
<remarks>Data-source is 'SHIP.NSHIPUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'SHIP.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ShipLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.MaterialOfTheHullDescription">
 <summary>
 Code of material of the hull.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9101'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.UnitDescription">
 <summary>
 Code of unit for capacity or weight of the items that are transported Example values
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6013'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.TypeOfShipDescription">
 <summary>
 Type Ship Code.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9102'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.UseOfTheShipDescription">
 <summary>
 Code of the ship usage
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE9100'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusinessCollection">
 <summary>
 Collection for ShipLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusinessCollection.AddShipLineOfBusiness">
 <summary>
 Add an instance of class 'ShipLineOfBusiness' in the ShipLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ShipLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance">
 <summary>
 Risk selection criteria for life insurance policies.
 </summary>
<remarks>Data-source is 'LIFE_P_SPECI'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.CreateNewSpecificationsForLifeInsurance">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._CoverageModule">
<summary>
Code of The Module of The Coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._ClientRole">
<summary>
Code of the client role.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._ConsecutiveNumber">
<summary>
Consecutive number.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._YoungestAge">
<summary>
Youngest age for this rate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._OldestAge">
<summary>
Oldest age for this rating.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._HighestInsuredAmount">
<summary>
Highest limit of the range of insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._LowestLimitAmountRange">
<summary>
Lowest limit of the range of insured amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._Document">
<summary>
Document related to the technical criterion required by the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._Gender">
<summary>
Gender of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.ClientRole">
<summary>
Code of the client role. (NROLE)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.ClientRoleEnum">
<summary>
Code of the client role.
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.ClientRoleEnumText">
<summary>
Code of the client role.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.ConsecutiveNumber">
<summary>
Consecutive number. (NCONSEC)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.YoungestAge">
<summary>
Youngest age for this rate. (NAGESTART)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NAGESTART'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.OldestAge">
<summary>
Oldest age for this rating. (NAGEEND)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NAGEEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.HighestInsuredAmount">
<summary>
Highest limit of the range of insured amount. (NCAPEND)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NCAPEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.LowestLimitAmountRange">
<summary>
Lowest limit of the range of insured amount. (NCAPSTART)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NCAPSTART'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.Document">
<summary>
Document related to the technical criterion required by the policy. (NCRTHECNI)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NCRTHECNI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.Gender">
<summary>
Gender of the client. (SSEXCLIEN)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.SSEXCLIEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.GenderEnum">
<summary>
Gender of the client.
</summary>
<remarks>This property use a enumeration based on property 'Gender'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.GenderEnumText">
<summary>
Gender of the client.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'LIFE_P_SPECI.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.Compare(InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SpecificationsForLifeInsuranceItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.DocumentDescription">
 <summary>
 Document related to the technical criterion required by the policy.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE32'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsurance.GenderDescription">
 <summary>
 Gender of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE18'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsuranceCollection">
 <summary>
 Collection for SpecificationsForLifeInsurance class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsuranceCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsuranceCollection.AddSpecificationsForLifeInsurance">
 <summary>
 Add an instance of class 'SpecificationsForLifeInsurance' in the SpecificationsForLifeInsuranceCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsuranceCollection.Compare(InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsuranceCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsuranceCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsuranceCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificationsForLifeInsuranceCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage">
 <summary>
 Specific risk coverage
 </summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.CreateNewSpecificRiskCoverage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._CoverageModule">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._CoverageCode">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._CodeRiskType">
<summary>
Code of the risk type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._CodeSpecificRisk">
<summary>
Code specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._InsuredAmount">
<summary>
Insured amount of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._Currency">
<summary>
Code of The Currency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._ReserveAmount">
<summary>
Reserve amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._ExcludingRiskIndicatorPerClaim">
<summary>
Excluding risk indicator per claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._IndicatorAffectedRisk">
<summary>
Risk indicator affected by the claim
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._Description">
<summary>
Description specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._FixAmountOfTheSpecificRiskCapital">
<summary>
Fix amount of the specific risk capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._PercentageOfTheSpecificRiskCapital">
<summary>
Percentage of the specific risk capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._ClientRole">
<summary>
Client role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._FreqMaxEvents">
<summary>
Frequency for maximun of events
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage._DetailSpecificRiskCoverage">
<summary>
Detail specific risk coverage
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.CoverageModule">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.CoverageCode">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.CodeRiskType">
<summary>
Code of the risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.CodeSpecificRisk">
<summary>
Code specific risk (NITEMRISK)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NITEMRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.InsuredAmount">
<summary>
Insured amount of the coverage (NCAPITAL)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.Currency">
<summary>
Code of The Currency (NCURRENCY)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.ReserveAmount">
<summary>
Reserve amount (NRESERVERISK)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NRESERVERISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.ExcludingRiskIndicatorPerClaim">
<summary>
Excluding risk indicator per claim (SINDEXCLUDE_RISK)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.SINDEXCLUDE_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.IndicatorAffectedRisk">
<summary>
Risk indicator affected by the claim (SINDAFFECTED_RISK)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.SINDAFFECTED_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.Description">
<summary>
Description specific risk (SDESCRIPTION)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.SDESCRIPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.FixAmountOfTheSpecificRiskCapital">
<summary>
Fix amount of the specific risk capital (NFIXAMOUNT_RISK)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NFIXAMOUNT_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.PercentageOfTheSpecificRiskCapital">
<summary>
Percentage of the specific risk capital (NPERCEN_RISK)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NPERCEN_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.ClientRole">
<summary>
Client role (NROLE)..
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.ClientRoleEnum">
<summary>
Client role
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.ClientRoleEnumText">
<summary>
Client role
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.FreqMaxEvents">
<summary>
Frequency for maximun of events (NFREQUEN)..
Source 'Cardif Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'SPECIFIC_RISK_COV.NFREQUEN'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.NewDetailSpecificRiskCoverageInstance">
<summary>
Initializes the 'DetailSpecificRiskCoverage' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.NewDetailSpecificRiskCoverageItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DetailSpecificRiskCoverage', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DetailSpecificRiskCoverage' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.DetailSpecificRiskCoverage">
<summary>
Detail specific risk coverage collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.Compare(InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SpecificRiskCoverageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverage.CodeRiskTypeDescription">
 <summary>
 Code of the risk type
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6785' on the table 'TABLE6785'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverageCollection">
 <summary>
 Collection for SpecificRiskCoverage class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverageCollection.AddSpecificRiskCoverage">
 <summary>
 Add an instance of class 'SpecificRiskCoverage' in the SpecificRiskCoverageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverageCollection.Compare(InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskCoverageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy">
 <summary>
 Specific risks of a group policy
 </summary>
<remarks>Data-source is 'SPECRISK_CO_P'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.CreateNewSpecificRiskGroupPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._ModuleCode">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._CoverageCode">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._ClientRole">
<summary>
Client role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._RiskTypeCode">
<summary>
Code of the risk type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._CodeOfSpecificRisk">
<summary>
Code of specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._FixAmountOfTheSpecificRiskCapital">
<summary>
Fix amount of the specific risk capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._PercentageOfTheSpecificRiskCapital">
<summary>
Percentage of the specific risk capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._InsuredAmountOfRisk">
<summary>
Insured amount of the risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._CurrencyCode">
<summary>
Code of the currency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._SpecificRiskDescription">
<summary>
Description of the specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.ModuleCode">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.CoverageCode">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.ClientRole">
<summary>
Client role (NROLE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.ClientRoleEnum">
<summary>
Client role
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.ClientRoleEnumText">
<summary>
Client role
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.RiskTypeCode">
<summary>
Code of the risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.CodeOfSpecificRisk">
<summary>
Code of specific risk (NITEMRISK)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NITEMRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.FixAmountOfTheSpecificRiskCapital">
<summary>
Fix amount of the specific risk capital (NFIXAMOUNTRISK)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NFIXAMOUNTRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.PercentageOfTheSpecificRiskCapital">
<summary>
Percentage of the specific risk capital (NPERCEN_RISK)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NPERCEN_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.InsuredAmountOfRisk">
<summary>
Insured amount of the risk (NCAPITAL)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.CurrencyCode">
<summary>
Code of the currency (NCURRENCY)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.SpecificRiskDescription">
<summary>
Description of the specific risk (SDESCRIPTION)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.SDESCRIPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_P.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SpecificRiskGroupPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicyCollection">
 <summary>
 Collection for SpecificRiskGroupPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicyCollection.AddSpecificRiskGroupPolicy">
 <summary>
 Add an instance of class 'SpecificRiskGroupPolicy' in the SpecificRiskGroupPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRiskGroupPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy">
 <summary>
 Specific risks by division of a group policy
 </summary>
<remarks>Data-source is 'SPECRISK_CO_G'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.CreateNewSpecificRisksByDivisionOfGroupPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._CodeLineBusiness">
<summary>
Code of the line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._GroupCode">
<summary>
Code of the division within the Group
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._ModuleCode">
<summary>
Code of The Module of The Coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._CoverageCode">
<summary>
Code of the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._ClientRole">
<summary>
Client role
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._RiskTypeCode">
<summary>
Code of the risk type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._CodeOfSpecificRisk">
<summary>
Code of specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._FixAmountOfTheSpecificRiskCapital">
<summary>
Fix amount of the specific risk capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._PercentageOfTheSpecificRiskCapital">
<summary>
Percentage of the specific risk capital
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._InsuredAmountOfRisk">
<summary>
Insured amount of the risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._CurrencyCode">
<summary>
Code of the currency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._SpecificRiskDescription">
<summary>
Description of the specific risk
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.TypeOfRecord">
<summary>
Type of Record (SCERTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.TypeOfRecordEnum">
<summary>
Type of Record
</summary>
<remarks>This property use a enumeration based on property 'TypeOfRecord'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.TypeOfRecordEnumText">
<summary>
Type of Record
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.CodeLineBusiness">
<summary>
Code of the line of business (NBRANCH)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.ProductCode">
<summary>
Code of the product (NPRODUCT)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.GroupCode">
<summary>
Code of the division within the Group (NGROUP)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.ModuleCode">
<summary>
Code of The Module of The Coverage (NMODULEC)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.CoverageCode">
<summary>
Code of the coverage (NCOVER)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.ClientRole">
<summary>
Client role (NROLE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.ClientRoleEnum">
<summary>
Client role
</summary>
<remarks>This property use a enumeration based on property 'ClientRole'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.ClientRoleEnumText">
<summary>
Client role
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.RiskTypeCode">
<summary>
Code of the risk type (NRISKTYPE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NRISKTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.CodeOfSpecificRisk">
<summary>
Code of specific risk (NITEMRISK)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NITEMRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.FixAmountOfTheSpecificRiskCapital">
<summary>
Fix amount of the specific risk capital (NFIXAMOUNTRISK)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NFIXAMOUNTRISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.PercentageOfTheSpecificRiskCapital">
<summary>
Percentage of the specific risk capital (NPERCEN_RISK)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NPERCEN_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.InsuredAmountOfRisk">
<summary>
Insured amount of the risk (NCAPITAL)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.CurrencyCode">
<summary>
Code of the currency (NCURRENCY)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.SpecificRiskDescription">
<summary>
Description of the specific risk (SDESCRIPTION)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.SDESCRIPTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.User">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'SPECRISK_CO_G.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SpecificRisksByDivisionOfGroupPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicyCollection">
 <summary>
 Collection for SpecificRisksByDivisionOfGroupPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicyCollection.AddSpecificRisksByDivisionOfGroupPolicy">
 <summary>
 Add an instance of class 'SpecificRisksByDivisionOfGroupPolicy' in the SpecificRisksByDivisionOfGroupPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SpecificRisksByDivisionOfGroupPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue">
 <summary>
 Squaremeter values
 </summary>
<remarks>Data-source is 'SQUAREMETER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.CreateNewSquaremeterValue">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._SquareMeterCode">
<summary>
CriteriaSquareMeterCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._EffectiveDate">
<summary>
Effective Date of the register
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._CurrencyCode">
<summary>
Code of The Currency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._SquaremeterValue">
<summary>
SquaremeterValue
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._MinimumSquareMeter">
<summary>
MinimumNumberOfSquareMeters
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._DateWhenRecordCancelled">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._ComputersDate">
<summary>
Date of the computer
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._UserCode">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SquareMeterCode">
<summary>
CriteriaSquareMeterCode (NCRICODE)..
</summary>
<remarks>Data-source is 'SQUAREMETER.NCRICODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.EffectiveDate">
<summary>
Effective Date of the register (DEFFECDATE)..
</summary>
<remarks>Data-source is 'SQUAREMETER.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.CurrencyCode">
<summary>
Code of The Currency (NCURRENCY)..
</summary>
<remarks>Data-source is 'SQUAREMETER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SquaremeterValue">
<summary>
SquaremeterValue (NSQUAREVALUE)..
</summary>
<remarks>Data-source is 'SQUAREMETER.NSQUAREVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.MinimumSquareMeter">
<summary>
MinimumNumberOfSquareMeters (NMINVALUE)..
</summary>
<remarks>Data-source is 'SQUAREMETER.NMINVALUE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.DateWhenRecordCancelled">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'SQUAREMETER.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.ComputersDate">
<summary>
Date of the computer (DCOMPDATE)..
</summary>
<remarks>Data-source is 'SQUAREMETER.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.UserCode">
<summary>
UserCode (NUSERCODE)..
</summary>
<remarks>Data-source is 'SQUAREMETER.NUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.Compare(InMotionGIT.Policy.Entity.Contracts.SquaremeterValue,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="SquaremeterValueItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValue.SquareMeterCodeDescription">
 <summary>
 CriteriaSquareMeterCode
 </summary>
 <remarks>
 This property is associated with the field 'TABLE6760' on the table 'TABLE6760'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.SquaremeterValueCollection">
 <summary>
 Collection for SquaremeterValue class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValueCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValueCollection.AddSquaremeterValue">
 <summary>
 Add an instance of class 'SquaremeterValue' in the SquaremeterValueCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValueCollection.Compare(InMotionGIT.Policy.Entity.Contracts.SquaremeterValueCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.SquaremeterValueCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValueCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.SquaremeterValueCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.StipendPolicy">
 <summary>
 Brokerage commissions and stipends per policy
 </summary>
<remarks>Data-source is 'STIPEND_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.CreateNewStipendPolicy">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._NumberPolicy">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._FigureClient">
<summary>
Code of the figure. Possible values according to table 12
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._CustomeCode">
<summary>
Customer code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._TypeOfContrat">
<summary>
Type of contract. Possible values according to table 9108
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._DateRecord">
<summary>
Date from which the record is valid
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._IntermedCode">
<summary>
Intermed of code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._TypeOfCommission">
<summary>
Type of calculation of the commission or stipend
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._ContratCode">
<summary>
Stipends contract code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._Amount">
<summary>
Amount of commission or stipend
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._UpdateTimeStamp">
<summary>
Computer date Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._CancellationDate">
<summary>
Date when the record is cancelled
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._FixedPercentageOfCommission">
<summary>
Fixed percentage of commission or stipend
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._Participation">
<summary>
Percentage of participation on the commission
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.StipendPolicy._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'STIPEND_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.NumberPolicy">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.FigureClient">
<summary>
Code of the figure. Possible values according to table 12 (NROLE)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.FigureClientEnum">
<summary>
Code of the figure. Possible values according to table 12
</summary>
<remarks>This property use a enumeration based on property 'FigureClient'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.FigureClientEnumText">
<summary>
Code of the figure. Possible values according to table 12
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.CustomeCode">
<summary>
Customer code (SCLIENT)..
</summary>
<remarks>Data-source is 'STIPEND_POL.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.TypeOfContrat">
<summary>
Type of contract. Possible values according to table 9108 (NTYPE_CONTRAT)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NTYPE_CONTRAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.DateRecord">
<summary>
Date from which the record is valid (DEFFECDATE)..
</summary>
<remarks>Data-source is 'STIPEND_POL.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.IntermedCode">
<summary>
Intermed of code (NINTERMED)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.TypeOfCommission">
<summary>
Type of calculation of the commission or stipend (SCOMMITYP)..
</summary>
<remarks>Data-source is 'STIPEND_POL.SCOMMITYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.TypeOfCommissionEnum">
<summary>
Type of calculation of the commission or stipend
</summary>
<remarks>This property use a enumeration based on property 'TypeOfCommission'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.TypeOfCommissionEnumText">
<summary>
Type of calculation of the commission or stipend
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.ContratCode">
<summary>
Stipends contract code (NCONTRAT_PAY)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NCONTRAT_PAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.Amount">
<summary>
Amount of commission or stipend (NAMOUNT)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.UpdateTimeStamp">
<summary>
Computer date Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'STIPEND_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.CancellationDate">
<summary>
Date when the record is cancelled (DNULLDATE)..
</summary>
<remarks>Data-source is 'STIPEND_POL.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.FixedPercentageOfCommission">
<summary>
Fixed percentage of commission or stipend (NPERCENT)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.Participation">
<summary>
Percentage of participation on the commission (NSHARE)..
</summary>
<remarks>Data-source is 'STIPEND_POL.NSHARE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.Compare(InMotionGIT.Policy.Entity.Contracts.StipendPolicy,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="StipendPolicyItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicy.TypeOfCommissionDescription">
 <summary>
 Type of calculation of the commission or stipend
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE47'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.StipendPolicyCollection">
 <summary>
 Collection for StipendPolicy class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicyCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicyCollection.AddStipendPolicy">
 <summary>
 Add an instance of class 'StipendPolicy' in the StipendPolicyCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicyCollection.Compare(InMotionGIT.Policy.Entity.Contracts.StipendPolicyCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.StipendPolicyCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicyCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.StipendPolicyCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu">
 <summary>
 Defining insurable risk on fire policies.
 </summary>
<remarks>Data-source is 'TAB_IN_BUS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.CreateNewTab_in_bu">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._BusinessType">
<summary>
Type of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._ActivityDetail">
<summary>
Detail number identifying the activity.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._Description">
<summary>
Description of the detail.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._ShortDescription">
<summary>
Abbreviated description of the detail.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._Usercode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._TypeOfActivity">
<summary>
Type of activity
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._Family">
<summary>
Code of the fire category.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.BusinessType">
<summary>
Type of business. (NARTICLE)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.NARTICLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.ActivityDetail">
<summary>
Detail number identifying the activity. (NDETAILART)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.NDETAILART'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.Description">
<summary>
Description of the detail. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.ShortDescription">
<summary>
Abbreviated description of the detail. (SSHORT_DES)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.SSHORT_DES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.Usercode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.TypeOfActivity">
<summary>
Type of activity (NACTIVITYTYPE)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.NACTIVITYTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.Family">
<summary>
Code of the fire category. (NFAMILY)..
</summary>
<remarks>Data-source is 'TAB_IN_BUS.NFAMILY'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.Compare(InMotionGIT.Policy.Entity.Contracts.Tab_in_bu,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="Tab_in_buItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.BusinessTypeDescription">
 <summary>
 Type of business.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE118'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.TypeOfActivityDescription">
 <summary>
 Type of activity
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7045'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_bu.FamilyDescription">
 <summary>
 Code of the fire category.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7046'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Tab_in_buCollection">
 <summary>
 Collection for Tab_in_bu class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_buCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_buCollection.AddTab_in_bu">
 <summary>
 Add an instance of class 'Tab_in_bu' in the Tab_in_buCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_buCollection.Compare(InMotionGIT.Policy.Entity.Contracts.Tab_in_buCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Tab_in_buCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_buCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Tab_in_buCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation">
 <summary>
 Temporary Table used to Calculate The Following Cover's Components Sum Insured/ Premium Amount/ Franchise/ Deductible.
 </summary>
<remarks>Data-source is 'T_INSREACA016'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.CreateNewTemporalDiscountSurchageCalculation">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SKEY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NDISEXPRC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SCHANALLO">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SDEFAULTI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SDESCRIPT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NDISEXMAX">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NDISEXMIN">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NDISEXPRA">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SREQUIRE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SROUTINE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SDISEXPRI">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SDISEXPRIDESC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SEDPERAPL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NAMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NCURRENCY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NCURR_DEXPR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SDEFPOL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NEXIST">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NORIAMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NCAUSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SCAUSEDESC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._SAGREE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NDISEXSUBPER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NDISEXADDPER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NPERCENT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation._NORIPERCENT">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SKEY">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NDISEXPRC">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NDISEXPRC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SCHANALLO">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SCHANALLO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SDEFAULTI">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SDESCRIPT">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NDISEXMAX">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NDISEXMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NDISEXMIN">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NDISEXMIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NDISEXPRA">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NDISEXPRA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SREQUIRE">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SROUTINE">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SROUTINE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SDISEXPRI">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SDISEXPRI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SDISEXPRIDESC">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SDISEXPRIDESC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SEDPERAPL">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SEDPERAPL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NAMOUNT">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NCURRENCY">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NCURR_DEXPR">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NCURR_DEXPR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SDEFPOL">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SDEFPOL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NEXIST">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NEXIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NORIAMOUNT">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NORIAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NCAUSE">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SCAUSEDESC">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SCAUSEDESC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SAGREE">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.SAGREE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NDISEXSUBPER">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NDISEXSUBPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NDISEXADDPER">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NDISEXADDPER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NPERCENT">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NPERCENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.NORIPERCENT">
<summary>
.
</summary>
<remarks>Data-source is 'T_INSREACA016.NORIPERCENT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.Compare(InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TemporalDiscountSurchageCalculationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculation.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculationCollection">
 <summary>
 Collection for TemporalDiscountSurchageCalculation class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculationCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculationCollection.AddTemporalDiscountSurchageCalculation">
 <summary>
 Add an instance of class 'TemporalDiscountSurchageCalculation' in the TemporalDiscountSurchageCalculationCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculationCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculationCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculationCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculationCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporalDiscountSurchageCalculationCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis">
 <summary>
 Temporary Province Taxes
 </summary>
<remarks>Data-source is 'TPROVTAX_BASE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.CreateNewTemporaryProvinceTaxis">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._CompoundKey">
<summary>
Compound Key
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._StateOrProvince">
<summary>
Code Of Province
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._HolderClientCode">
<summary>
Client Code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._TypeOfPerson">
<summary>
Code of the person type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._Premium">
<summary>
Premium amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._AnnualPremiumAmount">
<summary>
Annual Premium Amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._MaxAnnualPremium">
<summary>
MaxAnnualPremium
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._MaxInsuredAmount">
<summary>
Sum max insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._TotalPremium">
<summary>
Total Premium amount
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._TaxRate">
<summary>
Tax amount applied to the coverage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._LastTaxRate">
<summary>
Last Tax Rate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis._ActionType">
<summary>
Action Type
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.CompoundKey">
<summary>
Compound Key (SKEY)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.StateOrProvince">
<summary>
Code Of Province (NPROVINCE)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NPROVINCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.CertificateNumber">
<summary>
Number identifying the certificate (NCERTIF)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.HolderClientCode">
<summary>
Client Code (SCLIENTHOLDER)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.SCLIENTHOLDER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.TypeOfPerson">
<summary>
Code of the person type. (NPERSON_TYP)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NPERSON_TYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.TypeOfPersonEnum">
<summary>
Code of the person type.
</summary>
<remarks>This property use a enumeration based on property 'TypeOfPerson'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.TypeOfPersonEnumText">
<summary>
Code of the person type.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.Premium">
<summary>
Premium amount (NPREMIUM)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.AnnualPremiumAmount">
<summary>
Annual Premium Amount (NPREMIUM_AN)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NPREMIUM_AN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.MaxAnnualPremium">
<summary>
MaxAnnualPremium (NPREMIUMMAX)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NPREMIUMMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.MaxInsuredAmount">
<summary>
Sum max insured amount of the policy/certificate. (NCAPITALMAX)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NCAPITALMAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.TotalPremium">
<summary>
Total Premium amount (NPREMIUMTOT)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NPREMIUMTOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.TaxRate">
<summary>
Tax amount applied to the coverage (NIVA)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NIVA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.LastTaxRate">
<summary>
Last Tax Rate (NLASTTAX_BASE)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.NLASTTAX_BASE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.ActionType">
<summary>
Action Type (STYPE)..
</summary>
<remarks>Data-source is 'TPROVTAX_BASE.STYPE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.Compare(InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TemporaryProvinceTaxisItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxis.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxisCollection">
 <summary>
 Collection for TemporaryProvinceTaxis class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxisCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxisCollection.AddTemporaryProvinceTaxis">
 <summary>
 Add an instance of class 'TemporaryProvinceTaxis' in the TemporaryProvinceTaxisCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxisCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxisCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxisCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxisCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TemporaryProvinceTaxisCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Theft">
 <summary>
 Particular information on theft policies.
 </summary>
<remarks>Data-source is 'THEFT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.CreateNewTheft">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._Area">
<summary>
Surveillance area (in m2).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._FIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._RiskCategory">
<summary>
Code of the class of risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._RiskClass">
<summary>
Risk class.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._CancellationCode">
<summary>
Code of cancellation of the specific information record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._FirstRiskPercentage">
<summary>
Percentage insured under First risk.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._PremiumAmount">
<summary>
Certificate premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._TransactionNumber">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._NumberOfEmployeesTransportingTheValues">
<summary>
Number of employees transporting the money and/or securities.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._RiskLocation">
<summary>
Risk location.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._NumberOfWatchmen">
<summary>
Number of surveillance watchmen.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._Concatenation">
<summary>
Concatenation of the fields related to the business draft (nBusinessTy + nCommerGrp + nCodKind).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._SpecificDescription">
<summary>
Specific description of business draft.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._ConstructionClass">
<summary>
Class of construction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._nCodKind">
<summary>
Code of the Business Kind
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._NBUSINESSTY">
<summary>
Type of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._NCOMMERGRP">
<summary>
Code of &#39;commercial group&#39; that includes this business draft.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._PreBillingIndicator">
<summary>
The anticipated billing is handled for the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Theft._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'THEFT.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'THEFT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'THEFT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'THEFT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'THEFT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'THEFT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'THEFT.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.Area">
<summary>
Surveillance area (in m2). (NAREA)..
</summary>
<remarks>Data-source is 'THEFT.NAREA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.FIELDDELETEDFROMTHESYSTEM">
<summary>
FIELD DELETED FROM THE SYSTEM (NBUSSTREND)..
</summary>
<remarks>Data-source is 'THEFT.NBUSSTREND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RiskCategory">
<summary>
Code of the class of risk. (NCATEGORY)..
</summary>
<remarks>Data-source is 'THEFT.NCATEGORY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'THEFT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'THEFT.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RiskClass">
<summary>
Risk class. (NRISKCLASS)..
</summary>
<remarks>Data-source is 'THEFT.NRISKCLASS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'THEFT.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.CancellationCode">
<summary>
Code of cancellation of the specific information record. (NNULLCODE)..
</summary>
<remarks>Data-source is 'THEFT.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'THEFT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.FirstRiskPercentage">
<summary>
Percentage insured under First risk. (NINSURED)..
</summary>
<remarks>Data-source is 'THEFT.NINSURED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.PremiumAmount">
<summary>
Certificate premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'THEFT.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'THEFT.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'THEFT.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'THEFT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.TransactionNumber">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'THEFT.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'THEFT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.NumberOfEmployeesTransportingTheValues">
<summary>
Number of employees transporting the money and/or securities. (NEMPLOYEES)..
</summary>
<remarks>Data-source is 'THEFT.NEMPLOYEES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RiskLocation">
<summary>
Risk location. (NUBICATION)..
</summary>
<remarks>Data-source is 'THEFT.NUBICATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.NumberOfWatchmen">
<summary>
Number of surveillance watchmen. (NVIGILANCE)..
</summary>
<remarks>Data-source is 'THEFT.NVIGILANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'THEFT.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.Concatenation">
<summary>
Concatenation of the fields related to the business draft (nBusinessTy + nCommerGrp + nCodKind). (SCOMPLCOD)..
</summary>
<remarks>Data-source is 'THEFT.SCOMPLCOD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.SpecificDescription">
<summary>
Specific description of business draft. (SDESCBUSSI)..
</summary>
<remarks>Data-source is 'THEFT.SDESCBUSSI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.ConstructionClass">
<summary>
Class of construction. (NCONSTCAT)..
</summary>
<remarks>Data-source is 'THEFT.NCONSTCAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.nCodKind">
<summary>
Code of the Business Kind.
</summary>
<remarks>Data-source is 'THEFT.NCODKIND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.NBUSINESSTY">
<summary>
Type of business..
</summary>
<remarks>Data-source is 'THEFT.NBUSINESSTY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.NCOMMERGRP">
<summary>
Code of &#39;commercial group&#39; that includes this business draft..
</summary>
<remarks>Data-source is 'THEFT.NCOMMERGRP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'THEFT.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.PreBillingIndicator">
<summary>
The anticipated billing is handled for the policy (SPREBILLING)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'THEFT.SPREBILLING'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.Compare(InMotionGIT.Policy.Entity.Contracts.Theft,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TheftItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RiskCategoryDescription">
 <summary>
 Code of the class of risk.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE240'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RiskClassDescription">
 <summary>
 Risk class.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE241'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.RiskLocationDescription">
 <summary>
 Risk location.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE239'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.ConstructionClassDescription">
 <summary>
 Class of construction.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE233'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Theft.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Theft.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TheftCollection">
 <summary>
 Collection for Theft class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TheftCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TheftCollection.AddTheft">
 <summary>
 Add an instance of class 'Theft' in the TheftCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TheftCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TheftCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TheftCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TheftCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TheftCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportationMode">
 <summary>
 Transportation Modes
 </summary>
<remarks>Data-source is 'TRAN_WAY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.CreateNewTransportationMode">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._TransportationType">
<summary>
Code of the transportation type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._Description">
<summary>
Description of the transportation mean.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._NameOrLicense">
<summary>
Name or license identifying the transportation mean or vehicle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TRAN_WAY.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TRAN_WAY.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TRAN_WAY.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TRAN_WAY.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TRAN_WAY.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TRAN_WAY.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.TransportationType">
<summary>
Code of the transportation type. (NWAY)..
</summary>
<remarks>Data-source is 'TRAN_WAY.NWAY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'TRAN_WAY.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TRAN_WAY.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.Description">
<summary>
Description of the transportation mean. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TRAN_WAY.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TRAN_WAY.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TRAN_WAY.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.NameOrLicense">
<summary>
Name or license identifying the transportation mean or vehicle (SNAME_LICEN)..
</summary>
<remarks>Data-source is 'TRAN_WAY.SNAME_LICEN'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationMode._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationMode.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.Compare(InMotionGIT.Policy.Entity.Contracts.TransportationMode,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TransportationModeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationMode.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportationModeCollection">
 <summary>
 Collection for TransportationMode class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationModeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationModeCollection.AddTransportationMode">
 <summary>
 Add an instance of class 'TransportationMode' in the TransportationModeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationModeCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TransportationModeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationModeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationModeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationModeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade">
 <summary>
 Routes made a statement.
 </summary>
<remarks>Data-source is 'TRAN_STAGE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.CreateNewTransportationRoutesMade">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._Stage">
<summary>
Number identifying the stage of the transportation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._ArrivalDate">
<summary>
Date of Arrival.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._DepartureDate">
<summary>
Date of departure.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._NameOrLicense">
<summary>
Name or license identifying the transportation mean or vehicle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._Route">
<summary>
Code of the route covered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._sOrigen">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._CityOfDestination">
<summary>
City of destination of the route.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._SAPPLICATIONNUMBER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._SPURCHASE_ORDER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade._DetailMerchandiseTransporteds">
<summary>
Detail of the merchandise transported in a stage of the itinerary.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.Stage">
<summary>
Number identifying the stage of the transportation. (NSTAGE)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.NSTAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.ArrivalDate">
<summary>
Date of Arrival. (DDESTINDAT)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.DDESTINDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.DepartureDate">
<summary>
Date of departure. (DORIGINDAT)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.DORIGINDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.NameOrLicense">
<summary>
Name or license identifying the transportation mean or vehicle (SNAME_LICEN)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.SNAME_LICEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.Route">
<summary>
Code of the route covered. (NROUTE)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.NROUTE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.sOrigen">
<summary>
.
</summary>
<remarks>Data-source is 'TRAN_STAGE.SORIGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.CityOfDestination">
<summary>
City of destination of the route. (SDESTINATION)..
</summary>
<remarks>Data-source is 'TRAN_STAGE.SDESTINATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.SAPPLICATIONNUMBER">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TRAN_STAGE.SAPPLICATIONNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.SPURCHASE_ORDER">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TRAN_STAGE.SPURCHASE_ORDER'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.NewDetailMerchandiseTransportedsInstance">
<summary>
Initializes the 'DetailMerchandiseTransporteds' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.NewDetailMerchandiseTransportedItem(System.Boolean)">
<summary>
Add a new item to the collection of 'DetailMerchandiseTransporteds', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'DetailMerchandiseTransported' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.DetailMerchandiseTransporteds">
<summary>
Detail of the merchandise transported in a stage of the itinerary. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.Compare(InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TransportationRoutesMadeItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMade.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMadeCollection">
 <summary>
 Collection for TransportationRoutesMade class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMadeCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMadeCollection.AddTransportationRoutesMade">
 <summary>
 Add an instance of class 'TransportationRoutesMade' in the TransportationRoutesMadeCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMadeCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMadeCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMadeCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMadeCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportationRoutesMadeCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise">
 <summary>
 Transported merchandise.
 </summary>
<remarks>Data-source is 'TRAN_MERCH'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.CreateNewTransportedMerchandise">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._ClassOfMerchandise">
<summary>
Classification of the insured merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._PackagingType">
<summary>
Packaging type used for the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._Description">
<summary>
Description of the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._Amount">
<summary>
Insured amount of the merchandise in transit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._FranchiseOrDeductiblePercentage">
<summary>
Franchise/Deductible Percentage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._NumberOfItems">
<summary>
Number of items that are transported based on the specified unit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._Unit">
<summary>
Code of unit for capacity or weight of the items that are transported Example values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._FranchiseOrDeductibleType">
<summary>
It indicates whether a franchise or deductible is applied
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.ClassOfMerchandise">
<summary>
Classification of the insured merchandise. (NCLASSMERCH)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NCLASSMERCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.PackagingType">
<summary>
Packaging type used for the merchandise. (NPACKING)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NPACKING'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.Description">
<summary>
Description of the merchandise. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.Amount">
<summary>
Insured amount of the merchandise in transit. (NAMOUNT)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.FranchiseOrDeductibleIndicator">
<summary>
It indicates whether a franchise or deductible is applied (SFRANDEDI)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.SFRANDEDI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.MinimumDeductibleOrFranchiseAmount">
<summary>
Minimum franchise or deductible amount. (NMINAMOUNT)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NMINAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.FranchiseOrDeductiblePercentage">
<summary>
Franchise/Deductible Percentage. (NFRANDEDRATE)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NFRANDEDRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.NumberOfItems">
<summary>
Number of items that are transported based on the specified unit. (NQUANTRANS)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NQUANTRANS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.Unit">
<summary>
Code of unit for capacity or weight of the items that are transported Example values (NUNIT)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.NUNIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.FranchiseOrDeductibleType">
<summary>
It indicates whether a franchise or deductible is applied (SFRANTYPE)..
</summary>
<remarks>Data-source is 'TRAN_MERCH.SFRANTYPE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.Compare(InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TransportedMerchandiseItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.ClassOfMerchandiseDescription">
 <summary>
 Classification of the insured merchandise.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE232'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.PackagingTypeDescription">
 <summary>
 Packaging type used for the merchandise.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE237'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.UnitDescription">
 <summary>
 Code of unit for capacity or weight of the items that are transported Example values
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6013'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandise.FranchiseOrDeductibleTypeDescription">
 <summary>
 It indicates whether a franchise or deductible is applied
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE64'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandiseCollection">
 <summary>
 Collection for TransportedMerchandise class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandiseCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandiseCollection.AddTransportedMerchandise">
 <summary>
 Add an instance of class 'TransportedMerchandise' in the TransportedMerchandiseCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandiseCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TransportedMerchandiseCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandiseCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandiseCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportedMerchandiseCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness">
 <summary>
 Particular informatin on transportation policies.
 </summary>
<remarks>Data-source is 'TRANSPORT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.CreateNewTransportLineOfBusiness">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._LimitPerTrip">
<summary>
Maximum limit insured per trip.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._AnnualLimit">
<summary>
Annual maximum limit insured
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._Currency">
<summary>
Code of The Currency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._IssueDate">
<summary>
Date when the policy/certificate is issued
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._CancellationCode">
<summary>
Policy/Certificate Cancellation Code.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._TransactionNumber">
<summary>
Transaction number in the history of the policy (policy_his).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._PercentageForPremiumInDeposit">
<summary>
Percentage to obtain the deposit premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._DeclarationFrequency">
<summary>
Code identifying the declaration frequency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._PercentageOverInsurance">
<summary>
Percentage of over line insurance applying to the values of the merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._PremiumInDeposit">
<summary>
Deposit premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._Modality">
<summary>
Code of insured value modality.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._Division">
<summary>
Code of the &#39;division&#39; within the Group.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._RiskSituation">
<summary>
Risk situation.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._PaymentFrequency">
<summary>
Code of the payment frequency.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._NRATE_APPLY">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._TransportedMerchandises">
<summary>
Transported merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._RateAndDeductibleForTransportMerchandises">
<summary>
Rate and Deductibles for transport of merchandise.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._TransportRoutesInsureds">
<summary>
Routes insured in a policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._TransportationRoutesMades">
<summary>
Routes made a statement.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness._TransportationModes">
<summary>
Transportation Modes
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TRANSPORT.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TRANSPORT.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TRANSPORT.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TRANSPORT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TRANSPORT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TRANSPORT.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'TRANSPORT.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'TRANSPORT.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TRANSPORT.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.LimitPerTrip">
<summary>
Maximum limit insured per trip. (NMAXLIMTRIP)..
</summary>
<remarks>Data-source is 'TRANSPORT.NMAXLIMTRIP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.AnnualLimit">
<summary>
Annual maximum limit insured (NESTAMOUNT)..
</summary>
<remarks>Data-source is 'TRANSPORT.NESTAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
<remarks>Data-source is 'TRANSPORT.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.EndingDate">
<summary>
Ending date of the policy/certificate (end of the effective period). (DEXPIRDAT)..
</summary>
<remarks>Data-source is 'TRANSPORT.DEXPIRDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.IssueDate">
<summary>
Date when the policy/certificate is issued (DISSUEDAT)..
</summary>
<remarks>Data-source is 'TRANSPORT.DISSUEDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.CancellationCode">
<summary>
Policy/Certificate Cancellation Code. (NNULLCODE)..
</summary>
<remarks>Data-source is 'TRANSPORT.NNULLCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TRANSPORT.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'TRANSPORT.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'TRANSPORT.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TRANSPORT.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.TransactionNumber">
<summary>
Transaction number in the history of the policy (policy_his). (NTRANSACTIO)..
</summary>
<remarks>Data-source is 'TRANSPORT.NTRANSACTIO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PercentageForPremiumInDeposit">
<summary>
Percentage to obtain the deposit premium amount. (NDEP_RATE)..
</summary>
<remarks>Data-source is 'TRANSPORT.NDEP_RATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.DeclarationFrequency">
<summary>
Code identifying the declaration frequency (NDECLA_FREQ)..
</summary>
<remarks>Data-source is 'TRANSPORT.NDECLA_FREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.DeclarationFrequencyEnum">
<summary>
Code identifying the declaration frequency
</summary>
<remarks>This property use a enumeration based on property 'DeclarationFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.DeclarationFrequencyEnumText">
<summary>
Code identifying the declaration frequency
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PercentageOverInsurance">
<summary>
Percentage of over line insurance applying to the values of the merchandise. (NOVERLINE)..
</summary>
<remarks>Data-source is 'TRANSPORT.NOVERLINE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PremiumInDeposit">
<summary>
Deposit premium amount. (NDEP_PREM)..
</summary>
<remarks>Data-source is 'TRANSPORT.NDEP_PREM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.Modality">
<summary>
Code of insured value modality. (NMODALITYSUMINS)..
</summary>
<remarks>Data-source is 'TRANSPORT.NMODALITYSUMINS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP)..
</summary>
<remarks>Data-source is 'TRANSPORT.NGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.RiskSituation">
<summary>
Risk situation. (NSITUATION)..
</summary>
<remarks>Data-source is 'TRANSPORT.NSITUATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PaymentFrequency">
<summary>
Code of the payment frequency. (NPAYFREQ)..
</summary>
<remarks>Data-source is 'TRANSPORT.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PaymentFrequencyEnum">
<summary>
Code of the payment frequency.
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PaymentFrequencyEnumText">
<summary>
Code of the payment frequency.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NRATE_APPLY">
<summary>
.
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TRANSPORT.NRATE_APPLY'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewTransportedMerchandisesInstance">
<summary>
Initializes the 'TransportedMerchandises' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewTransportedMerchandiseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'TransportedMerchandises', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'TransportedMerchandise' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.TransportedMerchandises">
<summary>
Transported merchandise. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewRateAndDeductibleForTransportMerchandisesInstance">
<summary>
Initializes the 'RateAndDeductibleForTransportMerchandises' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewRateAndDeductibleForTransportMerchandiseItem(System.Boolean)">
<summary>
Add a new item to the collection of 'RateAndDeductibleForTransportMerchandises', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'RateAndDeductibleForTransportMerchandise' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.RateAndDeductibleForTransportMerchandises">
<summary>
Rate and Deductibles for transport of merchandise. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewTransportRoutesInsuredsInstance">
<summary>
Initializes the 'TransportRoutesInsureds' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewTransportRoutesInsuredItem(System.Boolean)">
<summary>
Add a new item to the collection of 'TransportRoutesInsureds', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'TransportRoutesInsured' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.TransportRoutesInsureds">
<summary>
Routes insured in a policy. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewTransportationRoutesMadesInstance">
<summary>
Initializes the 'TransportationRoutesMades' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewTransportationRoutesMadeItem(System.Boolean)">
<summary>
Add a new item to the collection of 'TransportationRoutesMades', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'TransportationRoutesMade' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.TransportationRoutesMades">
<summary>
Routes made a statement. collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewTransportationModesInstance">
<summary>
Initializes the 'TransportationModes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.NewTransportationModeItem(System.Boolean)">
<summary>
Add a new item to the collection of 'TransportationModes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'TransportationMode' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.TransportationModes">
<summary>
Transportation Modes collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.Compare(InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TransportLineOfBusinessItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.DeclarationFrequencyDescription">
 <summary>
 Code identifying the declaration frequency
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.ModalityDescription">
 <summary>
 Code of insured value modality.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6034'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PaymentFrequencyDescription">
 <summary>
 Code of the payment frequency.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE36'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusiness.PropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusinessCollection">
 <summary>
 Collection for TransportLineOfBusiness class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusinessCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusinessCollection.AddTransportLineOfBusiness">
 <summary>
 Add an instance of class 'TransportLineOfBusiness' in the TransportLineOfBusinessCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusinessCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusinessCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusinessCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusinessCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportLineOfBusinessCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured">
 <summary>
 Routes insured in a policy.
 </summary>
<remarks>Data-source is 'TRAN_ROUTE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.CreateNewTransportRoutesInsured">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._RecordEffectiveDate">
<summary>
Date from which the record is valid.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._Route">
<summary>
Code of the route covered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._CancellationDate">
<summary>
Date when the record is cancelled.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._RouteType">
<summary>
Code of type of route.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._NoteID">
<summary>
Number of the note containing the comments.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._TransportationType">
<summary>
Transportation type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._dEffecdateOld">
<summary>
pending
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.RecordEffectiveDate">
<summary>
Date from which the record is valid. (DEFFECDATE)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.DEFFECDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.Route">
<summary>
Code of the route covered. (NROUTE)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NROUTE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.CancellationDate">
<summary>
Date when the record is cancelled. (DNULLDATE)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.DNULLDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.RouteType">
<summary>
Code of type of route. (NTYPROUTE)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NTYPROUTE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.NoteID">
<summary>
Number of the note containing the comments. (NNOTENUM)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NNOTENUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.TransportationType">
<summary>
Transportation type. (NTRANSPTYPE)..
</summary>
<remarks>Data-source is 'TRAN_ROUTE.NTRANSPTYPE'.</remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured._Notes">
<summary>
Notes.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.Notes">
<summary>
Notes.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.NewNotesInstance">
<summary>
Initializes the 'Notes' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.NewNoteItem(System.Boolean)">
<summary>
Add a new item to the collection of 'Notes', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'Notes' class, previously added to the collection.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.Compare(InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TransportRoutesInsuredItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.RouteTypeDescription">
 <summary>
 Code of type of route.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE8003'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsured.TransportationTypeDescription">
 <summary>
 Transportation type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE6031'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsuredCollection">
 <summary>
 Collection for TransportRoutesInsured class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsuredCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsuredCollection.AddTransportRoutesInsured">
 <summary>
 Add an instance of class 'TransportRoutesInsured' in the TransportRoutesInsuredCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsuredCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsuredCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsuredCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsuredCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TransportRoutesInsuredCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TRenewPol">
 <summary>
 Temporary Table with processed record by The Policy Renewal Process.
 </summary>
<remarks>Data-source is 'TRENEWPOL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.CreateNewTRenewPol">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._CompoundKey">
<summary>
Compound Key.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._PolicyNumber">
<summary>
Number identifying the policy/ quotation/ application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._CertificateID">
<summary>
Number identifying the Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._ExpiryDate">
<summary>
Expiry date of the policy/certificate (End of the effective period).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._InsuredAmount">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._AnnualPremium">
<summary>
Annual Premium.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._IncidenceType">
<summary>
Incidence Type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._LineOfBusiness">
<summary>
Code of The Line of Business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._OutstandingBillsAmount">
<summary>
Number of outstanding bills
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._PaidClaims">
<summary>
Number of paid claims
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._PaidClaimAmount">
<summary>
Paid amount of claims
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._OutstandingClaims">
<summary>
Number of outstanding claims
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._OutstandingClaimAmount">
<summary>
Outstanding amount of claims
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._OutstandingBills">
<summary>
Number of outstanding bills
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._Claims">
<summary>
Number of claims
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._InsuredAmountCapital">
<summary>
Sum insured amount of the policy/certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._PremiumAmount">
<summary>
Premium amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._sText_err">
<summary>
Cadena de 10 caracteres.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._EffectiveDate">
<summary>
Effective Date of The Policy/Certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._BranchOffice">
<summary>
Code of the Branch Office
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._AgencyCode">
<summary>
Code of the agency
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._OfficeCode">
<summary>
Code of Office.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._ProducerCode">
<summary>
Code of the main producer of the policy.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._CurrencyCode">
<summary>
Code of the currency of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._PaymentFrequency">
<summary>
Payment frequency of the policy
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._BillType">
<summary>
Type of bills for groups
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.TRenewPol._NPREMIUMPROYECT">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.CompoundKey">
<summary>
Compound Key. (SKEY)..
</summary>
<remarks>Data-source is 'TRENEWPOL.SKEY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.PolicyNumber">
<summary>
Number identifying the policy/ quotation/ application. (NPOLICY)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.CertificateID">
<summary>
Number identifying the Certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.ClientID">
<summary>
Code of the client. (SCLIENT)..
</summary>
<remarks>Data-source is 'TRENEWPOL.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.ExpiryDate">
<summary>
Expiry date of the policy/certificate (End of the effective period). (DEXPIRDATE)..
</summary>
<remarks>Data-source is 'TRENEWPOL.DEXPIRDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.InsuredAmount">
<summary>
Sum insured amount of the policy/certificate. (NINSAMOUNT)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NINSAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.AnnualPremium">
<summary>
Annual Premium. (NPREMIUNAN)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NPREMIUNAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.IncidenceType">
<summary>
Incidence Type. (NINCIDENTYP)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NINCIDENTYP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.LineOfBusiness">
<summary>
Code of The Line of Business. (NBRANCH)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.OutstandingBillsAmount">
<summary>
Number of outstanding bills (NPENRECAMO)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NPENRECAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.PaidClaims">
<summary>
Number of paid claims (NQPAYCLAIM)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NQPAYCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.PaidClaimAmount">
<summary>
Paid amount of claims (NPAYCLAIMAMO)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NPAYCLAIMAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.OutstandingClaims">
<summary>
Number of outstanding claims (NQPENCLAIM)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NQPENCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.OutstandingClaimAmount">
<summary>
Outstanding amount of claims (NPENCLAIMAMO)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NPENCLAIMAMO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.OutstandingBills">
<summary>
Number of outstanding bills (NQRECPEN)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NQRECPEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.Claims">
<summary>
Number of claims (NQCLAIM)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NQCLAIM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.InsuredAmountCapital">
<summary>
Sum insured amount of the policy/certificate. (NCAPITAL)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.PremiumAmount">
<summary>
Premium amount. (NPREMIUM)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.sText_err">
<summary>
Cadena de 10 caracteres..
</summary>
<remarks>Data-source is 'TRENEWPOL.STEXT_ERR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.EffectiveDate">
<summary>
Effective Date of The Policy/Certificate. (DSTARTDATE)..
</summary>
<remarks>Data-source is 'TRENEWPOL.DSTARTDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.BranchOffice">
<summary>
Code of the Branch Office (NOFFICE)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NOFFICE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.AgencyCode">
<summary>
Code of the agency (NAGENCY)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NAGENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.OfficeCode">
<summary>
Code of Office. (NOFFICEAGEN)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NOFFICEAGEN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.ProducerCode">
<summary>
Code of the main producer of the policy. (NINTERMED)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NINTERMED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.CurrencyCode">
<summary>
Code of the currency of the policy (NCURRENCY)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.PaymentFrequency">
<summary>
Payment frequency of the policy (NPAYFREQ)..
</summary>
<remarks>Data-source is 'TRENEWPOL.NPAYFREQ'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.PaymentFrequencyEnum">
<summary>
Payment frequency of the policy
</summary>
<remarks>This property use a enumeration based on property 'PaymentFrequency'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.PaymentFrequencyEnumText">
<summary>
Payment frequency of the policy
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.BillType">
<summary>
Type of bills for groups (SCOLINVOT)..
</summary>
<remarks>Data-source is 'TRENEWPOL.SCOLINVOT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPol.NPREMIUMPROYECT">
<summary>
.
</summary>
<remarks>Data-source is 'TRENEWPOL.NPREMIUMPROYECT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.Compare(InMotionGIT.Policy.Entity.Contracts.TRenewPol,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="TRenewPolItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPol.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.TRenewPolCollection">
 <summary>
 Collection for TRenewPol class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPolCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPolCollection.AddTRenewPol">
 <summary>
 Add an instance of class 'TRenewPol' in the TRenewPolCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPolCollection.Compare(InMotionGIT.Policy.Entity.Contracts.TRenewPolCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.TRenewPolCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPolCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.TRenewPolCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol">
 <summary>
 
 </summary>
<remarks>Data-source is 'UL_CURR_ACC_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.CreateNewUl_curr_acc_pol">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._nCurrency">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._nBalance">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._nCredit">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._nDebit">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._nUsercode">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._dCompdate">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._nLed_compan">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._sAccount">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._sAux_accoun">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._DVP_NEG">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._LastMonthlyChargeDate">
<summary>
Last date of monthly charges
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol._UnitLinkEntrySavingAccounts">
<summary>
Entries of the saving account of the non tradicional policies (Unit Link).
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.nCurrency">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.nBalance">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NBALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.nCredit">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.nDebit">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NDEBIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.nUsercode">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.dCompdate">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.nLed_compan">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.NLED_COMPAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.sAccount">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.SACCOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.sAux_accoun">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.SAUX_ACCOUN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.DVP_NEG">
<summary>
.
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.DVP_NEG'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.LastMonthlyChargeDate">
<summary>
Last date of monthly charges (DLASTDATE)..
Source 'SMG Life Argentina-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_CURR_ACC_POL.DLASTDATE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.NewUnitLinkEntrySavingAccountsInstance">
<summary>
Initializes the 'UnitLinkEntrySavingAccounts' collection.
</summary>
 <returns>The collection initialized.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.NewUnitLinkEntrySavingAccountItem(System.Boolean)">
<summary>
Add a new item to the collection of 'UnitLinkEntrySavingAccounts', allowing or not, that this collection is already initialized.
</summary>
 <param name="clear">Indicates that you must first initialize the collection.</param>
 <returns>Instance of the 'UnitLinkEntrySavingAccount' class, previously added to the collection.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.UnitLinkEntrySavingAccounts">
<summary>
Entries of the saving account of the non tradicional policies (Unit Link). collection.
</summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.Compare(InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="Ul_curr_acc_polItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_pol.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_polCollection">
 <summary>
 Collection for Ul_curr_acc_pol class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_polCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_polCollection.AddUl_curr_acc_pol">
 <summary>
 Add an instance of class 'Ul_curr_acc_pol' in the Ul_curr_acc_polCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_polCollection.Compare(InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_polCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_polCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_polCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Ul_curr_acc_polCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage">
 <summary>
 Underwriting case
 </summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CreateNewUnderwritingCaseStage">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._CaseNumber">
<summary>
Case number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._IDOfMassiveLoad">
<summary>
ID of massive load
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._CaseType">
<summary>
Case type
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._ProposalNumber">
<summary>
Proposal number
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._ProposalID">
<summary>
Number identifying the Proposal
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._TypeOfLineOfBusiness">
<summary>
Code of the type of line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._TypeOfRecord">
<summary>
Type of Record
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._LineOfBusinessCode">
<summary>
Code of line of business
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._ProductCode">
<summary>
Code of the product
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._CertificateNumber">
<summary>
Number identifying the certificate
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._CreationDate">
<summary>
Creation date of the case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._User">
<summary>
UserCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._CloseDate">
<summary>
Closed date of the case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._CaseStatus">
<summary>
Case Status
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._DecisionOfTheCase">
<summary>
Decision of the case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._RejectionReason">
<summary>
Case Rejection Reason
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._CaseStage">
<summary>
Case stage
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._LastReleaseID">
<summary>
Last Release ID
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._SubscriberCode">
<summary>
Subscriber code
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._LockingUser">
<summary>
Code of the user who locked the case
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._LockingDate">
<summary>
Date of case locking
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._IndicatorOfManualOrAutomaticDecision">
<summary>
Indicator of manual or automatic decision
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._CaseCreationCase">
<summary>
Case creation date
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._LastActualizationDate">
<summary>
Date of last actualization
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage._LastActualizationUser">
<summary>
User of last actualization
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CaseNumber">
<summary>
Case number (UNDERWRITINGCASEID)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.UNDERWRITINGCASEID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.IDOfMassiveLoad">
<summary>
ID of massive load (BATCHNUMBER)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.BATCHNUMBER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CaseType">
<summary>
Case type (UNDERWRITINGCASETYPE)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.UNDERWRITINGCASETYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.ProposalNumber">
<summary>
Proposal number (PROPOSALID)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.PROPOSALID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.ProposalID">
<summary>
Number identifying the Proposal (FULLPROPOSALID)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.FULLPROPOSALID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.TypeOfLineOfBusiness">
<summary>
Code of the type of line of business.
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.TYPEOFLINEOFBUSINESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.TypeOfRecord">
<summary>
Type of Record (RECORDTYPE)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.RECORDTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.LineOfBusinessCode">
<summary>
Code of line of business (LINEOFBUSINESS)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.LINEOFBUSINESS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.ProductCode">
<summary>
Code of the product (PRODUCT)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.PRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.NumberPolicyQuotationApplication">
<summary>
Number identifying the Policy/Quotation/Application. (POLICYID)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.POLICYID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CertificateNumber">
<summary>
Number identifying the certificate (CERTIFICATEID)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.CERTIFICATEID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CreationDate">
<summary>
Creation date of the case.
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.CREATIONDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.User">
<summary>
UserCode (CREATORUSERCODE)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.CREATORUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CloseDate">
<summary>
Closed date of the case.
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.CLOSEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CaseStatus">
<summary>
Case Status (STATUS)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.STATUS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.DecisionOfTheCase">
<summary>
Decision of the case (DECISION)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.DECISION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.RejectionReason">
<summary>
Case Rejection Reason (REASONOFREJECTION)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.REASONOFREJECTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CaseStage">
<summary>
Case stage (STAGE)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.STAGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.LastReleaseID">
<summary>
Last Release ID (LASTRELEASE)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.LASTRELEASE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.SubscriberCode">
<summary>
Subscriber code (UNDERWRITERID)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.UNDERWRITERID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.LockingUser">
<summary>
Code of the user who locked the case (LOCKEDBY)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.LOCKEDBY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.LockingDate">
<summary>
Date of case locking (LOCKEDON)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.LOCKEDON'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.IndicatorOfManualOrAutomaticDecision">
<summary>
Indicator of manual or automatic decision (MANUALORAUTOMATIC)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.MANUALORAUTOMATIC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.CaseCreationCase">
<summary>
Case creation date (OPENDATE)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.OPENDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.LastActualizationDate">
<summary>
Date of last actualization (UPDATEDATE)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.UPDATEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.LastActualizationUser">
<summary>
User of last actualization (UPDATEUSERCODE)..
</summary>
<remarks>Data-source is 'UNDERWRITINGCASE_STAGE.UPDATEUSERCODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.Compare(InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="UnderwritingCaseStageItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStage.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStageCollection">
 <summary>
 Collection for UnderwritingCaseStage class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStageCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStageCollection.AddUnderwritingCaseStage">
 <summary>
 Add an instance of class 'UnderwritingCaseStage' in the UnderwritingCaseStageCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStageCollection.Compare(InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStageCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStageCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStageCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnderwritingCaseStageCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount">
 <summary>
 Entries of the saving account of the non tradicional policies (Unit Link).
 </summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.CreateNewUnitLinkEntrySavingAccount">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._RecordType">
<summary>
Type of Record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._LineOfBusiness">
<summary>
Code of the line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._ProductCode">
<summary>
Code of the product.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._PolicyID">
<summary>
Number identifying the Policy/Quotation/Application.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._CertificateID">
<summary>
Number identifying the certificate.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._TransactionDate">
<summary>
Date of the transaction.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._ConsecutiveNumber">
<summary>
Consecutive number identifying the record as unique.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._EntryType">
<summary>
Type of current account entry.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._nCurrency">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._SourceAccount">
<summary>
Code of the source account (Values
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._CreditAmount">
<summary>
Amount of the entry in case of credit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._DebitAmount">
<summary>
Amount of the entry in case of debit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._BillNumber">
<summary>
Number identifying the bill
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._PayingClient">
<summary>
Code of the client to which the payment is applied to in case of credit entries
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._FinancialInstitution">
<summary>
Financial institution from which the deposits are coming from.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._ProcessedForCommissions">
<summary>
It indicates if the record was processed for commissions.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._DepositOriginalDate">
<summary>
Original date of the deposit.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._ContributionInvested">
<summary>
It indicates if the contribution has been invested or not.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._PostingDate">
<summary>
Date when the entry was posted in the accounting books.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._AccountingConsecutiveNumber">
<summary>
Unique identifier for the accounting process.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._ClientID">
<summary>
Code of the client.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._ReferenceToTheRecordThatOriginatesTheTransaction">
<summary>
Reference to the record that originates the transaction of purchase or sale.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._CoverageCode">
<summary>
Code of the coverage.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._CoverageModule">
<summary>
Code of the module holding the coverage related to the charge.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._TaxAmount">
<summary>
Tax amount.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._AccountingLineOfBusiness">
<summary>
Code of the accounting line of business.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._DLEDGERDAT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._SREVERSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NID_REVERSE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._SPREINV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NREQUEST_NUM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NIDPROCES">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NAMOUNT_INV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._DVALUEDATE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NLOAD_COD">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NOBLIGATION">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NTYP_PROFITWORKER">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NIDPROCES_REV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NCAUSE_REV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._SPARTCHARG_REV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NVP_CHARGE_REV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._SPROCESSIND_REV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NAMOUNTRES_REV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NFUNDS_REV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._SPENDING_REV">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NCREDIT_AUX">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._TransferedMovement">
<summary>
Indicator of movement transfered.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._TransferedAmount">
<summary>
Transfered amount. (apv).
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._MovementType">
<summary>
Type of movement (Credit/Debit). The possible values as per table 5713.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NEXCHANGE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NCAPITAL_RISK">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NAMOUNT_DIFF">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NTAX_AMOUNT">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NUPDATE_BALANCE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NNEWUPDATE_BALANCE">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NBALANCE_NOM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NUPDATE_FACTOR">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NINTERES_NOM">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NINTERNOM_ACC">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NINTERES_REAL">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NINTER_REALACCU">
<summary>

</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount._NACTUAL_LOSS">
<summary>

</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.RecordType">
<summary>
Type of Record. (SCERTYPE)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.SCERTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.RecordTypeEnum">
<summary>
Type of Record.
</summary>
<remarks>This property use a enumeration based on property 'RecordType'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.RecordTypeEnumText">
<summary>
Type of Record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.LineOfBusiness">
<summary>
Code of the line of business. (NBRANCH)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NBRANCH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.ProductCode">
<summary>
Code of the product. (NPRODUCT)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NPRODUCT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.TransactionDate">
<summary>
Date of the transaction. (DOPERDATE)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.DOPERDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.ConsecutiveNumber">
<summary>
Consecutive number identifying the record as unique. (NIDCONSEC)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NIDCONSEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.EntryType">
<summary>
Type of current account entry. (NTYPE_MOVE)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NTYPE_MOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.nCurrency">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SourceAccount">
<summary>
Code of the source account (Values (NORIGIN)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.CreditAmount">
<summary>
Amount of the entry in case of credit. (NCREDIT)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NCREDIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.DebitAmount">
<summary>
Amount of the entry in case of debit. (NDEBIT)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NDEBIT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.BillNumber">
<summary>
Number identifying the bill (NRECEIPT)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.PayingClient">
<summary>
Code of the client to which the payment is applied to in case of credit entries (SPAYER)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.SPAYER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.FinancialInstitution">
<summary>
Financial institution from which the deposits are coming from. (NINSTITUTION)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NINSTITUTION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.ProcessedForCommissions">
<summary>
It indicates if the record was processed for commissions. (NINTERMEI)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NINTERMEI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.DepositOriginalDate">
<summary>
Original date of the deposit. (DDATE_ORIGIN)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.DDATE_ORIGIN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.ContributionInvested">
<summary>
It indicates if the contribution has been invested or not. (NINVESTED)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NINVESTED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.PostingDate">
<summary>
Date when the entry was posted in the accounting books. (DPOSTED)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.DPOSTED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.AccountingConsecutiveNumber">
<summary>
Unique identifier for the accounting process. (NID)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NID'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.ClientID">
<summary>
Code of the client. (SCLIENT_DEST)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.SCLIENT_DEST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.ReferenceToTheRecordThatOriginatesTheTransaction">
<summary>
Reference to the record that originates the transaction of purchase or sale. (NIDCONSEC_REF)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NIDCONSEC_REF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.CoverageCode">
<summary>
Code of the coverage. (NCOVER)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.CoverageModule">
<summary>
Code of the module holding the coverage related to the charge. (NMODULEC)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.TaxAmount">
<summary>
Tax amount. (NTAX)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NTAX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.AccountingLineOfBusiness">
<summary>
Code of the accounting line of business. (NBRANCH_LED)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NBRANCH_LED'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.DLEDGERDAT">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.DLEDGERDAT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SREVERSE">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.SREVERSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NID_REVERSE">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NID_REVERSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SPREINV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.SPREINV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NREQUEST_NUM">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NREQUEST_NUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NIDPROCES">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NIDPROCES'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NAMOUNT_INV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NAMOUNT_INV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.DVALUEDATE">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.DVALUEDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NLOAD_COD">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NLOAD_COD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NOBLIGATION">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NOBLIGATION'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NTYP_PROFITWORKER">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NTYP_PROFITWORKER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NIDPROCES_REV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NIDPROCES_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NCAUSE_REV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NCAUSE_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SPARTCHARG_REV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.SPARTCHARG_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NVP_CHARGE_REV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NVP_CHARGE_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SPROCESSIND_REV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.SPROCESSIND_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NAMOUNTRES_REV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NAMOUNTRES_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NFUNDS_REV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NFUNDS_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SPENDING_REV">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.SPENDING_REV'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NCREDIT_AUX">
<summary>
.
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NCREDIT_AUX'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.TransferedMovement">
<summary>
Indicator of movement transfered. (STRANSFER)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.STRANSFER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.TransferedAmount">
<summary>
Transfered amount. (apv). (NAMO_TRANSFER)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NAMO_TRANSFER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.MovementType">
<summary>
Type of movement (Credit/Debit). The possible values as per table 5713. (NTYPE)..
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NEXCHANGE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NEXCHANGE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NCAPITAL_RISK">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NCAPITAL_RISK'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NAMOUNT_DIFF">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NAMOUNT_DIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NTAX_AMOUNT">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NTAX_AMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NUPDATE_BALANCE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NUPDATE_BALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NNEWUPDATE_BALANCE">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NNEWUPDATE_BALANCE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NBALANCE_NOM">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NBALANCE_NOM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NUPDATE_FACTOR">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NUPDATE_FACTOR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NINTERES_NOM">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NINTERES_NOM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NINTERNOM_ACC">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NINTERNOM_ACC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NINTERES_REAL">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NINTERES_REAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NINTER_REALACCU">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NINTER_REALACCU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.NACTUAL_LOSS">
<summary>
.
Source 'Insignia Life México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'UL_MOVE_ACC_POL.NACTUAL_LOSS'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.Compare(InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="UnitLinkEntrySavingAccountItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.EntryTypeDescription">
 <summary>
 Type of current account entry.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5708'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccount.SourceAccountDescription">
 <summary>
 Code of the source account (Values
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE5633'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccountCollection">
 <summary>
 Collection for UnitLinkEntrySavingAccount class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccountCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccountCollection.AddUnitLinkEntrySavingAccount">
 <summary>
 Add an instance of class 'UnitLinkEntrySavingAccount' in the UnitLinkEntrySavingAccountCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccountCollection.Compare(InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccountCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccountCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccountCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.UnitLinkEntrySavingAccountCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto">
 <summary>
 Vehicles table.
 </summary>
<remarks>Data-source is 'TAB_AU_VEH'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.CreateNewVehiclesInAuto">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._VehicleCode">
<summary>
Code of The Insured Vehicle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._Description">
<summary>
Description of the vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._NationalOrImport">
<summary>
National or Import vehicle indicator.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._Make">
<summary>
Make of the vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._RecordStatus">
<summary>
Status of the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._VehicleModel">
<summary>
Vehicle Model.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._VehicleType">
<summary>
Vehicle type.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._Seats">
<summary>
Number of seats in the vehicle insured.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._GrossWeight">
<summary>
Gross weight in metric tons.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._TypeOfVehicleSOAP">
<summary>
Type of vehicle SOAP
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._AMISCode">
<summary>
AMISCode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._CESVICode">
<summary>
CESVICode
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._StatisticalGroup">
<summary>
StatisticalGroup
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto._AFIRMECode">
<summary>
AFIRMECode
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.VehicleCode">
<summary>
Code of The Insured Vehicle (SVEHCODE)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.SVEHCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.Description">
<summary>
Description of the vehicle. (SDESCRIPT)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.NationalOrImport">
<summary>
National or Import vehicle indicator. (NNATIONAL)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.NNATIONAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.Make">
<summary>
Make of the vehicle. (NVEHBRAND)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.NVEHBRAND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.RecordStatus">
<summary>
Status of the record. (SSTATREGT)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.SSTATREGT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.RecordStatusEnum">
<summary>
Status of the record.
</summary>
<remarks>This property use a enumeration based on property 'RecordStatus'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.RecordStatusEnumText">
<summary>
Status of the record.
</summary>
<remarks>This helper property is used in decision table on Workflows</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.VehicleModel">
<summary>
Vehicle Model. (SVEHMODEL)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.SVEHMODEL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.VehicleType">
<summary>
Vehicle type. (NVEHTYPE)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.NVEHTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.Seats">
<summary>
Number of seats in the vehicle insured. (NVEHPLACE)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.NVEHPLACE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.GrossWeight">
<summary>
Gross weight in metric tons. (NVEHPMA)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.NVEHPMA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.TypeOfVehicleSOAP">
<summary>
Type of vehicle SOAP (NSOAP_VEHTYPE)..
</summary>
<remarks>Data-source is 'TAB_AU_VEH.NSOAP_VEHTYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.AMISCode">
<summary>
AMISCode (SAMIS_CODE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_AU_VEH.SAMIS_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.CESVICode">
<summary>
CESVICode (SCESVI_CODE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_AU_VEH.SCESVI_CODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.StatisticalGroup">
<summary>
StatisticalGroup (NSTATISTICALGROUP)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_AU_VEH.NSTATISTICALGROUP'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.AFIRMECode">
<summary>
AFIRMECode (SAFIRME_CODE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_AU_VEH.SAFIRME_CODE'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.Compare(InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="VehiclesInAutoItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.MakeDescription">
 <summary>
 Make of the vehicle.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE7042'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.VehicleTypeDescription">
 <summary>
 Vehicle type.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE226'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.VehicleTypeDescript">
<summary>
Vehicle type. (TABLE226.SDESCRIPT).
</summary>
<remarks>Datasource is 'TABLE226.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.MakeDescript">
<summary>
Vehicle type. (TABLE7042 .SDESCRIPT).
</summary>
<remarks>Datasource is 'TABLE7042.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAuto.Limit">
<summary>
Commercial value of the vehicle in the year specified (NCAPITAL).
</summary>
<remarks>Datasource is 'TAB_AU_VAL.NCAPITAL'.</remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.VehiclesInAutoCollection">
 <summary>
 Collection for VehiclesInAuto class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAutoCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAutoCollection.AddVehiclesInAuto">
 <summary>
 Add an instance of class 'VehiclesInAuto' in the VehiclesInAutoCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAutoCollection.Compare(InMotionGIT.Policy.Entity.Contracts.VehiclesInAutoCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInAutoCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAutoCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInAutoCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto">
 <summary>
 Value of vehicles table.
 </summary>
<remarks>Data-source is 'TAB_AU_VAL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.CreateNewVehiclesInsuredValuesInAuto">
 <summary>
 It will initialize an instance of the current object and set the object´s state for Insert operation
 </summary>
 <returns>An instance of the object.</returns>
 <remarks> </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.Clone">
 <summary>
 Creates a new object that is a copy of the current instance.
 </summary>
 <returns>A new object that is a copy of this instance.</returns>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._stateInstance">
 <summary>
 Gets or sets the instancia state.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._isNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._isDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <remarks></remarks>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._isDeletedMark">
 <summary>
 Gets or sets if the object state is pending for delete or not.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._VehicleCode">
<summary>
Code of The Insured Vehicle
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._Year">
<summary>
Year of the vehicle.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._Limit">
<summary>
Commercial value of the vehicle in the year specified
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._UpdateTimeStamp">
<summary>
Computer date when the record is updated or created.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._UserCode">
<summary>
Code of the user creating or updating the record.
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._Use">
<summary>
Use
</summary>
</member>
<member name="F:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto._NewLimit">
<summary>
NewLimit
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.StateInstance">
 <summary>
 Gets or sets the instance state.
 </summary>
 <value>The state of the internal properties of the instance in an array of bytes.</value>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.IsNew">
 <summary>
 Gets or sets the object state is loaded from the database or not.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically insert the record into the database.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.IsDirty">
 <summary>
 Gets or sets the object´s state for Update operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically update the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.IsDeletedMark">
 <summary>
 Gets or sets the object´s state for Delete operation.
 </summary>
 <value>A boolean value based on the property state</value>
 <remarks>If the property value is true, it will phisically delete the record into the database. The typical "VisualTIME's historical" operation won't be handled</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.Tag">
 <summary>
 Gets or sets the object that contains data about the object.
 </summary>
 <value>An Object that contains data about the object. The default is null reference (Nothing in Visual Basic).</value>
 <returns>System.Object</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.VehicleCode">
<summary>
Code of The Insured Vehicle (SVEHCODE)..
</summary>
<remarks>Data-source is 'TAB_AU_VAL.SVEHCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.Year">
<summary>
Year of the vehicle. (NYEAR)..
</summary>
<remarks>Data-source is 'TAB_AU_VAL.NYEAR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.Limit">
<summary>
Commercial value of the vehicle in the year specified (NCAPITAL)..
</summary>
<remarks>Data-source is 'TAB_AU_VAL.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.UpdateTimeStamp">
<summary>
Computer date when the record is updated or created. (DCOMPDATE)..
</summary>
<remarks>Data-source is 'TAB_AU_VAL.DCOMPDATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.UserCode">
<summary>
Code of the user creating or updating the record. (NUSERCODE)..
</summary>
<remarks>Data-source is 'TAB_AU_VAL.NUSERCODE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.Use">
<summary>
Use (NUSE)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_AU_VAL.NUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.NewLimit">
<summary>
NewLimit (NCAPITAL_NEW)..
Source 'Seguros Afirme México-BackOffice (INSUDB)'
</summary>
<remarks>Data-source is 'TAB_AU_VAL.NCAPITAL_NEW'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.InitPropertyChanged">
 <summary>
 Initializes the trace level changes properties.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.SetPropertyChanged(System.Boolean)">
 <summary>
 It sets all the properties that were changed or not.
 </summary>
 <param name="changed">Indicator if the property should be given changed or not</param>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.IsPropertyChanged(System.String)">
 <summary>
 It lets you know if any property of the class has been changed.
 </summary>
 <param name="propertyName"></param>
 <returns>true if the property is modified; otherwise, false.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.GetEntityPropertyValue(System.String,System.String)">
 <summary>
 It allows you to get the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">Property name</param>
 <returns>The value contained by the property if present</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.SetEntityPropertyValue(System.String,System.String,System.Object)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.SetEntityPropertyValue(System.String,System.String,System.Object,System.Int32)">
 <summary>
 It allows you to set the value of a generic property, within the current class or some of the child class.
 </summary>
 <param name="entityName">Entity name</param>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <param name="index">Indicates the index for instance if the entity is a collection</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.GetPropertyValue(System.String)">
 <summary>
 It lets get the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <returns>Property value.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.SetPropertyValue(System.String,System.Object)">
 <summary>
 It sets the value of a property generically.
 </summary>
 <param name="propertyName">property name.</param>
 <param name="value">Property value.</param>
 <returns>True if the property exists, false otherwise.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.Compare(InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="VehiclesInsuredValuesInAutoItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.SaveIntance">
 <summary>
 Method that allows a guardian of the state of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.SaveIntanceChildren">
 <summary>
 Method that allows a guardian of the state of the current instance so their children.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.RestoreIntance">
 <summary>
 Method that allows a restoration of the state of the current instance
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAuto.RestoreIntanceChildren">
 <summary>
 Method that allows a restoration of the state of the current instance so their children.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAutoCollection">
 <summary>
 Collection for VehiclesInsuredValuesInAuto class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAutoCollection.Clone">
 <summary>
 Creates a new collection that is a copy of the current instance.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAutoCollection.AddVehiclesInsuredValuesInAuto">
 <summary>
 Add an instance of class 'VehiclesInsuredValuesInAuto' in the VehiclesInsuredValuesInAutoCollection.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAutoCollection.Compare(InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAutoCollection,System.Boolean,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAutoCollection.IsDirty">
 <summary>
 Gets or sets if the object state is modified or not.
 </summary>
 <value>true if the object is modified; otherwise, false.</value>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAutoCollection.SaveIntance">
 <summary>
 Method that allows you to save the state of the collection
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.VehiclesInsuredValuesInAutoCollection.RestoreIntance">
 <summary>
 Method that allows a restoration of the status of the collection
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.Coverages">
 <summary>
 Coberturas con información modificada
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.ExtraPremiumDiscounts">
 <summary>
 Recargos/Descuentos con información modificada
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.Clauses">
 <summary>
 Cláusulas con información modificada
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.ExtraPremiumDiscountsByPolicy">
 <summary>
 Recargos/Descuentos con información modificada
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.ImpairmentsExcluded">
 <summary>
 Enfermedades excluidas
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.TransactionType">
<summary>
Type of transaction performed on a policy. (NTYPE_HIST).
</summary>
<remarks>Datasource is 'POLICY_HIS.NTYPE_HIST'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.EndorsementType">
<summary>
Code of type of endorsement. (NTYPE_AMEND).
</summary>
<remarks>Datasource is 'POLICY_HIS.NTYPE_AMEND'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.AmendmentDate">
<summary>
Effective date of the Amendment.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.CauseofAmend">
<summary>
Reason for the type of endorsement (NCAUSE_AMEND).
</summary>
<remarks>Datasource is 'POLICY_HIS.NCAUSE_AMEND'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.AmendmentInformation.Compare(InMotionGIT.Policy.Entity.Contracts.AmendmentInformation,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="AmendmentInformationItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>    
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment">
 <summary>
 Clause of a policy/Certificate.
 </summary>
<remarks>Datasource is 'CLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.Consecutive">
<summary>
Consecutive number.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.ClauseCode">
<summary>
Number identifying the clause. (NCLAUSE).
</summary>
<remarks>Datasource is 'CLAUSE.NCLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.ClientID">
<summary>
Code of the client (useful only for Health Insurance). (SCLIENT).
</summary>
<remarks>Datasource is 'CLAUSE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU).
</summary>
<remarks>Datasource is 'CLAUSE.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC).
</summary>
<remarks>Datasource is 'CLAUSE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.CoverageCode">
<summary>
Code of the coverage. (NCOVER).
</summary>
<remarks>Datasource is 'CLAUSE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.Cause">
<summary>
Cause of the application of the clause (health, sports, other). (NCAUSE).
</summary>
<remarks>Datasource is 'CLAUSE.NCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.HowClauseIsDecribed">
<summary>
Indicates how the clause is described (STYPE_CLAUSE).
</summary>
<remarks>Datasource is 'CLAUSE.STYPE_CLAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.AttachedDocument">
<summary>
Path and name of the attachment (SDOC_ATTACH).
</summary>
<remarks>Datasource is 'CLAUSE.SDOC_ATTACH'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.Description">
 <summary>
 Clause description
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.TemporaryUnit">
 <summary>
 Unidad de tiempo para el período inicial temporal
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.TemporaryTime">
 <summary>
 Tiempo para el período inicial temporal
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.CompleteClientName">
 <summary>
 Complete client name
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.DescriptionOfCoverage">
 <summary>
 Description of the coverage
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.DescriptionOfModule">
 <summary>
 Description of the module
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.Selected">
 <summary>
 Element selected
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.AlreadyExist">
 <summary>
 Element exist in RiskInformation
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment.Compare(InMotionGIT.Policy.Entity.Contracts.ClauseForAmendment,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ClauseForAmendmentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendmentCollection">
 <summary>
 Collection for Clause class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ClauseForAmendmentCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ClauseForAmendmentCollection,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU).
</summary>
<remarks>Datasource is 'COVER.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.CoverageCode">
<summary>
Code of the coverage. (NCOVER).
</summary>
<remarks>Datasource is 'COVER.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.ClientID">
<summary>
Code of the client. (SCLIENT).
</summary>
<remarks>Datasource is 'COVER.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.InsuredAmount">
<summary>
Insured amount of the coverage. (NCAPITAL).
</summary>
<remarks>Datasource is 'COVER.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.Currency">
<summary>
Code of The Currency. (NCURRENCY).
</summary>
<remarks>Datasource is 'COVER.NCURRENCY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.AnnualPremium">
<summary>
Annual premium amount of the coverage. (NPREMIUM).
</summary>
<remarks>Datasource is 'COVER.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.WaitingPeriodNumber">
<summary>
Number of days/hours/months of the waiting period. (NWAIT_QUAN).
</summary>
<remarks>Datasource is 'COVER.NWAIT_QUAN'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.RatePerThousand">
<summary>
Rate to be applied (o/oo). (NRATECOVE).
</summary>
<remarks>Datasource is 'COVER.NRATECOVE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.UnitsOfWaitingPeriod">
<summary>
Units for Waiting Period (days, months). (SWAIT_TYPE).
</summary>
<remarks>Datasource is 'COVER.SWAIT_TYPE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.CauseOfAmendment">
<summary>

</summary>
<remarks>Datasource is 'COVER.NCAUSEUPD'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.DescriptionOfCoverage">
 <summary>
 Description of the coverage
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.CoverageModule">
 <summary>
 Code of The Module of The Coverage. (NMODULEC).
 </summary>
 <remarks>Datasource is 'CLAUSE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.DescriptionOfModule">
 <summary>
 Description of the module
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.CompleteClientName">
 <summary>
 Complete client name
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.ClientRole">
<summary>
Role of the client in the policy. (NROLE).
</summary>
<remarks>Datasource is 'ROLES.NROLE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.DescriptionOfRole">
 <summary>
 Description of the role
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.Consecutive">
 <summary>
 Consecutive number.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.Selected">
 <summary>
 Element selected
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.AlreadyExist">
 <summary>
 Element exist in RiskInformation
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.FreeInsuredAmount">
 <summary>
 The sum insured will be entered by the user at the moment of issuing the policy (SCACALFRI). 
 </summary>
 <remarks>Datasource is 'GEN_COVER.SCACALFRI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.Required">
 <summary>
 The coverage is mandatory when issuing the policy. (SREQUIRE). 
 </summary>
 <remarks>Datasource is 'GEN_COVER.SREQUIRE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.MaximumInsuredAmount">
 <summary>
 The max sum insured of the coverage
 </summary>
 <remarks>Datasource is 'TCOVER.NMAXCAPITAL'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment.Compare(InMotionGIT.Policy.Entity.Contracts.CoverageForAmendment,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="CoverageForAmendmentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>    
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection">
 <summary>
 Collection for CoverageForAmendment class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection.Compare(InMotionGIT.Policy.Entity.Contracts.CoverageForAmendmentCollection,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.ExtraPremiumDiscountOrTaxCode">
<summary>
Code of the extra-premium/discount/tax..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.TypeOfChangesAllowedOnExtrapremiumsDiscountsAndTaxes">
<summary>
Type of possible changes to make on extra premiums, discounts and taxes. (SCHANALLO)..
</summary>
<remarks>Data-source is 'T_INSREACA016.SCHANALLO'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Selected">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Description">
<summary>
Description of the extra-premium/discount/tax. (SDESCRIPT)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.MaximumAmount">
<summary>
Maximum amount for the extra-premium/discount/tax. (NDISEXMAX)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.MinimumAmount">
<summary>
Minimum amount for the extra-premium/discount/tax. (NDISEXMIN)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.FixedAmount">
<summary>
Fixed amount of Surcharge/discount to be added (NDISEXPRA)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Required">
<summary>
Extra-premium/discount/tax required. (SREQUIRE)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Routine">
<summary>
Name of the routine to be used to calculate and/or validate the extra-premium/discount/tax amount. (SROUTINE)..
</summary>
<remarks>Data-source is 'DISCO_EXPR.SROUTINE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.TypeOfItem">
<summary>
Extra-premium, discount or tax indicator. (SDISEXPRI)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.TypeOfItemDescript">
<summary>
Extra-premium, discount or tax indicator description. (SDISEXPRI)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.AppliesOnInsuredAmountOrPremium">
<summary>
It indicates whether the percentage is applied to the insured amount or to the premium. (SEDPERAPL)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Amount">
<summary>
 Extra premium, discount amount.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Currency">
<summary>
Code of The Currency. (NCURRENCY)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.DefinedInPolicyIndicator">
<summary>
Indicates that the extra-premium is defined in the policy. (SDEFPOL)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.AlreadyExist">
 <summary>
 Element exist in RiskInformation
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.OriginalAmount">
<summary>
 Original Amount.
</summary>    
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Reason">
<summary>
Reason why the surcharge/discount/clause was applied. (NCAUSE)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.ReasonDescript">
<summary>
Reason why the surcharge/discount/clause was applied. (NCAUSE)..
</summary>    
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.AcceptedSurcharge">
<summary>
It indicates that the surcharge was accepted by the insured. (SAGREE)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.MaximumPercentageOfDecrease">
<summary>
Maximum percentage by which the extra-premium/discount/tax may be decreased. (NDISEXSUBPER)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.MaximumPercentageOfIncrease">
<summary>
Maximum percentage of increase for the extra-premium/discount/tax. (NDISEXADDPER)..
</summary>    
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Percentage">
<summary>
Extra-premium/discount/tax percentage to be applied. (NPERCENT)..
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.OriginalPercentage">
<summary>
Extra-premium/discount/tax original percentage to be applied. (NPERCENT)..
</summary>
<remarks>Data-source is 'DISC_XPREM.NPERCENT'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment.Compare(InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendment,System.Boolean,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="DiscountSurchargeAmendmentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <param name="excludeAuditProperties">It indicates whether the properties audit included in the comparison.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendmentCollection">
 <summary>
 Collection for CoverageForAmendment class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendmentCollection.Compare(InMotionGIT.Policy.Entity.Contracts.DiscountSurchargeAmendmentCollection,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment">
 <summary>
 Surcharges / Discounts for amendment.
 </summary>
<remarks>Datasource is 'INSURED_EXPDIS'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.Consecutive">
<summary>
Consecutive number.
</summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.Division">
<summary>
Code of the &#39;division&#39; within the Group. (NGROUP_INSU).
</summary>
<remarks>Datasource is 'INSURED_EXPDIS.NGROUP_INSU'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.ClientID">
<summary>
Code of the client. (SCLIENT).
</summary>
<remarks>Datasource is 'INSURED_EXPDIS.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.ExtraPremiumDiscountCode">
 <summary>
 Extra premium / Discount code
 </summary>
 <remarks>Datasource is 'INSURED_EXPDIS.NDISEXPRC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.CoverageModule">
<summary>
Code of The Module of The Coverage. (NMODULEC).
</summary>
<remarks>Datasource is 'INSURED_EXPDIS.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.CoverageCode">
<summary>
Code of the coverage. (NCOVER).
</summary>
<remarks>Datasource is 'INSURED_EXPDIS.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.TypeOfItem">
<summary>
Extra-premium, discount or tax indicator. (SDISEXPRI).
</summary>
<remarks>Datasource is 'INSURED_EXPDIS.SDISEXPRI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.Rate">
<summary>
Surcharge/discount rate (the unit indicated in the field is expressed in sUnit). (NRATE).
</summary>
<remarks>Datasource is 'INSURED_EXPDIS.NRATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.Amount">
<summary>
Fixed amount to be added as a surcharge/discount (NAMOUNT).
</summary>
<remarks>Datasource is 'INSURED_EXPDIS.NAMOUNT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.Cause">
<summary>
Extra-Rating/discount cause. (NCAUSE).
</summary>
<remarks>Datasource is 'INSURED_EXPDIS.NCAUSE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.Description">
 <summary>
 Extra premium / discount description
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.TemporaryUnit">
 <summary>
 Unidad de tiempo para el período inicial temporal
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.TypeOfUnit">
 <summary>
 Unidad de tiempo para el período inicial temporal
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.TemporaryTime">
 <summary>
 Tiempo para el período inicial temporal
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.DescriptionOfCoverage">
 <summary>
 Description of the coverage
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.DescriptionOfModule">
 <summary>
 Description of the module
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.CompleteClientName">
 <summary>
 Complete client name
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.Selected">
 <summary>
 Element selected
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.AlreadyExist">
 <summary>
 Element exist in RiskInformation
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.ExtraPremiumPermanentOrTemporary">
 <summary>
 Permanent/temporary extra premium indicator. (SPERM_TEMP).
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.EndingDateOfExtraPremiumOrDiscount">
 <summary>
 Ending date of duration of the extra premium/discount. (DDATE_TO).
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.ExtraPremiumOrDiscountEffectiveDate">
<summary>
Effective date of the extra premium/discount. (DDATE_FR).
</summary>
<remarks>Data-source is 'INSURED_EXPDIS.DDATE_FR'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.SUNIT">
 <summary>
 Tipo de unidad. // Type of unit.
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment.Compare(InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendment,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ExtraPremiumDiscountForAmendmentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>    
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendmentCollection">
 <summary>
 Collection for ExtraPremiumDiscountByInsured class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendmentCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ExtraPremiumDiscountForAmendmentCollection,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.Consecutive">
 <summary>
 Consecutive number.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.Description">
 <summary>
 Impairment description
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.Impairment">
 <summary>
 Impairment code
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.ClientID">
 <summary>
 Code of the client (useful only for Health Insurance). (SCLIENT).
 </summary>
 <remarks>Datasource is 'CLAUSE.SCLIENT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.CompleteClientName">
 <summary>
 Complete client name
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.CoverageCode">
 <summary>
 Code of the coverage. (NCOVER).
 </summary>
 <remarks>Datasource is 'CLAUSE.NCOVER'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.CoverageModule">
 <summary>
 Code of The Module of The Coverage. (NMODULEC).
 </summary>
 <remarks>Datasource is 'CLAUSE.NMODULEC'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.DescriptionOfCoverage">
 <summary>
 Description of the coverage
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.DescriptionOfModule">
 <summary>
 Description of the module
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.Selected">
 <summary>
 Element selected
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.AlreadyExist">
 <summary>
 Element exist in RiskInformation
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.RatingTable">
<summary>
Code of the rating table used for the product. (NTARIFF).
</summary>
<remarks>Data-source is 'TAB_AM_EXC.NTARIFF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.EndingDate">
<summary>
Date up to which the illness will remain excluded. (DEND_DATE).
</summary>
<remarks>Data-source is 'TAB_AM_EXC.DEND_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.ExclusionDate">
<summary>
Date when the disease was excluded. (DINIT_DATE).
</summary>
<remarks>Data-source is 'TAB_AM_EXC.DINIT_DATE'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.DiseaseEnteredByExclusionPreexistence">
<summary>
Indicates whether a disease is being entered by exclusion or pre-existence (STYPE_EXC).
</summary>
<remarks>Data-source is 'TAB_AM_EXC.STYPE_EXC'.</remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment.Compare(InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendment,System.Boolean)">
 <summary>
 Compare a class, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="ImpairmentExclusionForAmendmentItem">Instance to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance.</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendmentCollection">
 <summary>
 Collection for Clause class
 </summary>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendmentCollection.Compare(InMotionGIT.Policy.Entity.Contracts.ImpairmentExclusionForAmendmentCollection,System.Boolean)">
 <summary>
 Compare a collection, regarding the current, generating a summary of the properties changed.
 </summary>
 <param name="items">Collection to compare.</param>
 <param name="applyChange">It indicates that the detected changes are applied to the current instance..</param>
 <returns>Summary of the properties changed.</returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role">
 <summary>
 Role of the client in the policy/certificate.
 </summary>
 <remarks>
 This class is associated with the table 'ROLES'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.ClientID">
 <summary>
 Code of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SCLIENT' on the table 'ROLES'. Lookup information from table 'CLIENT'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.CheckDigit">
 <summary>
 Verificator digit of the client code
 </summary>
 <remarks>
 This property is associated with the field 'SDIGIT' on the table 'CLIENT'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.ProducerCode">
 <summary>
 Code of the producer.
 </summary>
 <remarks>
 This property is associated with the field 'NINTERMED' on the table 'ROLES'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.FirstName">
 <summary>
 First name and middle name of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SFIRSTNAME' on the table 'CLIENT'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.LastName">
 <summary>
 Last name of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SLASTNAME' on the table 'CLIENT'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.LastName2">
 <summary>
 Last name (2) of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SLASTNAME2' on the table 'CLIENT'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.Gender">
 <summary>
 Gender of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SSEXCLIEN' on the table 'ROLES'. Lookup information from table 'TABLE18'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.BirthDate">
 <summary>
 Date of birth of the client.
 </summary>
 <remarks>
 This property is associated with the field 'DBIRTHDATE' on the table 'ROLES'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Base.Role.SmokerIndicator">
 <summary>
 Smoker client indicator.
 </summary>
 <remarks>
 This property is associated with the field 'SSMOKING' on the table 'ROLES'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Automobile">
 <summary>
 Particular information on automobile policies.
 </summary>
 <remarks>
 This class is associated with the table 'AUTO'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Automobile.LicensePlate">
 <summary>
 Number of the License Plate.
 </summary>
 <remarks>
 This property is associated with the field 'SREGIST' on the table 'AUTO'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Automobile.CheckDigit">
 <summary>
 Verificator digit of the License Plate
 </summary>
 <remarks>
 This property is associated with the field 'SDIGIT' on the table 'AUTO'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Automobile.LicensePlateType">
 <summary>
 Type of License Plate.
 </summary>
 <remarks>
 This property is associated with the field 'SLICENSE_TY' on the table 'AUTO'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Automobile.Chassis">
 <summary>
 Number of the vehicle chassis.
 </summary>
 <remarks>
 This property is associated with the field 'SCHASSIS' on the table 'AUTO'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Automobile.EngineSerialNumber">
 <summary>
 Number identifying the engine of the insured vehicle.
 </summary>
 <remarks>
 This property is associated with the field 'SMOTOR' on the table 'AUTO'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Automobile.ValueOfTheVehicle">
 <summary>
 Value of the insured vehicle.
 </summary>
 <remarks>
 This property is associated with the field 'NVEH_VALOR' on the table 'AUTO'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Automobile.VehicleCode">
 <summary>
 Code of The Insured Vehicle
 </summary>
 <remarks>
 This property is associated with the field 'SVEHCODE' on the table 'AUTO'. Lookup information from table 'TAB_AU_VEH'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Automobile.YearOfManufactured">
 <summary>
 Year when the vehicle was manufactured.
 </summary>
 <remarks>
 This property is associated with the field 'NYEAR' on the table 'AUTO'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Life">
 <summary>
 Particular data on life policies.
 </summary>
 <remarks>
 This class is associated with the table 'LIFE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Life.TypeOfInsurancePeriod">
 <summary>
 Type of Insurance Period.
 </summary>
 <remarks>
 This property is associated with the field 'NTYPDURINS' on the table 'LIFE'. Lookup information from table 'TABLE5589'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Life.InsuranceDuration">
 <summary>
 Duration of insurance.
 </summary>
 <remarks>
 This property is associated with the field 'NINSUR_TIME' on the table 'LIFE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Life.InsuredAmount">
 <summary>
 Insured amount for calculation of the total annual premium.
 </summary>
 <remarks>
 This property is associated with the field 'NCAPITAL_CA' on the table 'LIFE'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.ParticularData">
 <summary>
 Particular information on  policies.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.ParticularData.Automobile">
 <summary>
 Particular information on automobile policies.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.ParticularData.Life">
 <summary>
 Particular data on life policies.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Result.Billing">
 <summary>
 .
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Result.Coverage">
 <summary>
 Coverages of a policy.
 </summary>
 <remarks>
 This class is associated with the table 'COVER'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Coverage.SelectedByDefault">
<summary>
Indicator of &#34;selected by default&#34; for the Treatment of policy. (SDEFAULTI).
</summary>
<remarks>Datasource is 'TCOVER.SDEFAULTI'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Coverage.CoverageCode">
 <summary>
 Code of the coverage.
 </summary>
 <remarks>
 This property is associated with the field 'NCOVER' on the table 'COVER'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Coverage.Description">
<summary>
Description of the coverage (SDESCRIPT).
</summary>
<remarks>Datasource is 'TCOVER.SDESCRIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Coverage.Currency">
 <summary>
 Code of The Currency.
 </summary>
 <remarks>
 This property is associated with the field 'NCURRENCY' on the table 'COVER'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Coverage.InsuredAmount">
 <summary>
 Insured amount of the coverage.
 </summary>
 <remarks>
 This property is associated with the field 'NCAPITAL' on the table 'COVER'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Coverage.RatePerThousand">
 <summary>
 Rate to be applied (o/oo).
 </summary>
 <remarks>
 This property is associated with the field 'NRATECOVE' on the table 'COVER'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Coverage.AnnualPremium">
 <summary>
 Annual premium amount of the coverage.
 </summary>
 <remarks>
 This property is associated with the field 'NPREMIUM' on the table 'COVER'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Result.CoverageRating">
 <summary>
 .
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium">
 <summary>
 Premium bills.
 </summary>
 <remarks>
 This class is associated with the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.BillNumber">
 <summary>
 Number identifying the bill
 </summary>
 <remarks>
 This property is associated with the field 'NRECEIPT' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.ClientID">
 <summary>
 Code of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SCLIENT' on the table 'PREMIUM'. Lookup information from table 'CLIENT'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.RecordStatus">
 <summary>
 Status of the record.
 </summary>
 <remarks>
 This property is associated with the field 'SSTATUSVA' on the table 'PREMIUM'. Lookup information from table 'TABLE181'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.RecordStatusDescript">
 <summary>
 Status of the record.
 </summary>
 <remarks>
 This property is associated with the field 'SDESCRIPT' on the table 'TABLE181'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.EffectiveDate">
 <summary>
 Effective date of the bill coverage period.
 </summary>
 <remarks>
 This property is associated with the field 'DEFFECDATE' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.EndingDate">
 <summary>
 Ending date of the bill.
 </summary>
 <remarks>
 This property is associated with the field 'DEXPIRDAT' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.CommissionAmount">
 <summary>
 Total commission amount of the bill.
 </summary>
 <remarks>
 This property is associated with the field 'NCOMAMOU' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.ExchangeRate">
 <summary>
 Exchange rate used to convert the premium to local currency.
 </summary>
 <remarks>
 This property is associated with the field 'NEXCHANGE' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.AnnualPremium">
 <summary>
 Premium amount.
 </summary>
 <remarks>
 This property is associated with the field 'NPREMIUM' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.LiquidPremium">
 <summary>
 Liquid premium amount.
 </summary>
 <remarks>
 This property is associated with the field 'NPREMIUML' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.NetPremium">
 <summary>
 Net premium amount.
 </summary>
 <remarks>
 This property is associated with the field 'NPREMIUMN' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.TaxAmount">
 <summary>
 Tax amount of this bill.
 </summary>
 <remarks>
 This property is associated with the field 'NTAXAMOU' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.ProducerCode">
 <summary>
 Code of the producer.
 </summary>
 <remarks>
 This property is associated with the field 'NINTERMED' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.Currency">
 <summary>
 Code of The Currency.
 </summary>
 <remarks>
 This property is associated with the field 'NCURRENCY' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.PeriodNumber">
 <summary>
 Period number.
 </summary>
 <remarks>
 This property is associated with the field 'NPERIOD' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.DueDate">
 <summary>
 Due Date of payment of the bill
 </summary>
 <remarks>
 This property is associated with the field 'DLIMITDATE' on the table 'PREMIUM'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.Premium.PremiumDetails">
 <summary>
 Detail on premium receipts A record for every element(Cover/extra-premium/discount/tax) billed in a premium invoice. The algebraic sum of the premium amounts recorded in this file is correspond with the total premium of the receipt.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail">
 <summary>
 Detail on premium bills.
 </summary>
 <remarks>
 This class is associated with the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.ConsecutiveNumber">
 <summary>
 Consecutive number of detail record for a premium bill.
 </summary>
 <remarks>
 This property is associated with the field 'NID_BILL' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.AddsToObtainInsuredAmount">
 <summary>
 Indicator of the addition to obtain the sum insured
 </summary>
 <remarks>
 This property is associated with the field 'SADDSUINI' on the table 'DETAIL_PRE'. The values of this property are stored in the table as follows, true it is 1 and false as 2 for the case where the value in the table is null property will have the value false.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.TypeOfDetailRecord">
 <summary>
 Type of premium detail record.
 </summary>
 <remarks>
 This property is associated with the field 'STYPE_DETAI' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.DetailItemCode">
 <summary>
 Code of the item detailed.
 </summary>
 <remarks>
 This property is associated with the field 'NDET_CODE' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.InsuredAmount">
 <summary>
 Sum insured amount of the policy/certificate.
 </summary>
 <remarks>
 This property is associated with the field 'NCAPITAL' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.CommissionPercentage">
 <summary>
 Commission percentage.
 </summary>
 <remarks>
 This property is associated with the field 'NCOMMI_RATE' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.CommisionAmount">
 <summary>
 Commission amount.
 </summary>
 <remarks>
 This property is associated with the field 'NCOMMISION' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.Premium">
 <summary>
 Premium amount (included in the bill).
 </summary>
 <remarks>
 This property is associated with the field 'NPREMIUM' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.BillingItem">
 <summary>
 Billing item.
 </summary>
 <remarks>
 This property is associated with the field 'NBILL_ITEM' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.AnnualPremium">
 <summary>
 Annual premium amount.
 </summary>
 <remarks>
 This property is associated with the field 'NPREMANUAL' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.AddsToObtainBaseForTaxes">
 <summary>
 Indicator of the addition to obtain taxes
 </summary>
 <remarks>
 This property is associated with the field 'SADDTAX' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.AnnualCommissionAmount">
 <summary>
 Annual commission amount.
 </summary>
 <remarks>
 This property is associated with the field 'NCOMANUAL' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.TaxablePremium">
 <summary>
 Amount of the detail (taxable).
 </summary>
 <remarks>
 This property is associated with the field 'NPREMIUMA' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.ExemptPremium">
 <summary>
 Amount of the detail (exempt).
 </summary>
 <remarks>
 This property is associated with the field 'NPREMIUME' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.TaxAmount">
 <summary>
 Tax amount included in the premium of the coverage.
 </summary>
 <remarks>
 This property is associated with the field 'NTAXAMOUNT' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.CoverageExtraPremium">
 <summary>
 Total amount of surcharge for the coverage.
 </summary>
 <remarks>
 This property is associated with the field 'NRECAMOUNT' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.DiscountAmount">
 <summary>
 Discount amount related to the coverage premium.
 </summary>
 <remarks>
 This property is associated with the field 'NDESCAMOUNT' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.RecordIdentifierNumber">
 <summary>
 Record identifier number, which is associated the Rec / Desc / Imp
 </summary>
 <remarks>
 This property is associated with the field 'NREL_IDBILL' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Result.PremiumDetail.ClientID">
 <summary>
 Code of the client.
 </summary>
 <remarks>
 This property is associated with the field 'SCLIENT' on the table 'DETAIL_PRE'.
 </remarks>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation">
 <summary>
 Certificates of a Policy (general).
 </summary>
 <remarks>
 This class is associated with the table 'CERTIFICAT'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation.LineOfBusiness">
 <summary>
 Code of the line of business.
 </summary>
 <remarks>
 This property is associated with the field 'NBRANCH' on the table 'CERTIFICAT'. Lookup information from table 'TABLE10'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation.ProductCode">
 <summary>
 Code of the product.
 </summary>
 <remarks>
 This property is associated with the field 'NPRODUCT' on the table 'CERTIFICAT'. Lookup information from table 'PRODMASTER'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation.PaymentFrequency">
 <summary>
 Payment frequency of the premium.
 </summary>
 <remarks>
 This property is associated with the field 'NPAYFREQ' on the table 'CERTIFICAT'. Lookup information from table 'TABLE36'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation.CoverageModule">
 <summary>
 Code of The Module of The Coverage.
 </summary>
 <remarks>
 This property is associated with the field 'NMODULEC' on the table 'MODULES'. Lookup information from table 'TAB_MODUL'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation.PrimaryInsured">
 <summary>
 Primary insured in the policy/certificate.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation.PrimaryProducer">
 <summary>
 Primary producer in the policy/certificate.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation.Roles">
 <summary>
 Role of the client in the policy/certificate A record for every role performed by the client in each policy (holder, insured,.) Keep historical data.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.RiskInformation.ParticularData">
 <summary>
 Particular information on  policies.
 </summary>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Models.Role">
 <summary>
 Others roles of the client in the policy/certificate.
 </summary>
 <remarks>
 This class is associated with the table 'ROLES'.
 </remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Models.Role.ClientRole">
 <summary>
 Role of the client in the policy.
 </summary>
 <remarks>
 This property is associated with the field 'NROLE' on the table 'ROLES'. Lookup information from table 'TABLE12'.
 </remarks>
</member>
<member name="M:InMotionGIT.Policy.Entity.Contracts.Helpers.Calculate.MonthsByPayFrequency(InMotionGIT.Product.Entity.Contracts.Enumerations.EnumPaymentFrequency,System.Int32)">
 <summary>
 Retorna la cantidad de meses contenidos en una frecuencia dada
 </summary>
 <param name="paymentFrequency">Payment frequency</param>
 <param name="quotas">Quota quantity</param>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.Billing.Errors">
 <summary>
 Lista de errores generados por el proceso
 </summary>
 <returns></returns>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.CoverageRating.Errors">
 <summary>
 Lista de errores generados por el proceso
 </summary>
 <returns></returns>
</member>
<member name="T:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded">
 <summary>
 Summary of the policy / certificate loaded.
 </summary>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded.PolicyID">
<summary>
Number identifying the Policy/Quotation/Application. (NPOLICY).
</summary>
<remarks>Data source is 'CERTIFICAT.NPOLICY'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded.CertificateID">
<summary>
Number identifying the certificate. (NCERTIF).
</summary>
<remarks>Data source is 'CERTIFICAT.NCERTIF'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded.InsuredAmount">
<summary>
Insured amount of the policy/certificate. (NCAPITAL).
</summary>
<remarks>Data source is 'CERTIFICAT.NCAPITAL'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded.AnnualPremium">
<summary>
Certificate annual premium amount. (NPREMIUM).
</summary>
<remarks>Data source is 'CERTIFICAT.NPREMIUM'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded.StatusOfPolicyCertificate">
<summary>
Policy/Certificate Status. (SSTATUSVA).
</summary>
<remarks>Data source is 'CERTIFICAT.SSTATUSVA'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded.StatusOfPolicyCertificateEnum">
<summary>
Policy/Certificate Status.
</summary>
<remarks>This property use a enumeration based on property 'StatusOfPolicyCertificate'</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded.BillNumber">
<summary>
Number identifying the bill (NRECEIPT).
</summary>
<remarks>Data source is 'PREMIUM.NRECEIPT'.</remarks>
</member>
<member name="P:InMotionGIT.Policy.Entity.Contracts.Rating.PolicyLoaded.Errors">
 <summary>
 Lista de errores generados por el proceso
 </summary>
 <returns></returns>
</member>
</members>
</doc>
