<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <connectionStrings>
    <add name="EntityServices" connectionString="Data Source=TIME;User ID=INSUDB;Password=Pr0tecDeV;Min Pool Size=5;Max Pool Size=50;Connection Lifetime=120;Incr Pool Size=3;Decr Pool Size=1;Connection Timeout=5" providerName="Oracle.DataAccess.Client" />
  </connectionStrings>
  <appSettings>
    <!--NBATCH OPERACION MASIVO PORTFOLIO-->
    <add key="NbatchPorfolio" value="1500" />
    <!--NBATCH OPERACION MASIVO ENDORSEMENT-->
    <add key="NbatchEndorsement" value="1501" />
    <!--NBATCH OPERACION MASIVO COLLECTION-->
    <add key="NbatchCollection" value="1502" />
    <!--NBATCH OPERACION MASIVO CLAIMS-->
    <add key="NbatchClaims" value="1503" />
    <!--Frontoffice Trace/Log/Errors-->
    <!-- Ruta usada para almacenar los archivo generado por el llamado a traza, error, warnings usando la clase LogHandler -->
    <add key="Path.Logs" value="D:\VisualTimeNet\Temp\logs"/>
    <!-- Habilita (True) o no (False) la creación de traza en el código -->
    <add key="FrontOffice.Debug" value="true"/>
    <!-- Habilita (True) o no (False) la creación de traza por cual quien acceso a datos por medio de la libreria DataAccessLayer -->
    <add key="DataAccessLayer.Debug" value="true"/>
    <!-- Indica si la traza solo se debe hace en disco (File) o si adicionalmente se hara en la base de de datos -->
    <add key="FrontOffice.Debug.Mode" value="File"/>
    <!-- Prefijo utilizado en los archivos creados para manejo de log de errores, trazas o advertencias. -->
    <add key="Logs.Prefix" value="extendedservice"/>
    <!--End Frontoffice Trace/Log/Errors-->
    <!--ABCDDIN-->
    <add key="urlHighInformationABCDIN" value="http://webservice/AplicacionDin/PagosDin.asp" />
    <add key="urlLowInformationABCDIN" value="http://webservice/AplicacionDin/RenunciasDin.asp" />
    <add key="Path.TFiles" value="D:\VisualTIMENet\Temp\TFiles\" />
    <!--END ABCDDIN-->
  </appSettings>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Oracle.DataAccess" publicKeyToken="89B483F429C47342" culture="neutral" />
        <bindingRedirect oldVersion="2.0.0.0-99.0.0.0" newVersion="4.122.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.6" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" strict="false" explicit="true" targetFramework="4.5"/>
    <pages controlRenderingCompatibilityVersion="4.0"/>
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="GenericServiceBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
        <!--Service Behaviors para canal seguro-->
        <behavior name="httpsServiceBehavior">
          <serviceMetadata httpsGetEnabled="true" httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceCredentials>
            <serviceCertificate findValue="54.226.252.216" x509FindType="FindBySubjectName" storeLocation="LocalMachine" storeName="My"/>
          </serviceCredentials>
        </behavior>
        <!--STS behavior configuration for TOKEN-->
        <behavior name="customValidation">
          <serviceMetadata httpGetEnabled="True"/>
          <serviceDebug includeExceptionDetailInFaults="True"/>
          <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="host.AuthorizationManager, host"/>
        </behavior>
        <behavior name="corsBehavior">
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="false" httpsGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <!--<serviceCredentials>
            serviceCertificate findValue="MyWebSite" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName"/>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="TestWcfService.CustomLoginValidator, TestWcfService"/>
          </serviceCredentials>-->
          <!--Para usar el STS, se debe descomentar la siguiente sección-->
          <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="host.AuthorizationManager, host"/>
        </behavior>
        <behavior>
          <!-- To avoid disclosing metadata information, 
                        set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, 
                        set the value below to true.  Set to false before deployment 
                        to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="RESTBehavior">
          <dataContractSerializer maxItemsInObjectGraph="6553600"/>
          <webHttp helpEnabled="true"/>
          <!--<clientCredentials type="host.AuthorizationManager, host" />-->
        </behavior>
        <behavior name="corsBehavior">
          <!-- Para colocar los servicios de tipo REST con preflight calls, descomentar la siguiente línea -->
          <!-- Adicional colocar el METHOD de la interfaz en "POST" -->
          <webHttp helpEnabled="true"/>
          <!-- Para que los cliente puedan hacer llamadas tipo JSONP desactivar la siguiente casilla -->
          <!-- Adicional colocar el METHOD de la interfaz en "GET" -->
          <!--<enableWebScript/>-->
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicBinding" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:10:00" sendTimeout="00:02:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="9000000" maxBufferPoolSize="9000000" maxReceivedMessageSize="9000000" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="2147483647" maxBytesPerRead="4096" maxNameTableCharCount="2147483647"/>
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm=""/>
            <message clientCredentialType="UserName" algorithmSuite="Default"/>
          </security>
        </binding>
		<binding name="BasicBinding_https" closeTimeout="00:02:00" openTimeout="00:02:00" receiveTimeout="00:10:00" sendTimeout="00:02:00"  maxBufferSize="2147483647" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="2147483647" maxBytesPerRead="4096" maxNameTableCharCount="2147483647"/>
		  <security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
	  </basicHttpBinding>
      <webHttpBinding>
        <binding name="corsBinding" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" crossDomainScriptAccessEnabled="true">
        <!-- HTTP -->
        <!--<security mode="None" />-->
		<!-- HTTPS -->
		  <security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
      </webHttpBinding>
	  <wsHttpBinding>
        <binding name="wsHttpEndpointBinding" maxReceivedMessageSize="2147483647">
          <security mode="Transport">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
      </wsHttpBinding> 
    </bindings>
    <client>
      <endpoint address="https://54.226.252.216:8085/FrontOffice/EventLogManagerService.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="EventLogClient.IManager" name="EventLogManagerEndPoint"/>      
      <endpoint address="https://54.226.252.216:8085/BackOffice/PolicyReinsuranceManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="ReinsuranceManager.IReinsuranceManagerService" name="BasicHttpBinding_IReinsuranceManagerService" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/ErrorManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="ErrorManager.IErrorManager" name="BasicHttpBinding_IErrorManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/RiskManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="Client.IRiskManager" name="BasicHttpBinding_IRiskManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/AddressManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="AddressManager.IAddressManager" name="BasicHttpBinding_IAddressManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/ClaimManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="Client.IClaimManager" name="BasicHttpBinding_IClaimManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/ClientManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="Client.IClientManager" name="BasicHttpBinding_IClientManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/GeneralManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="GeneralManager.IGeneralManager" name="BasicHttpBinding_IGeneralManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/ImageManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="ImageManager.IImageManager" name="BasicHttpBinding_IImageManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/PhoneManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="PhoneManager.IPhoneManager" name="BasicBinding" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/ProducerManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="Client.IProducerManager" name="BasicHttpBinding_IProducerManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/ProductManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="ProductManager.IProductManager" name="BasicHttpBinding_IProductManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/SecurityManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="SecurityManager.ISecurityManager" name="BasicHttpBinding_ISecurityManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/NoteManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="NoteManager.INoteManager" name="BasicHttpBinding_INoteManager" />
      <endpoint address="https://54.226.252.216:8085/BackOffice/ServiceOrderManager.svc/bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="ServiceOrderManager.IServiceOrderManager" name="BasicHttpBinding_IServiceOrderManager" />
	</client>
    <services>
      <!--Extended Service-->
      <service behaviorConfiguration="httpsServiceBehavior" name="InMotionGIT.Extended.Service.ExtendedService">
        <endpoint address="bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="InMotionGIT.Extended.Service.IExtendedService" />
     	  <endpoint address="REST" behaviorConfiguration="RESTBehavior" binding="webHttpBinding" bindingConfiguration="corsBinding" contract="InMotionGIT.Extended.Service.IExtendedService"/>
      </service>
      <!--Extended Massive-->
        <service behaviorConfiguration="httpsServiceBehavior" name="InMotionGIT.Extended.Service.ExtendedServiceMassive">
          <endpoint address="bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="InMotionGIT.Extended.Service.IExtendedServiceMassive" />
          <endpoint address="REST" behaviorConfiguration="RESTBehavior" binding="webHttpBinding" bindingConfiguration="corsBinding" contract="InMotionGIT.Extended.Service.IExtendedServiceMassive"/>
        </service>
      <!--Extended General-->
      <service behaviorConfiguration="httpsServiceBehavior" name="InMotionGIT.Extended.Service.ExtendedServiceGeneral">
        <endpoint address="bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="InMotionGIT.Extended.Service.IExtendedServiceGeneral" />
        <endpoint address="REST" behaviorConfiguration="RESTBehavior" binding="webHttpBinding" bindingConfiguration="corsBinding" contract="InMotionGIT.Extended.Service.IExtendedServiceGeneral"/>
      </service>
      <!--Extended Collecting-->
      <service behaviorConfiguration="httpsServiceBehavior" name="InMotionGIT.Extended.Service.ExtendedServiceCollecting">
        <endpoint address="bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="InMotionGIT.Extended.Service.IExtendedServiceCollecting" />
        <endpoint address="REST" behaviorConfiguration="RESTBehavior" binding="webHttpBinding" bindingConfiguration="corsBinding" contract="InMotionGIT.Extended.Service.IExtendedServiceCollecting"/>
      </service>
      <!--Extended ClientManager-->
      <service behaviorConfiguration="httpsServiceBehavior" name="InMotionGIT.Extended.Service.ExtendedServiceClientManager">
        <endpoint address="bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="InMotionGIT.Extended.Service.IExtendedServiceClientManager" />
        <endpoint address="REST" behaviorConfiguration="RESTBehavior" binding="webHttpBinding" bindingConfiguration="corsBinding" contract="InMotionGIT.Extended.Service.IExtendedServiceClientManager"/>
      </service>
      <!--Extended Product-->
      <service behaviorConfiguration="httpsServiceBehavior" name="InMotionGIT.Extended.Service.ExtendedServiceProduct">
        <endpoint address="bs" binding="basicHttpBinding" bindingConfiguration="BasicBinding_https" contract="InMotionGIT.Extended.Service.IExtendedServiceProduct" />
        <endpoint address="REST" behaviorConfiguration="RESTBehavior" binding="webHttpBinding" bindingConfiguration="corsBinding" contract="InMotionGIT.Extended.Service.IExtendedServiceProduct"/>
      </service>
    </services>
    <serviceHostingEnvironment  multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>
</configuration>
